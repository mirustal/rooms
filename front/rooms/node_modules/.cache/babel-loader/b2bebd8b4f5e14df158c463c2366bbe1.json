{"ast":null,"code":"var _jsxFileName = \"/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/ChannelView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Icon16DeleteOutline, Icon16PenOutline, Icon24RefreshOutline, Icon28VolumeOutline } from \"@vkontakte/icons\";\nimport { IconButton, SimpleCell, Tooltip } from \"@vkontakte/vkui\";\nimport { joinCall } from \"../../../bridge/bridgeLib\";\nimport { Locales } from \"../../../locales/locales\";\nimport { AlertManagerContext, TipAlert } from \"../../contexts/AlertProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChannelView(_ref) {\n  _s();\n\n  let {\n    channel,\n    channelIndex,\n    renameToChannel,\n    editModeActive,\n    deleteToChannel,\n    refreshChannel,\n    userIsAdmin\n  } = _ref;\n  const [isTipShown, setTipShown] = useState(channelIndex === 0);\n  const alerts = useContext(AlertManagerContext);\n  useEffect(() => {\n    updateTipCounter();\n  }, []);\n\n  const updateTipCounter = () => {\n    const counter = parseInt(localStorage.getItem(\"tipCounter\") || \"0\", 10);\n    setTipShown(counter <= 3);\n    localStorage.setItem(\"tipCounter\", (counter + 1).toString());\n  };\n\n  const joinChannel = () => joinCall(channel.joinlink, () => {});\n\n  const handleChannelClick = () => {\n    if (!userIsAdmin) {\n      joinChannel();\n      return;\n    }\n\n    manageFirstCall();\n  };\n\n  const manageFirstCall = () => {\n    if (localStorage.getItem(\"isFirstCall\") === null) {\n      localStorage.setItem(\"isFirstCall\", \"false\");\n      alerts.showAlert(TipAlert({\n        message: Locales.Hints.DontKillCall,\n        alertManager: alerts,\n        onClose: joinChannel\n      }));\n      return;\n    }\n\n    joinChannel();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SimpleCell, {\n    before: /*#__PURE__*/_jsxDEV(Icon28VolumeOutline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this),\n    after: userIsAdmin && /*#__PURE__*/_jsxDEV(AdminActions, {\n      isTipShown: isTipShown,\n      setTipShown: setTipShown,\n      refreshChannel: refreshChannel,\n      channel: channel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }, this),\n    onClick: handleChannelClick,\n    children: /*#__PURE__*/_jsxDEV(ChannelName, {\n      channel: channel,\n      editModeActive: editModeActive,\n      renameToChannel: renameToChannel,\n      deleteToChannel: deleteToChannel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChannelView, \"Rgfvevm7N77bHWxkzQfUotp6gBM=\");\n\n_c = ChannelView;\n\nfunction AdminActions(_ref2) {\n  let {\n    isTipShown,\n    setTipShown,\n    refreshChannel,\n    channel\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    isShown: isTipShown,\n    text: Locales.Hints.RefreshChannel,\n    onClick: e => e.stopPropagation(),\n    onClose: () => setTipShown(false),\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => refreshChannel(channel.id),\n      children: /*#__PURE__*/_jsxDEV(Icon24RefreshOutline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = AdminActions;\n\nfunction ChannelName(_ref3) {\n  let {\n    channel,\n    editModeActive,\n    renameToChannel,\n    deleteToChannel\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: [\"#\", channel.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), editModeActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: renameToChannel,\n        children: /*#__PURE__*/_jsxDEV(Icon16PenOutline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          color: 'red'\n        },\n        onClick: () => deleteToChannel(channel.id),\n        children: /*#__PURE__*/_jsxDEV(Icon16DeleteOutline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ChannelName;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ChannelView\");\n$RefreshReg$(_c2, \"AdminActions\");\n$RefreshReg$(_c3, \"ChannelName\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Icon16DeleteOutline","Icon16PenOutline","Icon24RefreshOutline","Icon28VolumeOutline","IconButton","SimpleCell","Tooltip","joinCall","Locales","AlertManagerContext","TipAlert","ChannelView","channel","channelIndex","renameToChannel","editModeActive","deleteToChannel","refreshChannel","userIsAdmin","isTipShown","setTipShown","alerts","updateTipCounter","counter","parseInt","localStorage","getItem","setItem","toString","joinChannel","joinlink","handleChannelClick","manageFirstCall","showAlert","message","Hints","DontKillCall","alertManager","onClose","AdminActions","RefreshChannel","e","stopPropagation","id","ChannelName","display","alignItems","name","color"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/ChannelView.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Icon16DeleteOutline,\n  Icon16PenOutline,\n  Icon24RefreshOutline,\n  Icon28VolumeOutline,\n} from \"@vkontakte/icons\";\nimport { IconButton, SimpleCell, Tooltip } from \"@vkontakte/vkui\";\nimport { joinCall } from \"../../../bridge/bridgeLib\";\nimport { Locales } from \"../../../locales/locales\";\nimport { AlertManagerContext, TipAlert } from \"../../contexts/AlertProvider\";\n\nexport default function ChannelView({ channel, channelIndex, renameToChannel, editModeActive, deleteToChannel, refreshChannel, userIsAdmin }) {\n  const [isTipShown, setTipShown] = useState(channelIndex === 0);\n  const alerts = useContext(AlertManagerContext);\n\n  useEffect(() => {\n    updateTipCounter();\n  }, []);\n\n  const updateTipCounter = () => {\n    const counter = parseInt(localStorage.getItem(\"tipCounter\") || \"0\", 10);\n    setTipShown(counter <= 3);\n    localStorage.setItem(\"tipCounter\", (counter + 1).toString());\n  };\n\n  const joinChannel = () => joinCall(channel.joinlink, () => {});\n\n  const handleChannelClick = () => {\n    if (!userIsAdmin) {\n      joinChannel();\n      return;\n    }\n    manageFirstCall();\n  };\n\n  const manageFirstCall = () => {\n    if (localStorage.getItem(\"isFirstCall\") === null) {\n      localStorage.setItem(\"isFirstCall\", \"false\");\n      alerts.showAlert(TipAlert({ message: Locales.Hints.DontKillCall, alertManager: alerts, onClose: joinChannel }));\n      return;\n    }\n    joinChannel();\n  };\n\n  return (\n    <SimpleCell\n      before={<Icon28VolumeOutline />}\n      after={userIsAdmin && <AdminActions isTipShown={isTipShown} setTipShown={setTipShown} refreshChannel={refreshChannel} channel={channel} />}\n      onClick={handleChannelClick}\n    >\n      <ChannelName channel={channel} editModeActive={editModeActive} renameToChannel={renameToChannel} deleteToChannel={deleteToChannel} />\n    </SimpleCell>\n  );\n}\n\nfunction AdminActions({ isTipShown, setTipShown, refreshChannel, channel }) {\n  return (\n    <Tooltip\n      isShown={isTipShown}\n      text={Locales.Hints.RefreshChannel}\n      onClick={e => e.stopPropagation()}\n      onClose={() => setTipShown(false)}\n    >\n      <IconButton onClick={() => refreshChannel(channel.id)}>\n        <Icon24RefreshOutline />\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nfunction ChannelName({ channel, editModeActive, renameToChannel, deleteToChannel }) {\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <b>#{channel.name}</b>\n      {editModeActive && (\n        <>\n          <IconButton onClick={renameToChannel}>\n            <Icon16PenOutline />\n          </IconButton>\n          <IconButton style={{ color: 'red' }} onClick={() => deleteToChannel(channel.id)}>\n            <Icon16DeleteOutline />\n          </IconButton>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}