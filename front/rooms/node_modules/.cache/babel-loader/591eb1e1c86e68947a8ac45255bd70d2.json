{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivityHasPointer } from \"../../../hooks/useAdaptivityHasPointer\";\nimport { useAppearance } from \"../../../hooks/useAppearance\";\nimport { Tappable } from \"../../Tappable/Tappable\";\nimport { ImageBaseContext } from \"../context\";\nimport { validateOverlayIcon } from \"../validators\";\n/**\n * –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π –Ω–∞–¥ –∫–∞—Ä—Ç–∏–Ω–∫–æ–π.\n */\nexport var ImageBaseOverlay = function (_param) {\n  var className = _param.className,\n    themeProp = _param.theme,\n    visibilityProp = _param.visibility,\n    children = _param.children,\n    onClick = _param.onClick,\n    restProps = _object_without_properties(_param, [\"className\", \"theme\", \"visibility\", \"children\", \"onClick\"]);\n  var appearance = useAppearance();\n  var hasPointer = useAdaptivityHasPointer();\n  var theme = themeProp !== null && themeProp !== void 0 ? themeProp : appearance;\n  var visibility = visibilityProp !== null && visibilityProp !== void 0 ? visibilityProp : hasPointer ? \"on-hover\" : \"always\";\n  if (process.env.NODE_ENV === \"development\") {\n    if (children) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      var size = React.useContext(ImageBaseContext).size;\n      validateOverlayIcon(size, {\n        name: \"children\",\n        value: children\n      });\n    }\n  }\n  return /*#__PURE__*/React.createElement(Tappable, _object_spread_props(_object_spread({}, restProps), {\n    type: \"button\",\n    Component: \"button\",\n    className: classNames(\"vkuiImageBaseOverlay\", visibility === \"always\" && \"vkuiImageBaseOverlay--visible\", theme === \"light\" && \"vkuiImageBaseOverlay--theme-light\", theme === \"dark\" && \"vkuiImageBaseOverlay--theme-dark\", className),\n    hasHover: visibility === \"on-hover\",\n    hoverMode: visibility === \"on-hover\" ? \"vkuiImageBaseOverlay--visible\" : undefined,\n    focusVisibleMode: \"vkuiImageBaseOverlay--focus-visible\",\n    hasActive: false,\n    onClick: onClick\n  }), children);\n};","map":{"version":3,"names":["React","classNames","useAdaptivityHasPointer","useAppearance","Tappable","ImageBaseContext","validateOverlayIcon","ImageBaseOverlay","_param","className","themeProp","theme","visibilityProp","visibility","children","onClick","restProps","_object_without_properties","appearance","hasPointer","process","env","NODE_ENV","size","useContext","name","value","createElement","_object_spread_props","_object_spread","type","Component","hasHover","hoverMode","undefined","focusVisibleMode","hasActive"],"sources":["../../../../src/components/ImageBase/ImageBaseOverlay/ImageBaseOverlay.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivityHasPointer } from '../../../hooks/useAdaptivityHasPointer';\nimport { useAppearance } from '../../../hooks/useAppearance';\nimport { Tappable } from '../../Tappable/Tappable';\nimport { ImageBaseContext } from '../context';\nimport type { ImageBaseExpectedIconProps } from '../types';\nimport { validateOverlayIcon } from '../validators';\nimport styles from './ImageBaseOverlay.module.css';\n\nexport interface ImageBaseOverlayProps extends React.AriaAttributes {\n  /**\n   * –ó–∞–¥–∞—ë—Ç —Ç–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è.\n   *\n   * > –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ `appearance` –≤ `ConfigProvider`.\n   */\n  theme?: 'dark' | 'light';\n  /**\n   * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –æ–≤–µ—Ä–ª–µ–π.\n   *\n   * - `\"on-hover\"` ‚Äì –Ω–∞ –Ω–∞–≤–µ–¥–µ–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª—è –º—ã—à–∏.\n   * - `\"always\"` ‚Äì –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å.\n   *\n   * > –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º—ã—à—å –∏–ª–∏ –Ω–µ—Ç.\n   */\n  visibility?: 'on-hover' | 'always';\n  /**\n   * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–∫–æ–Ω–∫—É.\n   *\n   *\n   * > üìù –ù—É–∂–Ω—ã–π –¥–ª—è `<ImageBase size={...} />` —Ä–∞–∑–º–µ—Ä –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ `getOverlayIconSizeByImageBaseSize()`.\n   *\n   * > –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∫–æ–Ω–∫–∏ –∏–∑ `@vkontakte/icons`.\n   *\n   * > üìäÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∏–∫–æ–Ω–∫—É, —Ç–æ —Å–ª–µ–¥—É–µ—Ç –∏–º–µ–Ω–æ–≤–∞—Ç—å –µ—ë –ø–æ —à–∞–±–ª–æ–Ω—É `Icon<size><name>`. –ò–ª–∏ –∂–µ\n   * > —á—Ç–æ–±—ã –≤ –Ω–µ—ë –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä `width`. –¢–æ–≥–¥–∞ –º—ã —Å–º–æ–∂–µ–º –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ª–∏ —Ä–∞–∑–º–µ—Ä–∞ –≤—ã\n   * > –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∏–∫–æ–Ω–∫—É.\n   */\n  children: React.ReactElement<ImageBaseExpectedIconProps>;\n  className?: string;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n}\n\n/**\n * –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π –Ω–∞–¥ –∫–∞—Ä—Ç–∏–Ω–∫–æ–π.\n */\nexport const ImageBaseOverlay = ({\n  className,\n  theme: themeProp,\n  visibility: visibilityProp,\n  children,\n  onClick,\n  ...restProps\n}: ImageBaseOverlayProps) => {\n  const appearance = useAppearance();\n  const hasPointer = useAdaptivityHasPointer();\n  const theme = themeProp ?? appearance;\n  const visibility = visibilityProp ?? (hasPointer ? 'on-hover' : 'always');\n\n  if (process.env.NODE_ENV === 'development') {\n    if (children) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const { size } = React.useContext(ImageBaseContext);\n      validateOverlayIcon(size, { name: 'children', value: children });\n    }\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      type=\"button\"\n      Component=\"button\"\n      className={classNames(\n        styles['ImageBaseOverlay'],\n        visibility === 'always' && styles['ImageBaseOverlay--visible'],\n        theme === 'light' && styles['ImageBaseOverlay--theme-light'],\n        theme === 'dark' && styles['ImageBaseOverlay--theme-dark'],\n        className,\n      )}\n      hasHover={visibility === 'on-hover'}\n      hoverMode={visibility === 'on-hover' ? styles['ImageBaseOverlay--visible'] : undefined}\n      focusVisibleMode={styles['ImageBaseOverlay--focus-visible']}\n      hasActive={false}\n      onClick={onClick}\n    >\n      {children}\n    </Tappable>\n  );\n};\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,uBAAuB,QAAQ;AACxC,SAASC,aAAa,QAAQ;AAC9B,SAASC,QAAQ,QAAQ;AACzB,SAASC,gBAAgB,QAAQ;AAEjC,SAASC,mBAAmB,QAAQ;AAoCpC;;;AAGA,OAAO,IAAMC,gBAAA,GAAmB,SAAAA,CAAAC,MAAA;MAC9BC,SAAA,GAAAD,MAAA,CAAAC,SAAA;IACAC,SAAO,GAAAF,MAAA,CAAPG,KAAA;IACAC,cAAY,GAAAJ,MAAA,CAAZK,UAAA;IACAC,QAAA,GAAAN,MAAA,CAAAM,QAAA;IACAC,OAAA,GAAAP,MAAA,CAAAO,OAAA;IACGC,SAAA,GAAAC,0BAAA,CAAAT,MAAA,GALH,aACA,SACA,cACA,YACA,U;EAGA,IAAMU,UAAA,GAAaf,aAAA;EACnB,IAAMgB,UAAA,GAAajB,uBAAA;EACnB,IAAMS,KAAA,GAAQD,SAAA,aAAAA,SAAA,cAAAA,SAAA,GAAaQ,UAAA;EAC3B,IAAML,UAAA,GAAaD,cAAA,aAAAA,cAAA,cAAAA,cAAA,GAAmBO,UAAA,GAAa,aAAa;EAEhE,IAAIC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;IAC1C,IAAIR,QAAA,EAAU;MACZ;MACA,IAAMS,IAAE,GAASvB,KAAA,CAAMwB,UAAU,CAACnB,gBAAA,EAA1BkB,IAAA;MACRjB,mBAAA,CAAoBiB,IAAA,EAAM;QAAEE,IAAA,EAAM;QAAYC,KAAA,EAAOZ;MAAS;IAChE;EACF;EAEA,oBACEd,KAAA,CAAA2B,aAAA,CAACvB,QAAA,EAAAwB,oBAAA,CAAAC,cAAA,KACKb,SAAA;IACJc,IAAA,EAAK;IACLC,SAAA,EAAU;IACVtB,SAAA,EAAWR,UAAA,yBAETY,UAAA,KAAe,6CACfF,KAAA,KAAU,gDACVA,KAAA,KAAU,8CACVF,SAAA;IAEFuB,QAAA,EAAUnB,UAAA,KAAe;IACzBoB,SAAA,EAAWpB,UAAA,KAAe,+CAAmDqB,SAAA;IAC7EC,gBAAgB;IAChBC,SAAA,EAAW;IACXrB,OAAA,EAASA;MAERD,QAAA;AAGP"},"metadata":{},"sourceType":"module"}