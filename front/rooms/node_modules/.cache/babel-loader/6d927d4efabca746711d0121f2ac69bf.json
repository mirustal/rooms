{"ast":null,"code":"import { warnOnce } from \"../../lib/warnOnce\";\nimport { getBadgeIconSizeByImageBaseSize, getFallbackIconSizeByImageBaseSize, getOverlayIconSizeByImageBaseSize } from \"./helpers\";\nimport { imageBaseSizes } from \"./types\";\n/**\n * Пример,\n *\n * Icon28User -> 28\n * Icon12Circle1 -> 12\n * Icon12Circle2 -> 12\n * Icon20TextHeading1Outline -> 20\n */\nfunction parseIconSizeByDisplayName(displayName) {\n  if (typeof displayName !== \"string\") {\n    return null;\n  }\n  var match = /Icon(\\d+)/.exec(displayName);\n  return match ? Number(match[1]) : null;\n}\nfunction parseIconSizeByWidthProp(width) {\n  if (typeof width !== \"string\" && typeof width !== \"number\") {\n    return null;\n  }\n  var size = Number(width);\n  return size > 0 ? size : null;\n}\nfunction getElementDisplayName(element) {\n  var _element_type_displayName;\n  return (_element_type_displayName = element.type.displayName) !== null && _element_type_displayName !== void 0 ? _element_type_displayName : null;\n}\nfunction getElementWidthProp(element) {\n  var _element_props_width;\n  return (_element_props_width = element.props.width) !== null && _element_props_width !== void 0 ? _element_props_width : null;\n}\nfunction getIconSizeByElement(element) {\n  var sizeByDisplayName = parseIconSizeByDisplayName(getElementDisplayName(element));\n  var sizeByWidth = parseIconSizeByWidthProp(getElementWidthProp(element));\n  return sizeByWidth ? sizeByWidth : sizeByDisplayName;\n}\nfunction validateIconComponentSizeByImageSize(imageSize, iconProp, selectorFn, logger) {\n  var iconSize = getIconSizeByElement(iconProp.value);\n  if (iconSize === null) {\n    return;\n  }\n  var result = selectorFn(imageSize);\n  if (result === iconSize || result === selectorFn.MAX_SIZE && iconSize >= result) {\n    return;\n  }\n  var iconName = getElementDisplayName(iconProp.value);\n  var propMessage = iconName ? \"\".concat(iconProp.name, \"={<\").concat(iconName, \" />}\") : iconProp.name;\n  logger(\"Размер `\".concat(propMessage, \"` не соответствует дизайн-системе. Для `size={\").concat(imageSize, \"}` размер иконки для `\").concat(iconProp.name, \"` должен соответствовать <Icon\").concat(result, \"<name> />. Если такого размера нет, то используйте <\").concat(iconName, \" width={\").concat(result, \"} height={\").concat(result, \"} />\"), \"log\");\n}\nvar warnImageBase = warnOnce(\"ImageBase\");\nexport function validateFallbackIcon(imageSize, iconProp) {\n  return validateIconComponentSizeByImageSize(imageSize, iconProp, getFallbackIconSizeByImageBaseSize, warnImageBase);\n}\nvar mapOfExpectedSize = new Set(imageBaseSizes);\nvar arrayOfSizes = Object.keys(mapOfExpectedSize).map(function (str) {\n  return Number(str);\n});\nvar maxSize = arrayOfSizes.reduce(function (maxSize, size) {\n  return size > maxSize ? size : maxSize;\n}, 0);\nexport function validateSize(imageSize) {\n  if (imageSize > maxSize || mapOfExpectedSize.has(imageSize)) {\n    return;\n  }\n  warnImageBase(\"`size={\".concat(imageSize, \"}` не соответствует дизайн-системе. Пожалуйста, используйте один из следующих вариантов: \").concat(arrayOfSizes.join(\" | \")), \"log\");\n}\nvar warnImageBaseBadge = warnOnce(\"ImageBase.Badge\");\nexport function validateBadgeIcon(imageSize, iconProp) {\n  if (imageSize < 24 && iconProp) {\n    return warnImageBaseBadge(\"Не используйте бейдж при `size < 24`.\", \"log\");\n  }\n  validateIconComponentSizeByImageSize(imageSize, iconProp, getBadgeIconSizeByImageBaseSize, warnImageBaseBadge);\n}\nvar warnImageBaseOverlay = warnOnce(\"ImageBase.Overlay\");\nexport function validateOverlayIcon(imageSize, iconProp) {\n  validateIconComponentSizeByImageSize(imageSize, iconProp, getOverlayIconSizeByImageBaseSize, warnImageBaseOverlay);\n}","map":{"version":3,"names":["warnOnce","getBadgeIconSizeByImageBaseSize","getFallbackIconSizeByImageBaseSize","getOverlayIconSizeByImageBaseSize","imageBaseSizes","parseIconSizeByDisplayName","displayName","match","exec","Number","parseIconSizeByWidthProp","width","size","getElementDisplayName","element","_element_type_displayName","type","getElementWidthProp","_element_props_width","props","getIconSizeByElement","sizeByDisplayName","sizeByWidth","validateIconComponentSizeByImageSize","imageSize","iconProp","selectorFn","logger","iconSize","value","result","MAX_SIZE","iconName","propMessage","concat","name","warnImageBase","validateFallbackIcon","mapOfExpectedSize","Set","arrayOfSizes","Object","keys","map","str","maxSize","reduce","validateSize","has","join","warnImageBaseBadge","validateBadgeIcon","warnImageBaseOverlay","validateOverlayIcon"],"sources":["../../../src/components/ImageBase/validators.ts"],"sourcesContent":["import { warnOnce } from '../../lib/warnOnce';\nimport {\n  getBadgeIconSizeByImageBaseSize,\n  getFallbackIconSizeByImageBaseSize,\n  getOverlayIconSizeByImageBaseSize,\n} from './helpers';\nimport { imageBaseSizes } from './types';\n\n/**\n * Пример,\n *\n * Icon28User -> 28\n * Icon12Circle1 -> 12\n * Icon12Circle2 -> 12\n * Icon20TextHeading1Outline -> 20\n */\nfunction parseIconSizeByDisplayName(displayName: unknown): number | null {\n  if (typeof displayName !== 'string') {\n    return null;\n  }\n\n  const match = /Icon(\\d+)/.exec(displayName);\n\n  return match ? Number(match[1]) : null;\n}\n\nfunction parseIconSizeByWidthProp(width: unknown): number | null {\n  if (typeof width !== 'string' && typeof width !== 'number') {\n    return null;\n  }\n  const size = Number(width);\n  return size > 0 ? size : null;\n}\n\nfunction getElementDisplayName(element: JSX.Element): string | null {\n  return element.type.displayName ?? null;\n}\n\nfunction getElementWidthProp(element: JSX.Element): number | string | null {\n  return element.props.width ?? null;\n}\n\nfunction getIconSizeByElement(element: JSX.Element): number | null {\n  const sizeByDisplayName = parseIconSizeByDisplayName(getElementDisplayName(element));\n  const sizeByWidth = parseIconSizeByWidthProp(getElementWidthProp(element));\n  return sizeByWidth ? sizeByWidth : sizeByDisplayName;\n}\n\ninterface IconProp {\n  name: string;\n  value: JSX.Element;\n}\n\ninterface SelectorFn {\n  (imageSize: number): number;\n  MAX_SIZE: number;\n}\n\nfunction validateIconComponentSizeByImageSize(\n  imageSize: number,\n  iconProp: IconProp,\n  selectorFn: SelectorFn,\n  logger: ReturnType<typeof warnOnce>,\n) {\n  const iconSize = getIconSizeByElement(iconProp.value);\n\n  if (iconSize === null) {\n    return;\n  }\n\n  const result = selectorFn(imageSize);\n\n  if (result === iconSize || (result === selectorFn.MAX_SIZE && iconSize >= result)) {\n    return;\n  }\n\n  const iconName = getElementDisplayName(iconProp.value);\n  const propMessage = iconName ? `${iconProp.name}={<${iconName} />}` : iconProp.name;\n\n  logger(\n    `Размер \\`${propMessage}\\` не соответствует дизайн-системе. Для \\`size={${imageSize}}\\` размер иконки для \\`${iconProp.name}\\` должен соответствовать <Icon${result}<name> />. Если такого размера нет, то используйте <${iconName} width={${result}} height={${result}} />`,\n    'log',\n  );\n}\n\nconst warnImageBase = warnOnce('ImageBase');\n\nexport function validateFallbackIcon(imageSize: number, iconProp: IconProp) {\n  return validateIconComponentSizeByImageSize(\n    imageSize,\n    iconProp,\n    getFallbackIconSizeByImageBaseSize,\n    warnImageBase,\n  );\n}\n\nconst mapOfExpectedSize = new Set<number>(imageBaseSizes);\n\nconst arrayOfSizes = Object.keys(mapOfExpectedSize).map((str) => Number(str));\nconst maxSize = arrayOfSizes.reduce((maxSize, size) => (size > maxSize ? size : maxSize), 0);\n\nexport function validateSize(imageSize: number): void {\n  if (imageSize > maxSize || mapOfExpectedSize.has(imageSize)) {\n    return;\n  }\n  warnImageBase(\n    `\\`size={${imageSize}}\\` не соответствует дизайн-системе. Пожалуйста, используйте один из следующих вариантов: ${arrayOfSizes.join(\n      ' | ',\n    )}`,\n    'log',\n  );\n}\n\nconst warnImageBaseBadge = warnOnce('ImageBase.Badge');\n\nexport function validateBadgeIcon(imageSize: number, iconProp: IconProp): void {\n  if (imageSize < 24 && iconProp) {\n    return warnImageBaseBadge('Не используйте бейдж при `size < 24`.', 'log');\n  }\n  validateIconComponentSizeByImageSize(\n    imageSize,\n    iconProp,\n    getBadgeIconSizeByImageBaseSize,\n    warnImageBaseBadge,\n  );\n}\n\nconst warnImageBaseOverlay = warnOnce('ImageBase.Overlay');\n\nexport function validateOverlayIcon(imageSize: number, iconProp: IconProp): void {\n  validateIconComponentSizeByImageSize(\n    imageSize,\n    iconProp,\n    getOverlayIconSizeByImageBaseSize,\n    warnImageBaseOverlay,\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}