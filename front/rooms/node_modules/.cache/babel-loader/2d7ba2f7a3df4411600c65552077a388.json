{"ast":null,"code":"var _jsxFileName = \"/Users/mirustal/Documents/project/rooms/front/rooms/src/components/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport { Views } from \"../model/views\";\nimport { Root } from \"@vkontakte/vkui\";\nimport Rooms from \"./views/rooms/Rooms\";\nimport Channels from \"./views/Channels/Channels\";\nimport { useEffect, useState } from \"react\";\nimport { getVkUserId, joinRoomOnStart } from \"../bridge/bridgeLib\";\nimport { isAdminInRoom } from \"../serverApi/serverApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function inAdminInRoom(room, id) {\n  user_id = getVkUserId();\n\n  if (response.rooms) {\n    let findMember = response.rooms.members.filter(member => member.id === id);\n    console.log(\"is admin\", findMember);\n    return findMember.role === \"admin\";\n  }\n}\n\nexport default function Main() {\n  _s();\n\n  const [activeView, setActiveView] = useState(Views.Servers.id);\n  const [activeRoomInfo, setRoomInfo] = useState(null);\n\n  const enterRoom = function (roomInfo) {\n    setRoomInfo(roomInfo);\n    setActiveView(Views.Rooms.id);\n  };\n\n  useEffect(() => {\n    if (joinRoomOnStart !== undefined) enterRoom(joinRoomOnStart);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Root, {\n    activeView: activeView,\n    children: [/*#__PURE__*/_jsxDEV(Rooms, {\n      id: Views.Servers.id,\n      enterRoom: enterRoom,\n      userIsAdmin: isAdminInRoom()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Channels, {\n      id: Views.Rooms.id,\n      roomInfo: activeRoomInfo,\n      returnBack: () => setActiveView(Views.Servers.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"LiY2WW8iIsJSZhivyWw+yhv6Im0=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Views","Root","Rooms","Channels","useEffect","useState","getVkUserId","joinRoomOnStart","isAdminInRoom","inAdminInRoom","room","id","user_id","response","rooms","findMember","members","filter","member","console","log","role","Main","activeView","setActiveView","Servers","activeRoomInfo","setRoomInfo","enterRoom","roomInfo","undefined"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/Main.jsx"],"sourcesContent":["import { Views } from \"../model/views\";\nimport { Root } from \"@vkontakte/vkui\";\nimport Rooms from \"./views/rooms/Rooms\";\nimport Channels from \"./views/Channels/Channels\";\nimport { useEffect, useState } from \"react\";\nimport { getVkUserId, joinRoomOnStart } from \"../bridge/bridgeLib\";\nimport { isAdminInRoom } from \"../serverApi/serverApi\";\n\nasync function inAdminInRoom (room, id) {\n  user_id = getVkUserId()\n  if (response.rooms) {\n      let findMember = response.rooms.members.filter(member => member.id === id)\n      console.log(\"is admin\", findMember)\n      return findMember.role === \"admin\"\n  }\n}\n\nexport default function Main() {\n  const [activeView, setActiveView] = useState(Views.Servers.id);\n  const [activeRoomInfo, setRoomInfo] = useState(null);\n\n\n\n  const enterRoom = function (roomInfo) {\n    setRoomInfo(roomInfo);\n    setActiveView(Views.Rooms.id);\n  };\n\n  useEffect(() => {\n    if (joinRoomOnStart !== undefined)\n      enterRoom(joinRoomOnStart)\n  }, []);\n\n  return (\n    <Root activeView={activeView}>\n      <Rooms id={Views.Servers.id} enterRoom={enterRoom} userIsAdmin={isAdminInRoom()}/>\n      <Channels\n        id={Views.Rooms.id}\n        roomInfo={activeRoomInfo}\n        returnBack={() => setActiveView(Views.Servers.id)}\n      />\n    </Root>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,qBAA7C;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;AAEA,eAAeC,aAAf,CAA8BC,IAA9B,EAAoCC,EAApC,EAAwC;EACtCC,OAAO,GAAGN,WAAW,EAArB;;EACA,IAAIO,QAAQ,CAACC,KAAb,EAAoB;IAChB,IAAIC,UAAU,GAAGF,QAAQ,CAACC,KAAT,CAAeE,OAAf,CAAuBC,MAAvB,CAA8BC,MAAM,IAAIA,MAAM,CAACP,EAAP,KAAcA,EAAtD,CAAjB;IACAQ,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,UAAxB;IACA,OAAOA,UAAU,CAACM,IAAX,KAAoB,OAA3B;EACH;AACF;;AAED,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC7B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAACL,KAAK,CAACyB,OAAN,CAAcd,EAAf,CAA5C;EACA,MAAM,CAACe,cAAD,EAAiBC,WAAjB,IAAgCtB,QAAQ,CAAC,IAAD,CAA9C;;EAIA,MAAMuB,SAAS,GAAG,UAAUC,QAAV,EAAoB;IACpCF,WAAW,CAACE,QAAD,CAAX;IACAL,aAAa,CAACxB,KAAK,CAACE,KAAN,CAAYS,EAAb,CAAb;EACD,CAHD;;EAKAP,SAAS,CAAC,MAAM;IACd,IAAIG,eAAe,KAAKuB,SAAxB,EACEF,SAAS,CAACrB,eAAD,CAAT;EACH,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACE,QAAC,IAAD;IAAM,UAAU,EAAEgB,UAAlB;IAAA,wBACE,QAAC,KAAD;MAAO,EAAE,EAAEvB,KAAK,CAACyB,OAAN,CAAcd,EAAzB;MAA6B,SAAS,EAAEiB,SAAxC;MAAmD,WAAW,EAAEpB,aAAa;IAA7E;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MACE,EAAE,EAAER,KAAK,CAACE,KAAN,CAAYS,EADlB;MAEE,QAAQ,EAAEe,cAFZ;MAGE,UAAU,EAAE,MAAMF,aAAa,CAACxB,KAAK,CAACyB,OAAN,CAAcd,EAAf;IAHjC;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA1BuBW,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}