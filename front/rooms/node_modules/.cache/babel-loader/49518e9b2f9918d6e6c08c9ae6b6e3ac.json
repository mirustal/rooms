{"ast":null,"code":"import { editChannel } from '../../../../serverApi/serverApi';\nexport const channelOperation = (room, setRoomInfo, redrawRoom, alerts) => ({\n  create: function (channelName) {\n    const channelList = createChannel(room.channels, channelName);\n    console.log(channelList);\n    editChannel(channelList).then(room => {\n      setRoomInfo(channelList);\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  rename: function (newNameChannel, renameChannelId) {\n    const channelList = renameChannel(room.channels, newNameChannel, renameChannelId);\n    editChannel(channelList).then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  delete: function (delChannenlId) {\n    const channelList = deleteChannel(room.channels, delChannenlId);\n    editChannel(channelList).then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  refresh: function (channelId) {\n    const channelList = refreshChannel(room.channels, channelId);\n    editChannel().then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  }\n});","map":{"version":3,"names":["editChannel","channelOperation","room","setRoomInfo","redrawRoom","alerts","create","channelName","channelList","createChannel","channels","console","log","then","catch","error","showAlert","ErrorAlert","message","Locales","Errors","FailedCreateRoom","alertManager","rename","newNameChannel","renameChannelId","renameChannel","delete","delChannenlId","deleteChannel","refresh","channelId","refreshChannel"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/utils/channelOperation.jsx"],"sourcesContent":["import { editChannel } from '../../../../serverApi/serverApi';\n\nexport const channelOperation = (room, setRoomInfo, redrawRoom, alerts) => ({\n  create: function (channelName) {\n    const channelList = createChannel(room.channels, channelName)\n    console.log(channelList)\n    editChannel(channelList)\n      .then((room) => {\n        setRoomInfo(channelList)\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  rename: function (newNameChannel, renameChannelId) {\n    const channelList = renameChannel(room.channels, newNameChannel, renameChannelId)\n    editChannel(channelList)\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  delete: function (delChannenlId) {\n    const channelList = deleteChannel(room.channels, delChannenlId)\n    editChannel(channelList)\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  refresh: function (channelId) {\n    const channelList = refreshChannel(room.channels, channelId)\n    editChannel()\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n});"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iCAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,UAApB,EAAgCC,MAAhC,MAA4C;EAC1EC,MAAM,EAAE,UAAUC,WAAV,EAAuB;IAC7B,MAAMC,WAAW,GAAGC,aAAa,CAACP,IAAI,CAACQ,QAAN,EAAgBH,WAAhB,CAAjC;IACAI,OAAO,CAACC,GAAR,CAAYJ,WAAZ;IACAR,WAAW,CAACQ,WAAD,CAAX,CACGK,IADH,CACSX,IAAD,IAAU;MACdC,WAAW,CAACK,WAAD,CAAX;MACAJ,UAAU;IACX,CAJH,EAKGU,KALH,CAKUC,KAAD,IAAW;MAChBJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;MACAV,MAAM,CAACW,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEjB;MAFL,CAAD,CADZ;IAMD,CAbH;EAcD,CAlByE;EAoB1EkB,MAAM,EAAE,UAAUC,cAAV,EAA0BC,eAA1B,EAA2C;IACjD,MAAMjB,WAAW,GAAGkB,aAAa,CAACxB,IAAI,CAACQ,QAAN,EAAgBc,cAAhB,EAAgCC,eAAhC,CAAjC;IACAzB,WAAW,CAACQ,WAAD,CAAX,CACGK,IADH,CACSX,IAAD,IAAU;MACdE,UAAU;IACX,CAHH,EAIGU,KAJH,CAIUC,KAAD,IAAW;MAChBJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;MACAV,MAAM,CAACW,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEjB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD,CAnCyE;EAqC1EsB,MAAM,EAAE,UAAUC,aAAV,EAAyB;IAC/B,MAAMpB,WAAW,GAAGqB,aAAa,CAAC3B,IAAI,CAACQ,QAAN,EAAgBkB,aAAhB,CAAjC;IACA5B,WAAW,CAACQ,WAAD,CAAX,CACGK,IADH,CACSX,IAAD,IAAU;MACdE,UAAU;IACX,CAHH,EAIGU,KAJH,CAIUC,KAAD,IAAW;MAChBJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;MACAV,MAAM,CAACW,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEjB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD,CApDyE;EAsD1EyB,OAAO,EAAE,UAAUC,SAAV,EAAqB;IAC5B,MAAMvB,WAAW,GAAGwB,cAAc,CAAC9B,IAAI,CAACQ,QAAN,EAAgBqB,SAAhB,CAAlC;IACA/B,WAAW,GACRa,IADH,CACSX,IAAD,IAAU;MACdE,UAAU;IACX,CAHH,EAIGU,KAJH,CAIUC,KAAD,IAAW;MAChBJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;MACAV,MAAM,CAACW,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEjB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD;AArEyE,CAA5C,CAAzB"},"metadata":{},"sourceType":"module"}