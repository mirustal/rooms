{"ast":null,"code":"var _jsxFileName = \"/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx\";\nimport { View, Panel, Group, PanelHeader, PanelHeaderBack, CellButton, PanelHeaderContent, PullToRefresh, ScreenSpinner } from \"@vkontakte/vkui\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport { Icon16MoreVertical, Icon24Add, Icon24LinkCircle } from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { editChannel, renameChannel } from \"../../../serverApi/serverApi\";\nimport React, { useEffect, useState } from \"react\";\nimport { ModalManager } from \"../../Modals\";\nimport { Locales } from \"../../../locales/locales\";\nexport default function Channels({\n  returnBack,\n  roomInfo\n}) {\n  const [isFetching, setFetching] = useState(false);\n  const [isFirstFetching, setFirstFetching] = useState(true);\n  function createChannel(channels, channelName) {\n    if (channels.length === 0) {\n      channels.push({\n        id: 1,\n        name: channelName\n      });\n    } else {\n      let lastChannelId = channels[channels.length - 1].id;\n      channels.push({\n        id: lastChannelId + 1,\n        name: channelName\n      });\n    }\n    roomInfo.channels = channels;\n    return roomInfo;\n  }\n  const createChannelInData = {\n    editRoom: function (channelName) {\n      editChannel(createChannel(roomInfo.channels, channelName)).then(room => {}).catch(error => {\n        alerts.showAlert(ErrorAlert({\n          message: Locales.Errors.FailedCreateRoom,\n          alertManager: alerts\n        }));\n      });\n    }\n  };\n  return roomInfo == null ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(View, {\n    id: Views.Rooms.id,\n    activePanel: Views.Rooms.panels.list.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    id: Views.Rooms.panels.list.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PanelHeader, {\n    before: /*#__PURE__*/React.createElement(PanelHeaderBack, {\n      onClick: returnBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, roomInfo.name, /*#__PURE__*/React.createElement(AlterActionSheet, {\n    roomInfo: roomInfo,\n    returnBack: returnBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, roomInfo.channels && roomInfo.channels.length > 0 && roomInfo.channels.map(channel => /*#__PURE__*/React.createElement(ChannelView, {\n    key: channel.id,\n    channel: channel,\n    connectToChannel: () => console.log(\"stub connect to channel \", channel.id),\n    renameToChannel: renameChannel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CellButton, {\n    onClick: () => {\n      ModalManager.showModal(ModalIds.CreateChannel, createChannelInData);\n    },\n    centered: true,\n    before: /*#__PURE__*/React.createElement(Icon24Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u043D\\u0430\\u043B\"))));\n}","map":{"version":3,"names":["View","Panel","Group","PanelHeader","PanelHeaderBack","CellButton","PanelHeaderContent","PullToRefresh","ScreenSpinner","ModalIds","Views","ChannelView","Icon16MoreVertical","Icon24Add","Icon24LinkCircle","AlterActionSheet","editChannel","renameChannel","React","useEffect","useState","ModalManager","Locales","Channels","returnBack","roomInfo","isFetching","setFetching","isFirstFetching","setFirstFetching","createChannel","channels","channelName","length","push","id","name","lastChannelId","createChannelInData","editRoom","then","room","catch","error","alerts","showAlert","ErrorAlert","message","Errors","FailedCreateRoom","alertManager","createElement","Fragment","Rooms","activePanel","panels","list","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","before","onClick","map","channel","key","connectToChannel","console","log","renameToChannel","showModal","CreateChannel","centered"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx"],"sourcesContent":["import {\n  View,\n  Panel,\n  Group,\n  PanelHeader,\n  PanelHeaderBack,\n  CellButton,\n  PanelHeaderContent,\n  PullToRefresh,\n  ScreenSpinner,\n} from \"@vkontakte/vkui\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport {\n  Icon16MoreVertical,\n  Icon24Add,\n  Icon24LinkCircle,\n} from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { editChannel, renameChannel } from \"../../../serverApi/serverApi\";\nimport React, { useEffect, useState } from \"react\";\nimport { ModalManager } from \"../../Modals\";\nimport { Locales } from \"../../../locales/locales\";\n\nexport default function Channels({ returnBack, roomInfo }) {\n\n  const [isFetching, setFetching] = useState(false);\n  const [isFirstFetching, setFirstFetching] = useState(true);\n\n\n  function createChannel(channels, channelName) {\n    if (channels.length === 0) {\n      channels.push({\n          id: 1,\n          name: channelName\n      });\n  } else {\n      let lastChannelId = channels[channels.length - 1].id;\n      channels.push({\n          id: lastChannelId + 1,\n          name: channelName\n      });\n  }\n  roomInfo.channels = channels\n    return roomInfo\n  }\n\n  const createChannelInData = {\n    editRoom: function (channelName) {\n        editChannel(createChannel(roomInfo.channels, channelName))\n        .then((room) => {\n        })\n        .catch((error) => {\n          alerts.showAlert(\n            ErrorAlert({\n              message: Locales.Errors.FailedCreateRoom,\n              alertManager: alerts,\n            })\n          );\n        });\n    },\n  };\n\n  \n\n  return roomInfo == null ? (\n    <></>\n  ) : (\n    <View id={Views.Rooms.id} activePanel={Views.Rooms.panels.list.id}>\n      <Panel id={Views.Rooms.panels.list.id}>\n        <PanelHeader before={<PanelHeaderBack onClick={returnBack} />}>\n          <>\n            {roomInfo.name}\n            <AlterActionSheet roomInfo={roomInfo} returnBack={returnBack} />\n          </>\n        </PanelHeader>\n        <Group>\n          {roomInfo.channels &&\n            roomInfo.channels.length > 0 &&\n            roomInfo.channels.map((channel) => (\n              <ChannelView\n                key={channel.id}\n                channel={channel}\n                connectToChannel={() =>\n                  console.log(\"stub connect to channel \", channel.id)\n                }\n                renameToChannel={renameChannel}\n              />\n            ))}\n            \n          <CellButton\n            onClick={() => {\n              ModalManager.showModal(ModalIds.CreateChannel, createChannelInData);\n            }}\n            centered\n            before={<Icon24Add />}\n          >\n            Создать канал\n          </CellButton>\n        </Group>\n      </Panel>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}