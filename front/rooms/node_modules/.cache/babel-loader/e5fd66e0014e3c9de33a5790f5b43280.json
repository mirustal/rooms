{"ast":null,"code":"import * as React from \"react\";\nimport { getTitleFromChildren } from \"./utils\";\nvar findAllIncludes = function () {\n  var target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\",\n    search = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n  var includes = [];\n  var i = target.indexOf(search);\n  while (i !== -1) {\n    includes.push(i);\n    i = target.indexOf(search, i + 1);\n  }\n  return includes;\n};\nvar letterRegexp;\n// На момент написания флаг u не поддерживался рядом браузеров, поэтому добавили фоллбэк.\ntry {\n  letterRegexp = new RegExp(\"\\\\p{L}\", \"u\");\n} catch (e) {}\nvar _getOptionLabel = function (option) {\n  return getTitleFromChildren(option.label);\n};\nexport var defaultFilterFn = function () {\n  var query = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\",\n    option = arguments.length > 1 ? arguments[1] : void 0,\n    getOptionLabel = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _getOptionLabel;\n  var _getOptionLabel1;\n  query = query.toLocaleLowerCase();\n  var label = (_getOptionLabel1 = getOptionLabel(option)) === null || _getOptionLabel1 === void 0 ? void 0 : _getOptionLabel1.toLocaleLowerCase();\n  if (label === null || label === void 0 ? void 0 : label.startsWith(query)) {\n    return true;\n  }\n  var includes = findAllIncludes(label, query);\n  // Ищем вхождение перед началом которого не буква\n  if (letterRegexp && label) {\n    var _iteratorNormalCompletion = true,\n      _didIteratorError = false,\n      _iteratorError = undefined;\n    try {\n      for (var _iterator = includes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var index = _step.value;\n        if (!letterRegexp.test(label[index - 1])) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else {\n    // если regexp не поддерживается, то ищем любое вхождение\n    return includes.length > 0;\n  }\n  return false;\n};\nexport var getFormFieldModeFromSelectType = function () {\n  var selectType = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"default\";\n  return selectType === \"default\" ? \"default\" : \"plain\";\n};","map":{"version":3,"names":["React","getTitleFromChildren","findAllIncludes","target","arguments","length","search","includes","i","indexOf","push","letterRegexp","RegExp","e","_getOptionLabel","option","label","defaultFilterFn","query","getOptionLabel","_getOptionLabel1","toLocaleLowerCase","startsWith","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","index","value","test","err","return","getFormFieldModeFromSelectType","selectType"],"sources":["../../src/lib/select.ts"],"sourcesContent":["import * as React from 'react';\nimport { SelectType } from '../components/Select/Select';\nimport { getTitleFromChildren } from './utils';\n\ntype Option = {\n  label?: React.ReactElement | string;\n  [index: string]: any;\n};\n\nconst findAllIncludes = (target = '', search = '') => {\n  const includes = [];\n\n  let i = target.indexOf(search);\n  while (i !== -1) {\n    includes.push(i);\n    i = target.indexOf(search, i + 1);\n  }\n\n  return includes;\n};\n\nlet letterRegexp: RegExp;\n\n// На момент написания флаг u не поддерживался рядом браузеров, поэтому добавили фоллбэк.\ntry {\n  letterRegexp = new RegExp('\\\\p{L}', 'u');\n} catch (e) {}\n\ntype GetOptionLabel = (option: Option) => string | undefined;\n\nconst _getOptionLabel: GetOptionLabel = (option) => getTitleFromChildren(option.label);\n\nexport const defaultFilterFn = (\n  query = '',\n  option: Option,\n  getOptionLabel: GetOptionLabel = _getOptionLabel,\n) => {\n  query = query.toLocaleLowerCase();\n  let label = getOptionLabel(option)?.toLocaleLowerCase();\n\n  if (label?.startsWith(query)) {\n    return true;\n  }\n\n  const includes = findAllIncludes(label, query);\n\n  // Ищем вхождение перед началом которого не буква\n  if (letterRegexp && label) {\n    for (const index of includes) {\n      if (!letterRegexp.test(label[index - 1])) {\n        return true;\n      }\n    }\n  } else {\n    // если regexp не поддерживается, то ищем любое вхождение\n    return includes.length > 0;\n  }\n\n  return false;\n};\n\nexport const getFormFieldModeFromSelectType = (selectType: SelectType = 'default') => {\n  return selectType === 'default' ? 'default' : 'plain';\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AAEvB,SAASC,oBAAoB,QAAQ;AAOrC,IAAMC,eAAA,GAAkB,SAAAA,CAAA;MAACC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAAS;IAAIE,MAAA,GAAAF,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAAS;EAC7C,IAAMG,QAAA,GAAW,EAAE;EAEnB,IAAIC,CAAA,GAAIL,MAAA,CAAOM,OAAO,CAACH,MAAA;EACvB,OAAOE,CAAA,KAAM,CAAC,GAAG;IACfD,QAAA,CAASG,IAAI,CAACF,CAAA;IACdA,CAAA,GAAIL,MAAA,CAAOM,OAAO,CAACH,MAAA,EAAQE,CAAA,GAAI;EACjC;EAEA,OAAOD,QAAA;AACT;AAEA,IAAII,YAAA;AAEJ;AACA,IAAI;EACFA,YAAA,GAAe,IAAIC,MAAA,CAAO,UAAU;AACtC,EAAE,OAAOC,CAAA,EAAG,CAAC;AAIb,IAAMC,eAAA,GAAkC,SAAAA,CAACC,MAAA;SAAWd,oBAAA,CAAqBc,MAAA,CAAOC,KAAK;;AAErF,OAAO,IAAMC,eAAA,GAAkB,SAAAA,CAAA;MAC7BC,KAAA,GAAAd,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAAQ;IACRW,MAAA,GAAAX,SAAA,CAAAC,MAAA,OAAAD,SAAA;IACAe,cAAA,GAAAf,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAAiCU,eAAA;MAGrBM,gBAAA;EADZF,KAAA,GAAQA,KAAA,CAAMG,iBAAiB;EAC/B,IAAIL,KAAA,IAAQI,gBAAA,GAAAD,cAAA,CAAeJ,MAAA,eAAfK,gBAAA,uBAAAA,gBAAA,CAAwBC,iBAAiB;EAErD,IAAIL,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAOM,UAAU,CAACJ,KAAA,GAAQ;IAC5B,OAAO;EACT;EAEA,IAAMX,QAAA,GAAWL,eAAA,CAAgBc,KAAA,EAAOE,KAAA;EAExC;EACA,IAAIP,YAAA,IAAgBK,KAAA,EAAO;QACpBO,yBAAA;MAAAC,iBAAA;MAAAC,cAAA,GAAAC,SAAA;;MAAL,SAAKC,SAAA,GAAepB,QAAA,CAAAqB,MAAA,CAAAC,QAAA,KAAfC,KAAA,IAAAP,yBAAA,IAAAO,KAAA,GAAAH,SAAA,CAAAI,IAAA,IAAAC,IAAA,GAAAT,yBAAA,SAAyB;QAAzB,IAAMU,KAAA,GAANH,KAAA,CAAAI,KAAA;QACH,IAAI,CAACvB,YAAA,CAAawB,IAAI,CAACnB,KAAK,CAACiB,KAAA,GAAQ,EAAE,GAAG;UACxC,OAAO;QACT;MACF;;MAJKT,iBAAA;MAAAC,cAAA,GAAAW,GAAA;;;aAAAb,yBAAA,IAAAI,SAAA,CAAAU,MAAA;UAAAV,SAAA,CAAAU,MAAA;;;YAAAb,iBAAA;gBAAAC,cAAA;;;;EAKP,OAAO;IACL;IACA,OAAOlB,QAAA,CAASF,MAAM,GAAG;EAC3B;EAEA,OAAO;AACT;AAEA,OAAO,IAAMiC,8BAAA,GAAiC,SAAAA,CAAA;MAACC,UAAA,GAAAnC,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAAyB;EACtE,OAAOmC,UAAA,KAAe,YAAY,YAAY;AAChD"},"metadata":{},"sourceType":"module"}