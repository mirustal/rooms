{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { addMonths, endOfDay, isAfter, isBefore, isSameDay, startOfDay, subMonths } from \"../lib/date\";\nexport function useCalendar(param) {\n  var value = param.value,\n    disablePast = param.disablePast,\n    disableFuture = param.disableFuture,\n    shouldDisableDate = param.shouldDisableDate,\n    onHeaderChange = param.onHeaderChange,\n    onNextMonth = param.onNextMonth,\n    onPrevMonth = param.onPrevMonth;\n  var _ref;\n  var _React_useState = _sliced_to_array(React.useState((_ref = Array.isArray(value) ? value[0] : value) !== null && _ref !== void 0 ? _ref : new Date()), 2),\n    viewDate = _React_useState[0],\n    setViewDate = _React_useState[1];\n  var _React_useState1 = _sliced_to_array(React.useState(), 2),\n    focusedDay = _React_useState1[0],\n    setFocusedDay = _React_useState1[1];\n  var setPrevMonth = React.useCallback(function () {\n    onPrevMonth === null || onPrevMonth === void 0 ? void 0 : onPrevMonth();\n    setViewDate(subMonths(viewDate, 1));\n  }, [viewDate, onPrevMonth]);\n  var setNextMonth = React.useCallback(function () {\n    onNextMonth === null || onNextMonth === void 0 ? void 0 : onNextMonth();\n    setViewDate(addMonths(viewDate, 1));\n  }, [viewDate, onNextMonth]);\n  var handleSetViewDate = React.useCallback(function (value) {\n    onHeaderChange === null || onHeaderChange === void 0 ? void 0 : onHeaderChange(value);\n    setViewDate(value);\n  }, [onHeaderChange]);\n  var isDayFocused = React.useCallback(function (day) {\n    return Boolean(focusedDay && isSameDay(day, focusedDay));\n  }, [focusedDay]);\n  var isDayDisabled = React.useCallback(function (day) {\n    var now = new Date();\n    var disabled = false;\n    if (disablePast) {\n      disabled = isBefore(endOfDay(day), now);\n    }\n    if (disableFuture) {\n      disabled = isAfter(startOfDay(day), now);\n    }\n    if (shouldDisableDate) {\n      disabled = shouldDisableDate(day);\n    }\n    return disabled;\n  }, [disableFuture, disablePast, shouldDisableDate]);\n  var resetSelectedDay = React.useCallback(function () {\n    setFocusedDay(undefined);\n  }, [setFocusedDay]);\n  return {\n    viewDate: viewDate,\n    setViewDate: handleSetViewDate,\n    setPrevMonth: setPrevMonth,\n    setNextMonth: setNextMonth,\n    focusedDay: focusedDay,\n    setFocusedDay: setFocusedDay,\n    isDayFocused: isDayFocused,\n    isDayDisabled: isDayDisabled,\n    resetSelectedDay: resetSelectedDay\n  };\n}","map":{"version":3,"names":["React","addMonths","endOfDay","isAfter","isBefore","isSameDay","startOfDay","subMonths","useCalendar","param","value","disablePast","disableFuture","shouldDisableDate","onHeaderChange","onNextMonth","onPrevMonth","_ref","_React_useState","_sliced_to_array","useState","Array","isArray","Date","viewDate","setViewDate","_React_useState1","focusedDay","setFocusedDay","setPrevMonth","useCallback","setNextMonth","handleSetViewDate","isDayFocused","day","Boolean","isDayDisabled","now","disabled","resetSelectedDay","undefined"],"sources":["../../src/hooks/useCalendar.ts"],"sourcesContent":["import * as React from 'react';\nimport { CalendarProps } from '../components/Calendar/Calendar';\nimport {\n  addMonths,\n  endOfDay,\n  isAfter,\n  isBefore,\n  isSameDay,\n  startOfDay,\n  subMonths,\n} from '../lib/date';\n\nexport interface UseCalendarDependencies\n  extends Pick<CalendarProps, 'onHeaderChange' | 'onNextMonth' | 'onPrevMonth'> {\n  value?: Array<Date | null> | Date;\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  shouldDisableDate?(value: Date): boolean;\n}\n\nexport function useCalendar({\n  value,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onHeaderChange,\n  onNextMonth,\n  onPrevMonth,\n}: UseCalendarDependencies) {\n  const [viewDate, setViewDate] = React.useState(\n    (Array.isArray(value) ? value[0] : value) ?? new Date(),\n  );\n  const [focusedDay, setFocusedDay] = React.useState<Date>();\n\n  const setPrevMonth = React.useCallback(() => {\n    onPrevMonth?.();\n    setViewDate(subMonths(viewDate, 1));\n  }, [viewDate, onPrevMonth]);\n  const setNextMonth = React.useCallback(() => {\n    onNextMonth?.();\n    setViewDate(addMonths(viewDate, 1));\n  }, [viewDate, onNextMonth]);\n\n  const handleSetViewDate = React.useCallback(\n    (value: Date) => {\n      onHeaderChange?.(value);\n      setViewDate(value);\n    },\n    [onHeaderChange],\n  );\n\n  const isDayFocused = React.useCallback(\n    (day: Date) => Boolean(focusedDay && isSameDay(day, focusedDay)),\n    [focusedDay],\n  );\n\n  const isDayDisabled = React.useCallback(\n    (day: Date) => {\n      const now = new Date();\n      let disabled = false;\n      if (disablePast) {\n        disabled = isBefore(endOfDay(day), now);\n      }\n      if (disableFuture) {\n        disabled = isAfter(startOfDay(day), now);\n      }\n      if (shouldDisableDate) {\n        disabled = shouldDisableDate(day);\n      }\n\n      return disabled;\n    },\n    [disableFuture, disablePast, shouldDisableDate],\n  );\n\n  const resetSelectedDay = React.useCallback(() => {\n    setFocusedDay(undefined);\n  }, [setFocusedDay]);\n\n  return {\n    viewDate,\n    setViewDate: handleSetViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}