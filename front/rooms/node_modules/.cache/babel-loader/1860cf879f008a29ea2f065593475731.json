{"ast":null,"code":"export var clamp = function (value, min, max) {\n  return Math.max(min, Math.min(value, max));\n};\nexport function precisionRound(number) {\n  var precision = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n  var factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n/**\n * Решение скопировано без изменений у MUI:\n * https://github.com/mui/material-ui/blob/v5.13.7/packages/mui-base/src/useSlider/useSlider.ts#L89-L105\n */\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    var parts = num.toExponential().split(\"e-\");\n    var matissaDecimalPart = parts[0].split(\".\")[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n  var decimalPart = num.toString().split(\".\")[1];\n  return decimalPart ? decimalPart.length : 0;\n}\nfunction roundValueToStep(value, step, min) {\n  var nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\nfunction decimatedClamp(val, min, max, step) {\n  if (step == null || step <= 0) {\n    return clamp(val, min, max);\n  }\n  var roundedValue = roundValueToStep(val, step, min);\n  return clamp(roundedValue, min, max);\n}\nexport function rescale(value, from, to) {\n  var options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n  var scaled = (value - from[0]) / (from[1] - from[0]) * (to[1] - to[0]) + to[0];\n  return decimatedClamp(scaled, to[0], to[1], options.step);\n}","map":{"version":3,"names":["clamp","value","min","max","Math","precisionRound","number","precision","arguments","length","factor","pow","round","getDecimalPrecision","num","abs","parts","toExponential","split","matissaDecimalPart","parseInt","decimalPart","toString","roundValueToStep","step","nearest","Number","toFixed","decimatedClamp","val","roundedValue","rescale","from","to","options","scaled"],"sources":["../../src/helpers/math.ts"],"sourcesContent":["export const clamp = (value: number, min: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n\nexport function precisionRound(number: number, precision = 1) {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\n/**\n * Решение скопировано без изменений у MUI:\n * https://github.com/mui/material-ui/blob/v5.13.7/packages/mui-base/src/useSlider/useSlider.ts#L89-L105\n */\nfunction getDecimalPrecision(num: number) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToStep(value: number, step: number, min: number) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\n\nfunction decimatedClamp(val: number, min: number, max: number, step?: number) {\n  if (step == null || step <= 0) {\n    return clamp(val, min, max);\n  }\n  const roundedValue = roundValueToStep(val, step, min);\n  return clamp(roundedValue, min, max);\n}\n\nexport function rescale(\n  value: number,\n  from: [number, number],\n  to: [number, number],\n  options: { step?: number } = {},\n) {\n  const scaled = ((value - from[0]) / (from[1] - from[0])) * (to[1] - to[0]) + to[0];\n  return decimatedClamp(scaled, to[0], to[1], options.step);\n}\n"],"mappings":"AAAA,OAAO,IAAMA,KAAA,GAAQ,SAAAA,CAACC,KAAA,EAAeC,GAAA,EAAaC,GAAA;SAChDC,IAAA,CAAKD,GAAG,CAACD,GAAA,EAAKE,IAAA,CAAKF,GAAG,CAACD,KAAA,EAAOE,GAAA;;AAEhC,OAAO,SAASE,eAAeC,MAAc;MAAEC,SAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAAY;EACzD,IAAIE,MAAA,GAASN,IAAA,CAAKO,GAAG,CAAC,IAAIJ,SAAA;EAC1B,OAAOH,IAAA,CAAKQ,KAAK,CAACN,MAAA,GAASI,MAAA,IAAUA,MAAA;AACvC;AAEA;;;;AAIA,SAASG,oBAAoBC,GAAW;EACtC;EACA;EACA,IAAIV,IAAA,CAAKW,GAAG,CAACD,GAAA,IAAO,GAAG;IACrB,IAAME,KAAA,GAAQF,GAAA,CAAIG,aAAa,GAAGC,KAAK,CAAC;IACxC,IAAMC,kBAAA,GAAqBH,KAAK,CAAC,EAAE,CAACE,KAAK,CAAC,IAAI,CAAC,EAAE;IACjD,OAAO,CAACC,kBAAA,GAAqBA,kBAAA,CAAmBV,MAAM,GAAG,KAAKW,QAAA,CAASJ,KAAK,CAAC,EAAE,EAAE;EACnF;EAEA,IAAMK,WAAA,GAAcP,GAAA,CAAIQ,QAAQ,GAAGJ,KAAK,CAAC,IAAI,CAAC,EAAE;EAChD,OAAOG,WAAA,GAAcA,WAAA,CAAYZ,MAAM,GAAG;AAC5C;AAEA,SAASc,iBAAiBtB,KAAa,EAAEuB,IAAY,EAAEtB,GAAW;EAChE,IAAMuB,OAAA,GAAUrB,IAAA,CAAKQ,KAAK,CAAC,CAACX,KAAA,GAAQC,GAAE,IAAKsB,IAAA,IAAQA,IAAA,GAAOtB,GAAA;EAC1D,OAAOwB,MAAA,CAAOD,OAAA,CAAQE,OAAO,CAACd,mBAAA,CAAoBW,IAAA;AACpD;AAEA,SAASI,eAAeC,GAAW,EAAE3B,GAAW,EAAEC,GAAW,EAAEqB,IAAa;EAC1E,IAAIA,IAAA,IAAQ,QAAQA,IAAA,IAAQ,GAAG;IAC7B,OAAOxB,KAAA,CAAM6B,GAAA,EAAK3B,GAAA,EAAKC,GAAA;EACzB;EACA,IAAM2B,YAAA,GAAeP,gBAAA,CAAiBM,GAAA,EAAKL,IAAA,EAAMtB,GAAA;EACjD,OAAOF,KAAA,CAAM8B,YAAA,EAAc5B,GAAA,EAAKC,GAAA;AAClC;AAEA,OAAO,SAAS4B,QACd9B,KAAa,EACb+B,IAAsB,EACtBC,EAAoB;MACpBC,OAAA,GAAA1B,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAA6B,CAAC;EAE9B,IAAM2B,MAAA,GAAS,CAAElC,KAAA,GAAQ+B,IAAI,CAAC,EAAE,KAAKA,IAAI,CAAC,EAAE,GAAGA,IAAI,CAAC,EAAE,CAAD,IAAOC,EAAE,CAAC,EAAE,GAAGA,EAAE,CAAC,EAAE,CAAD,GAAKA,EAAE,CAAC,EAAE;EAClF,OAAOL,cAAA,CAAeO,MAAA,EAAQF,EAAE,CAAC,EAAE,EAAEA,EAAE,CAAC,EAAE,EAAEC,OAAA,CAAQV,IAAI;AAC1D"},"metadata":{},"sourceType":"module"}