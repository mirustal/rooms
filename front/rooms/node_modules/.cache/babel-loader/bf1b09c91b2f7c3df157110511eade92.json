{"ast":null,"code":"import { _ as _instanceof } from \"@swc/helpers/_/_instanceof\";\nexport function getOffsetRect(el) {\n  var isElement = _instanceof(el, HTMLElement) || _instanceof(el, SVGElement);\n  if (typeof window === \"undefined\" || !isElement) {\n    return {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  var box = el.getBoundingClientRect();\n  var body = document.body;\n  var doc = document.documentElement;\n  var scrollTop = window.pageYOffset || doc.scrollTop || body.scrollTop;\n  var scrollLeft = window.pageXOffset || doc.scrollLeft || body.scrollLeft;\n  var clientTop = doc.clientTop || body.clientTop || 0;\n  var clientLeft = doc.clientLeft || body.clientLeft || 0;\n  return {\n    top: Math.round(box.top + scrollTop - clientTop),\n    left: Math.round(box.left + scrollLeft - clientLeft),\n    width: Math.round(box.width),\n    height: Math.round(box.height)\n  };\n}","map":{"version":3,"names":["getOffsetRect","el","isElement","_instanceof","HTMLElement","SVGElement","window","top","left","width","height","box","getBoundingClientRect","body","document","doc","documentElement","scrollTop","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","Math","round"],"sources":["../../src/getOffsetRect.ts"],"sourcesContent":["interface Bounds {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n}\n\nexport function getOffsetRect(el: HTMLElement | SVGElement | Text | null): Bounds {\n  const isElement = el instanceof HTMLElement || el instanceof SVGElement;\n\n  if (typeof window === 'undefined' || !isElement) {\n    return {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const doc = document.documentElement;\n  const scrollTop = window.pageYOffset || doc.scrollTop || body.scrollTop;\n  const scrollLeft = window.pageXOffset || doc.scrollLeft || body.scrollLeft;\n  const clientTop = doc.clientTop || body.clientTop || 0;\n  const clientLeft = doc.clientLeft || body.clientLeft || 0;\n\n  return {\n    top: Math.round(box.top + scrollTop - clientTop),\n    left: Math.round(box.left + scrollLeft - clientLeft),\n    width: Math.round(box.width),\n    height: Math.round(box.height),\n  };\n}\n"],"mappings":";AAOA,OAAO,SAASA,cAAcC,EAA0C;EACtE,IAAMC,SAAA,GAAYC,WAAE,CAAFF,EAAA,EAAcG,WAAA,KAAeD,WAAE,CAAFF,EAAA,EAAcI,UAAA;EAE7D,IAAI,OAAOC,MAAA,KAAW,eAAe,CAACJ,SAAA,EAAW;IAC/C,OAAO;MACLK,GAAA,EAAK;MACLC,IAAA,EAAM;MACNC,KAAA,EAAO;MACPC,MAAA,EAAQ;IACV;EACF;EAEA,IAAMC,GAAA,GAAMV,EAAA,CAAGW,qBAAqB;EACpC,IAAMC,IAAA,GAAOC,QAAA,CAASD,IAAI;EAC1B,IAAME,GAAA,GAAMD,QAAA,CAASE,eAAe;EACpC,IAAMC,SAAA,GAAYX,MAAA,CAAOY,WAAW,IAAIH,GAAA,CAAIE,SAAS,IAAIJ,IAAA,CAAKI,SAAS;EACvE,IAAME,UAAA,GAAab,MAAA,CAAOc,WAAW,IAAIL,GAAA,CAAII,UAAU,IAAIN,IAAA,CAAKM,UAAU;EAC1E,IAAME,SAAA,GAAYN,GAAA,CAAIM,SAAS,IAAIR,IAAA,CAAKQ,SAAS,IAAI;EACrD,IAAMC,UAAA,GAAaP,GAAA,CAAIO,UAAU,IAAIT,IAAA,CAAKS,UAAU,IAAI;EAExD,OAAO;IACLf,GAAA,EAAKgB,IAAA,CAAKC,KAAK,CAACb,GAAA,CAAIJ,GAAG,GAAGU,SAAA,GAAYI,SAAA;IACtCb,IAAA,EAAMe,IAAA,CAAKC,KAAK,CAACb,GAAA,CAAIH,IAAI,GAAGW,UAAA,GAAaG,UAAA;IACzCb,KAAA,EAAOc,IAAA,CAAKC,KAAK,CAACb,GAAA,CAAIF,KAAK;IAC3BC,MAAA,EAAQa,IAAA,CAAKC,KAAK,CAACb,GAAA,CAAID,MAAM;EAC/B;AACF"},"metadata":{},"sourceType":"module"}