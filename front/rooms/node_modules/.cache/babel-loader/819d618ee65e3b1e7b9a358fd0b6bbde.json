{"ast":null,"code":"var _jsxFileName = \"/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { View, Panel, Group, PanelHeader, PanelHeaderBack, CellButton, Div } from \"@vkontakte/vkui\";\nimport { Icon24Add } from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { ModalManager } from \"../../Modals\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport { getVkUserId } from \"../../../bridge/bridgeLib\";\nimport { AlertManagerContext } from \"../../contexts/AlertProvider\";\nimport { channelOperation } from \"./utils/channelOperation\";\nimport { createChannel, renameChannel, deleteChannel, refreshChannel } from 'utls./channelManager';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Channels(_ref) {\n  _s();\n\n  var _roomInfo$channels;\n\n  let {\n    returnBack,\n    roomInfo,\n    redrawRoom\n  } = _ref;\n  const [editModeActive, setEditModeActive] = useState(false);\n  const [userIsAdmin, setIsAdmin] = useState(false);\n  const alerts = useContext(AlertManagerContext);\n  useEffect(() => {\n    isAdminInRoom(roomInfo).then(setIsAdmin);\n  }, [roomInfo]);\n\n  const handleActiveEditMode = () => {\n    setEditModeActive(!editModeActive);\n  };\n\n  async function isAdminInRoom(room) {\n    let userId = await getVkUserId();\n    return room === null || room === void 0 ? void 0 : room.members.some(member => member.id === userId && member.role === \"admin\");\n  }\n\n  const channelOps = channelOperation(roomInfo, redrawRoom, alerts);\n  return roomInfo == null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(View, {\n    id: Views.Rooms.id,\n    activePanel: Views.Rooms.panels.list.id,\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      id: Views.Rooms.panels.list.id,\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        before: /*#__PURE__*/_jsxDEV(PanelHeaderBack, {\n          onClick: returnBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 30\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Div, {\n          style: {\n            display: 'flex'\n          },\n          children: /*#__PURE__*/_jsxDEV(AlterActionSheet, {\n            roomInfo: roomInfo,\n            returnBack: returnBack,\n            handleActiveEditMode: handleActiveEditMode,\n            userIsAdmin: userIsAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Group, {\n        children: [(_roomInfo$channels = roomInfo.channels) === null || _roomInfo$channels === void 0 ? void 0 : _roomInfo$channels.map((channel, index) => /*#__PURE__*/_jsxDEV(ChannelView, {\n          channelIndex: index,\n          channel: channel,\n          renameToChannel: () => channelOps.rename(channel.id),\n          deleteToChannel: () => channelOps.delete(channel.id),\n          editModeActive: editModeActive,\n          refreshChannel: () => channelOps.refresh(channel.id),\n          userIsAdmin: userIsAdmin\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)), userIsAdmin && /*#__PURE__*/_jsxDEV(CellButton, {\n          onClick: () => channelOps.create(),\n          centered: true,\n          before: /*#__PURE__*/_jsxDEV(Icon24Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this),\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u043D\\u0430\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Channels, \"xCPk9YX/CiQzJkh64HA4wXODmaU=\");\n\n_c = Channels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["React","useContext","useEffect","useState","View","Panel","Group","PanelHeader","PanelHeaderBack","CellButton","Div","Icon24Add","AlterActionSheet","ModalManager","ModalIds","Views","ChannelView","getVkUserId","AlertManagerContext","channelOperation","createChannel","renameChannel","deleteChannel","refreshChannel","Channels","returnBack","roomInfo","redrawRoom","editModeActive","setEditModeActive","userIsAdmin","setIsAdmin","alerts","isAdminInRoom","then","handleActiveEditMode","room","userId","members","some","member","id","role","channelOps","Rooms","panels","list","display","channels","map","channel","index","rename","delete","refresh","create"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  View,\n  Panel,\n  Group,\n  PanelHeader,\n  PanelHeaderBack,\n  CellButton,\n  Div,\n} from \"@vkontakte/vkui\";\nimport {\n  Icon24Add,\n} from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { ModalManager } from \"../../Modals\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport { getVkUserId } from \"../../../bridge/bridgeLib\";\nimport { AlertManagerContext } from \"../../contexts/AlertProvider\";\nimport { channelOperation } from \"./utils/channelOperation\";\nimport { createChannel, renameChannel, deleteChannel, refreshChannel } from 'utls./channelManager';\n\nexport default function Channels({ returnBack, roomInfo, redrawRoom }) {\n  const [editModeActive, setEditModeActive] = useState(false);\n  const [userIsAdmin, setIsAdmin] = useState(false);\n  const alerts = useContext(AlertManagerContext);\n\n  useEffect(() => {\n    isAdminInRoom(roomInfo).then(setIsAdmin);\n  }, [roomInfo]);\n\n  const handleActiveEditMode = () => {\n    setEditModeActive(!editModeActive);\n  };\n\n  async function isAdminInRoom(room) {\n    let userId = await getVkUserId();\n    return room?.members.some(member => member.id === userId && member.role === \"admin\");\n  }\n\n  const channelOps = channelOperation(roomInfo, redrawRoom, alerts);\n\n  return roomInfo == null ? (\n    <></>\n  ) : (\n    <View id={Views.Rooms.id} activePanel={Views.Rooms.panels.list.id}>\n      <Panel id={Views.Rooms.panels.list.id}>\n        <PanelHeader before={<PanelHeaderBack onClick={returnBack}/>}>\n          <Div style={{display: 'flex'}}>  \n            <AlterActionSheet\n              roomInfo={roomInfo}\n              returnBack={returnBack}\n              handleActiveEditMode={handleActiveEditMode}\n              userIsAdmin={userIsAdmin} />\n          </Div>\n        </PanelHeader>\n        <Group>\n          {roomInfo.channels?.map((channel, index) => (\n            <ChannelView\n              key={channel.id}\n              channelIndex={index}\n              channel={channel}\n              renameToChannel={() => channelOps.rename(channel.id)}\n              deleteToChannel={() => channelOps.delete(channel.id)}\n              editModeActive={editModeActive}\n              refreshChannel={() => channelOps.refresh(channel.id)}\n              userIsAdmin={userIsAdmin}\n            />\n          ))}\n          {userIsAdmin && (\n            <CellButton\n              onClick={() => channelOps.create()}\n              centered\n              before={<Icon24Add />}\n            >\n              Создать канал\n            </CellButton>\n          )}\n        </Group>\n      </Panel>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}