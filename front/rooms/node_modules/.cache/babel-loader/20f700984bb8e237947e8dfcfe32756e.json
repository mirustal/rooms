{"ast":null,"code":"import { editChannel } from '../../../../serverApi/serverApi';\nexport const roomOperation = (roomManager, alerts) => ({\n  createChannel: function (channelName) {\n    const newRoom = roomManager.createChannel(channelName);\n    editChannel(newRoom).then(room => {\n      console.log(\"sucessful\");\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  renameChanel: function (newNameChannel, renameChannelId) {\n    const updateRoom = roomManager.renameChannel(newNameChannel, renameChannelId);\n    editChannel(updateRoom).then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  delete: function (delChannenlId) {\n    const updateRoom = roomManager.deleteChannel(delChannenlId);\n    editChannel(updateRoom).then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  refresh: function (channelId) {\n    const channelList = roomManager.refreshChannel(channelId);\n    editChannel().then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  }\n});","map":{"version":3,"names":["editChannel","roomOperation","roomManager","alerts","createChannel","channelName","newRoom","then","room","console","log","catch","error","showAlert","ErrorAlert","message","Locales","Errors","FailedCreateRoom","alertManager","renameChanel","newNameChannel","renameChannelId","updateRoom","renameChannel","redrawRoom","delete","delChannenlId","deleteChannel","refresh","channelId","channelList","refreshChannel"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/utils/channelOperation.jsx"],"sourcesContent":["import { editChannel } from '../../../../serverApi/serverApi';\n\nexport const roomOperation = (roomManager, alerts) => ({\n  createChannel: function (channelName) {\n    const newRoom = roomManager.createChannel(channelName)\n    editChannel(newRoom)\n      .then((room) => {\n        console.log(\"sucessful\")\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  renameChanel: function (newNameChannel, renameChannelId) {\n    const updateRoom = roomManager.renameChannel(newNameChannel, renameChannelId)\n    editChannel(updateRoom)\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  delete: function (delChannenlId) {\n    const updateRoom = roomManager.deleteChannel(delChannenlId)\n    editChannel(updateRoom)\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  refresh: function (channelId) {\n    const channelList = roomManager.refreshChannel(channelId)\n    editChannel()\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n});"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iCAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,WAAD,EAAcC,MAAd,MAA0B;EACrDC,aAAa,EAAE,UAAUC,WAAV,EAAuB;IACpC,MAAMC,OAAO,GAAGJ,WAAW,CAACE,aAAZ,CAA0BC,WAA1B,CAAhB;IACAL,WAAW,CAACM,OAAD,CAAX,CACGC,IADH,CACSC,IAAD,IAAU;MACdC,OAAO,CAACC,GAAR,CAAY,WAAZ;IACD,CAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;MAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACAT,MAAM,CAACU,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEhB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD,CAhBoD;EAkBrDiB,YAAY,EAAE,UAAUC,cAAV,EAA0BC,eAA1B,EAA2C;IACvD,MAAMC,UAAU,GAAGrB,WAAW,CAACsB,aAAZ,CAA0BH,cAA1B,EAA0CC,eAA1C,CAAnB;IACAtB,WAAW,CAACuB,UAAD,CAAX,CACGhB,IADH,CACSC,IAAD,IAAU;MACdiB,UAAU;IACX,CAHH,EAIGd,KAJH,CAIUC,KAAD,IAAW;MAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACAT,MAAM,CAACU,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEhB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD,CAjCoD;EAmCrDuB,MAAM,EAAE,UAAUC,aAAV,EAAyB;IAC/B,MAAMJ,UAAU,GAAGrB,WAAW,CAAC0B,aAAZ,CAA0BD,aAA1B,CAAnB;IACA3B,WAAW,CAACuB,UAAD,CAAX,CACGhB,IADH,CACSC,IAAD,IAAU;MACdiB,UAAU;IACX,CAHH,EAIGd,KAJH,CAIUC,KAAD,IAAW;MAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACAT,MAAM,CAACU,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEhB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD,CAlDoD;EAoDrD0B,OAAO,EAAE,UAAUC,SAAV,EAAqB;IAC5B,MAAMC,WAAW,GAAG7B,WAAW,CAAC8B,cAAZ,CAA2BF,SAA3B,CAApB;IACA9B,WAAW,GACRO,IADH,CACSC,IAAD,IAAU;MACdiB,UAAU;IACX,CAHH,EAIGd,KAJH,CAIUC,KAAD,IAAW;MAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACAT,MAAM,CAACU,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEhB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD;AAnEoD,CAA1B,CAAtB"},"metadata":{},"sourceType":"module"}