{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { ImageBase } from \"../ImageBase/ImageBase\";\nimport { GridAvatarBadge } from \"./GridAvatarBadge/GridAvatarBadge\";\nexport var GRID_AVATAR_DEFAULT_SIZE = 48;\nexport var MAX_GRID_LENGTH = 4;\nvar warn = warnOnce(\"GridAvatar\");\n/**\n * @see https://vkcom.github.io/VKUI/#/GridAvatar\n */\nexport var GridAvatar = function (_param) {\n  var _param_src = _param.src,\n    src = _param_src === void 0 ? [] : _param_src,\n    _param_size = _param.size,\n    size = _param_size === void 0 ? GRID_AVATAR_DEFAULT_SIZE : _param_size,\n    className = _param.className,\n    children = _param.children,\n    restProps = _object_without_properties(_param, [\"src\", \"size\", \"className\", \"children\"]);\n  if (process.env.NODE_ENV === \"development\") {\n    if (src.length > MAX_GRID_LENGTH) {\n      warn(\"Длина массива src (\".concat(src.length, \") больше максимальной (\").concat(MAX_GRID_LENGTH, \")\"), \"error\");\n    }\n  }\n  return /*#__PURE__*/React.createElement(ImageBase, _object_spread_props(_object_spread({}, restProps), {\n    size: size,\n    className: classNames(\"vkuiGridAvatar\", className)\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiGridAvatar__in\",\n    \"aria-hidden\": true\n  }, src.map(function (url, index) {\n    return index < MAX_GRID_LENGTH ? /*#__PURE__*/React.createElement(\"div\", {\n      key: url,\n      className: \"vkuiGridAvatar__item\",\n      style: {\n        backgroundImage: \"url(\".concat(url, \")\")\n      }\n    }) : null;\n  })), children);\n};\nGridAvatar.Badge = GridAvatarBadge;","map":{"version":3,"names":["React","classNames","warnOnce","ImageBase","GridAvatarBadge","GRID_AVATAR_DEFAULT_SIZE","MAX_GRID_LENGTH","warn","GridAvatar","_param","src","_param_src","_param_size","size","className","children","restProps","_object_without_properties","process","env","NODE_ENV","length","concat","createElement","_object_spread_props","_object_spread","map","url","index","key","style","backgroundImage","Badge"],"sources":["../../../src/components/GridAvatar/GridAvatar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { ImageBase, type ImageBaseProps } from '../ImageBase/ImageBase';\nimport { GridAvatarBadge, type GridAvatarBadgeProps } from './GridAvatarBadge/GridAvatarBadge';\nimport styles from './GridAvatar.module.css';\n\nexport { GridAvatarBadgeProps };\n\nexport const GRID_AVATAR_DEFAULT_SIZE = 48;\n\nexport const MAX_GRID_LENGTH = 4;\n\nexport interface GridAvatarProps extends Omit<ImageBaseProps, 'src' | 'fallbackIcon'> {\n  /**\n   * Массив со ссылками. От 1 до 4 элементов.\n   */\n  src?: string[];\n}\n\nconst warn = warnOnce('GridAvatar');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/GridAvatar\n */\nexport const GridAvatar = ({\n  src = [],\n  size = GRID_AVATAR_DEFAULT_SIZE,\n  className,\n  children,\n  ...restProps\n}: GridAvatarProps) => {\n  if (process.env.NODE_ENV === 'development') {\n    if (src.length > MAX_GRID_LENGTH) {\n      warn(`Длина массива src (${src.length}) больше максимальной (${MAX_GRID_LENGTH})`, 'error');\n    }\n  }\n\n  return (\n    <ImageBase {...restProps} size={size} className={classNames(styles['GridAvatar'], className)}>\n      <div className={styles['GridAvatar__in']} aria-hidden>\n        {src.map((url, index) =>\n          index < MAX_GRID_LENGTH ? (\n            <div\n              key={url}\n              className={styles['GridAvatar__item']}\n              style={{ backgroundImage: `url(${url})` }}\n            />\n          ) : null,\n        )}\n      </div>\n      {children}\n    </ImageBase>\n  );\n};\n\nGridAvatar.Badge = GridAvatarBadge;\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,QAAQ,QAAQ;AACzB,SAASC,SAAS,QAA6B;AAC/C,SAASC,eAAe,QAAmC;AAK3D,OAAO,IAAMC,wBAAA,GAA2B;AAExC,OAAO,IAAMC,eAAA,GAAkB;AAS/B,IAAMC,IAAA,GAAOL,QAAA,CAAS;AAEtB;;;AAGA,OAAO,IAAMM,UAAA,GAAa,SAAAA,CAAAC,MAAA;0BACxBC,GAAA;IAAAA,GAAA,GAAAC,UAAA,cAAM,EAAE,GAAAA,UAAA;IAAAC,WAAA,GAAAH,MAAA,CACRI,IAAA;IAAAA,IAAA,GAAAD,WAAA,cAAOP,wBAAA,GAAAO,WAAA;IACPE,SAAA,GAAAL,MAAA,CAAAK,SAAA;IACAC,QAAA,GAAAN,MAAA,CAAAM,QAAA;IACGC,SAAA,GAAAC,0BAAA,CAAAR,MAAA,GAJH,OACA,QACA,aACA,W;EAGA,IAAIS,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;IAC1C,IAAIV,GAAA,CAAIW,MAAM,GAAGf,eAAA,EAAiB;MAChCC,IAAA,CAAK,qBAAC,CAAyDe,MAAA,CAApCZ,GAAA,CAAIW,MAAM,EAAC,2BAAyCC,MAAA,CAAhBhB,eAAA,EAAgB,MAAI;IACrF;EACF;EAEA,oBACEN,KAAA,CAAAuB,aAAA,CAACpB,SAAA,EAAAqB,oBAAA,CAAAC,cAAA,KAAcT,SAAA;IAAWH,IAAA,EAAMA,IAAA;IAAMC,SAAA,EAAWb,UAAA,mBAAiCa,SAAA;mBAChFd,KAAA,CAAAuB,aAAA,CAAC;IAAIT,SAAS;IAA4B;KACvCJ,GAAA,CAAIgB,GAAG,CAAC,UAACC,GAAA,EAAKC,KAAA;WACbA,KAAA,GAAQtB,eAAA,gBACNN,KAAA,CAAAuB,aAAA,CAAC;MACCM,GAAA,EAAKF,GAAA;MACLb,SAAS;MACTgB,KAAA,EAAO;QAAEC,eAAA,EAAiB,MAAC,CAAUT,MAAA,CAAJK,GAAA,EAAI;MAAG;SAExC;OAGPZ,QAAA;AAGP;AAEAP,UAAA,CAAWwB,KAAK,GAAG5B,eAAA"},"metadata":{},"sourceType":"module"}