{"ast":null,"code":"import { canUseDOM } from \"./dom\";\nexport function animate(param) {\n  var duration = param.duration,\n    timing = param.timing,\n    draw = param.draw,\n    _param_animationQueue = param.animationQueue,\n    animationQueue = _param_animationQueue === void 0 ? [] : _param_animationQueue;\n  if (!canUseDOM) {\n    return;\n  }\n  var start;\n  requestAnimationFrame(function animate(time) {\n    if (!start) {\n      start = time;\n    }\n    var timeFraction = Math.min((time - start) / duration, 1);\n    var progress = timing(timeFraction);\n    draw(progress);\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n      return;\n    }\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  });\n}","map":{"version":3,"names":["canUseDOM","animate","param","duration","timing","draw","_param_animationQueue","animationQueue","start","requestAnimationFrame","time","timeFraction","Math","min","progress","shift","length"],"sources":["../../src/lib/animate.ts"],"sourcesContent":["import { canUseDOM } from './dom';\n\n/**\n * Функция для js анимации\n * @param {number} duration\n * @param {function} timing тайминг функция анимации\n * @param {function} draw коллбэк, в который прокидывается прогресс [0, 1]\n * @returns {void}\n */\nexport type TimingInterface = (timeFraction: number) => number;\n\nexport type DrawInterface = (progress: number) => void;\n\nexport interface AnimateArgumentsInterface {\n  duration: number;\n  timing: TimingInterface;\n  draw: DrawInterface;\n  animationQueue: VoidFunction[];\n}\n\nexport function animate({\n  duration,\n  timing,\n  draw,\n  animationQueue = [],\n}: AnimateArgumentsInterface): void {\n  if (!canUseDOM) {\n    return;\n  }\n\n  let start: number;\n\n  requestAnimationFrame(function animate(time: number): void {\n    if (!start) {\n      start = time;\n    }\n    let timeFraction = Math.min((time - start) / duration, 1);\n\n    const progress = timing(timeFraction);\n\n    draw(progress);\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n      return;\n    }\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  });\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ;AAoB1B,OAAO,SAASC,QAAQC,KAKI;MAJ1BC,QAAA,GADsBD,KAAA,CACtBC,QAAA;IACAC,MAAA,GAFsBF,KAAA,CAEtBE,MAAA;IACAC,IAAA,GAHsBH,KAAA,CAGtBG,IAAA;IAAAC,qBAAA,GAHsBJ,KAAA,CAItBK,cAAA;IAAAA,cAAA,GAAAD,qBAAA,cAAiB,EAAE,GAAAA,qBAAA;EAEnB,IAAI,CAACN,SAAA,EAAW;IACd;EACF;EAEA,IAAIQ,KAAA;EAEJC,qBAAA,CAAsB,SAASR,QAAQS,IAAY;IACjD,IAAI,CAACF,KAAA,EAAO;MACVA,KAAA,GAAQE,IAAA;IACV;IACA,IAAIC,YAAA,GAAeC,IAAA,CAAKC,GAAG,CAAC,CAACH,IAAA,GAAOF,KAAI,IAAKL,QAAA,EAAU;IAEvD,IAAMW,QAAA,GAAWV,MAAA,CAAOO,YAAA;IAExBN,IAAA,CAAKS,QAAA;IAEL,IAAIH,YAAA,GAAe,GAAG;MACpBF,qBAAA,CAAsBR,OAAA;MACtB;IACF;IACAM,cAAA,CAAeQ,KAAK;IACpB,IAAIR,cAAA,CAAeS,MAAM,GAAG,GAAG;MAC7BT,cAAc,CAAC,EAAE;IACnB;EACF;AACF"},"metadata":{},"sourceType":"module"}