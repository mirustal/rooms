{"ast":null,"code":"import _asyncToGenerator from\"/Users/mirustal/Documents/project/rooms/front/rooms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/mirustal/Documents/project/rooms/front/rooms/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/mirustal/Documents/project/rooms/front/rooms/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect}from'react';import{getVkUserId}from'../../../../bridge/bridgeLib';var useAdminStatus=function useAdminStatus(roomInfo){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),userIsAdmin=_useState2[0],setIsAdmin=_useState2[1];useEffect(function(){var isAdminInRoom=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var user_id,findMember;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getVkUserId();case 2:user_id=_context.sent;if(!roomInfo){_context.next=6;break;}findMember=roomInfo.members.find(function(member){return member.id===user_id;});return _context.abrupt(\"return\",findMember&&findMember.role===\"admin\");case 6:return _context.abrupt(\"return\",false);case 7:case\"end\":return _context.stop();}}},_callee);}));return function isAdminInRoom(){return _ref.apply(this,arguments);};}();isAdminInRoom().then(setIsAdmin);},[roomInfo]);return userIsAdmin;};export default useAdminStatus;","map":{"version":3,"names":["useState","useEffect","getVkUserId","useAdminStatus","roomInfo","userIsAdmin","setIsAdmin","isAdminInRoom","user_id","findMember","members","find","member","id","role","then"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/hooks/AdminStatus.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getVkUserId } from '../../../../bridge/bridgeLib';\n\nconst useAdminStatus = (roomInfo) => {\n  const [userIsAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    const isAdminInRoom = async () => {\n      let user_id = await getVkUserId(); \n      if (roomInfo) {\n        let findMember = roomInfo.members.find(member => member.id === user_id);\n        return findMember && findMember.role === \"admin\";\n      }\n      return false;\n    };\n\n    isAdminInRoom().then(setIsAdmin);\n  }, [roomInfo]);\n\n  return userIsAdmin;\n};\n\nexport default useAdminStatus;"],"mappings":"8ZAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,WAAT,KAA4B,8BAA5B,CAEA,GAAMC,eAAc,CAAG,QAAjBA,eAAiB,CAACC,QAAD,CAAc,CACnC,cAAkCJ,QAAQ,CAAC,KAAD,CAA1C,wCAAOK,WAAP,eAAoBC,UAApB,eAEAL,SAAS,CAAC,UAAM,CACd,GAAMM,cAAa,0FAAG,gLACAL,YAAW,EADX,QAChBM,OADgB,mBAEhBJ,QAFgB,yBAGdK,UAHc,CAGDL,QAAQ,CAACM,OAAT,CAAiBC,IAAjB,CAAsB,SAAAC,MAAM,QAAIA,OAAM,CAACC,EAAP,GAAcL,OAAlB,EAA5B,CAHC,iCAIXC,UAAU,EAAIA,UAAU,CAACK,IAAX,GAAoB,OAJvB,yCAMb,KANa,wDAAH,kBAAbP,cAAa,0CAAnB,CASAA,aAAa,GAAGQ,IAAhB,CAAqBT,UAArB,EACD,CAXQ,CAWN,CAACF,QAAD,CAXM,CAAT,CAaA,MAAOC,YAAP,CACD,CAjBD,CAmBA,cAAeF,eAAf"},"metadata":{},"sourceType":"module"}