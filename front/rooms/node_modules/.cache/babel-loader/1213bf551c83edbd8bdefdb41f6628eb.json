{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { useCallback, useContext, useState } from \"react\";\nimport { AppRootContext } from \"../components/AppRoot/AppRootContext\";\nexport function useFocusVisible() {\n  var withKeyboardInputCheck = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n  var _useState = _sliced_to_array(useState(false), 2),\n    isFocused = _useState[0],\n    setIsFocused = _useState[1];\n  var keyboardInput = useContext(AppRootContext).keyboardInput;\n  var onFocus = useCallback(function (event) {\n    event.stopPropagation();\n    setIsFocused(true);\n  }, [setIsFocused]);\n  var onBlur = useCallback(function (event) {\n    event.stopPropagation();\n    setIsFocused(false);\n  }, [setIsFocused]);\n  var focusVisible = withKeyboardInputCheck ? keyboardInput && isFocused : isFocused;\n  return {\n    focusVisible: focusVisible,\n    onFocus: onFocus,\n    onBlur: onBlur\n  };\n}","map":{"version":3,"names":["useCallback","useContext","useState","AppRootContext","useFocusVisible","withKeyboardInputCheck","arguments","length","_useState","_sliced_to_array","isFocused","setIsFocused","keyboardInput","onFocus","event","stopPropagation","onBlur","focusVisible"],"sources":["../../src/hooks/useFocusVisible.ts"],"sourcesContent":["import { FocusEvent, useCallback, useContext, useState } from 'react';\nimport { AppRootContext } from '../components/AppRoot/AppRootContext';\n\nexport function useFocusVisible(withKeyboardInputCheck = true) {\n  const [isFocused, setIsFocused] = useState(false);\n  const { keyboardInput } = useContext(AppRootContext);\n\n  const onFocus = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(true);\n    },\n    [setIsFocused],\n  );\n\n  const onBlur = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(false);\n    },\n    [setIsFocused],\n  );\n\n  const focusVisible = withKeyboardInputCheck ? keyboardInput && isFocused : isFocused;\n\n  return {\n    focusVisible,\n    onFocus,\n    onBlur,\n  };\n}\n"],"mappings":";AAAA,SAAqBA,WAAW,EAAEC,UAAU,EAAEC,QAAQ,QAAQ;AAC9D,SAASC,cAAc,QAAQ;AAE/B,OAAO,SAASC,gBAAA;MAAgBC,sBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAAyB;EACvD,IAAkCE,SAAA,GAAAC,gBAAA,CAAAP,QAAA,CAAS;IAApCQ,SAAA,GAA2BF,SAAA;IAAhBG,YAAA,GAAgBH,SAAA;EAClC,IAAMI,aAAE,GAAkBX,UAAA,CAAWE,cAAA,EAA7BS,aAAA;EAER,IAAMC,OAAA,GAAUb,WAAA,CACd,UAACc,KAAA;IACCA,KAAA,CAAMC,eAAe;IACrBJ,YAAA,CAAa;EACf,GACA,CAACA,YAAA,CAAa;EAGhB,IAAMK,MAAA,GAAShB,WAAA,CACb,UAACc,KAAA;IACCA,KAAA,CAAMC,eAAe;IACrBJ,YAAA,CAAa;EACf,GACA,CAACA,YAAA,CAAa;EAGhB,IAAMM,YAAA,GAAeZ,sBAAA,GAAyBO,aAAA,IAAiBF,SAAA,GAAYA,SAAA;EAE3E,OAAO;IACLO,YAAA,EAAAA,YAAA;IACAJ,OAAA,EAAAA,OAAA;IACAG,MAAA,EAAAA;EACF;AACF"},"metadata":{},"sourceType":"module"}