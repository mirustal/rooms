{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { useDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n/**\n * Определяет направление текста элемента.\n *\n * ## Ограничения\n *\n * - Не следит за изменением направлением.\n * - Определяется только на второй рендер.\n *\n * ## Пример\n *\n * ```jsx\n * import { strict as assert } from 'node:assert';\n *\n * const Component = () => {\n *   const [ref, direction, writingMode] = useDirection();\n *\n *   React.useEffect(()=>{\n *     if (!direction || !writingMode) {\n *       return\n *     }\n *\n *     assert.equal(direction, 'ltr')\n *     assert.equal(writingMode, 'vertical-rl')\n *   }, [direction, writingMode])\n *\n *   return <div ref={ref} style={{writingMode: 'vertical-rl'}}>我家没有电脑。</div>\n * }\n * ```\n */\nexport function useDirection() {\n  var ref = React.useRef(null);\n  var _React_useState = _sliced_to_array(React.useState(undefined), 2),\n    direction = _React_useState[0],\n    setDirection = _React_useState[1];\n  var _React_useState1 = _sliced_to_array(React.useState(undefined), 2),\n    writingMode = _React_useState1[0],\n    setWritingMode = _React_useState1[1];\n  var window = useDOM().window;\n  var update = function () {\n    if (!window || !ref.current) {\n      return;\n    }\n    var styleDeclaration = window.getComputedStyle(ref.current);\n    setDirection(styleDeclaration.direction);\n    setWritingMode(styleDeclaration.writingMode);\n  };\n  useIsomorphicLayoutEffect(update, [window]);\n  return [ref, direction, writingMode];\n}","map":{"version":3,"names":["React","useDOM","useIsomorphicLayoutEffect","useDirection","ref","useRef","_React_useState","_sliced_to_array","useState","undefined","direction","setDirection","_React_useState1","writingMode","setWritingMode","window","update","current","styleDeclaration","getComputedStyle"],"sources":["../../src/hooks/useDirection.ts"],"sourcesContent":["import * as React from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\ntype Direction = 'ltr' | 'rtl';\ntype WritingMode = 'horizontal-tb' | 'vertical-rl' | 'vertical-lr';\n\n/**\n * Определяет направление текста элемента.\n *\n * ## Ограничения\n *\n * - Не следит за изменением направлением.\n * - Определяется только на второй рендер.\n *\n * ## Пример\n *\n * ```jsx\n * import { strict as assert } from 'node:assert';\n *\n * const Component = () => {\n *   const [ref, direction, writingMode] = useDirection();\n *\n *   React.useEffect(()=>{\n *     if (!direction || !writingMode) {\n *       return\n *     }\n *\n *     assert.equal(direction, 'ltr')\n *     assert.equal(writingMode, 'vertical-rl')\n *   }, [direction, writingMode])\n *\n *   return <div ref={ref} style={{writingMode: 'vertical-rl'}}>我家没有电脑。</div>\n * }\n * ```\n */\nexport function useDirection<T extends HTMLElement>(): [\n  React.RefObject<T>,\n  Direction | undefined,\n  WritingMode | undefined,\n] {\n  const ref = React.useRef<T>(null);\n\n  const [direction, setDirection] = React.useState<Direction | undefined>(undefined);\n  const [writingMode, setWritingMode] = React.useState<WritingMode | undefined>(undefined);\n\n  const { window } = useDOM();\n\n  const update = () => {\n    if (!window || !ref.current) {\n      return;\n    }\n\n    const styleDeclaration = window.getComputedStyle(ref.current);\n\n    setDirection(styleDeclaration.direction as Direction);\n    setWritingMode(styleDeclaration.writingMode as WritingMode);\n  };\n\n  useIsomorphicLayoutEffect(update, [window]);\n\n  return [ref, direction, writingMode];\n}\n"],"mappings":";AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,MAAM,QAAQ;AACvB,SAASC,yBAAyB,QAAQ;AAK1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAO,SAASC,aAAA;EAKd,IAAMC,GAAA,GAAMJ,KAAA,CAAMK,MAAM,CAAI;EAE5B,IAAkCC,eAAA,GAAAC,gBAAA,CAAAP,KAAA,CAAMQ,QAAQ,CAAwBC,SAAA;IAAjEC,SAAA,GAA2BJ,eAAA;IAAhBK,YAAA,GAAgBL,eAAA;EAClC,IAAsCM,gBAAA,GAAAL,gBAAA,CAAAP,KAAA,CAAMQ,QAAQ,CAA0BC,SAAA;IAAvEI,WAAA,GAA+BD,gBAAA;IAAlBE,cAAA,GAAkBF,gBAAA;EAEtC,IAAMG,MAAE,GAAWd,MAAA,GAAXc,MAAA;EAER,IAAMC,MAAA,GAAS,SAAAA,CAAA;IACb,IAAI,CAACD,MAAA,IAAU,CAACX,GAAA,CAAIa,OAAO,EAAE;MAC3B;IACF;IAEA,IAAMC,gBAAA,GAAmBH,MAAA,CAAOI,gBAAgB,CAACf,GAAA,CAAIa,OAAO;IAE5DN,YAAA,CAAaO,gBAAA,CAAiBR,SAAS;IACvCI,cAAA,CAAeI,gBAAA,CAAiBL,WAAW;EAC7C;EAEAX,yBAAA,CAA0Bc,MAAA,EAAQ,CAACD,MAAA,CAAO;EAE1C,OAAO,CAACX,GAAA,EAAKM,SAAA,EAAWG,WAAA,CAAY;AACtC"},"metadata":{},"sourceType":"module"}