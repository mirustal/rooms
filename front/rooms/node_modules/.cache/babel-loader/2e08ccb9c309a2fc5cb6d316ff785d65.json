{"ast":null,"code":"var _jsxFileName = \"/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx\",\n    _s = $RefreshSig$();\n\nimport { View, Panel, Group, PanelHeader, PanelHeaderBack, CellButton, PanelHeaderContent, PullToRefresh, ScreenSpinner } from \"@vkontakte/vkui\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport { Icon16MoreVertical, Icon24Add, Icon24LinkCircle } from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { editChannel } from \"../../../serverApi/serverApi\";\nimport React, { useEffect, useState } from \"react\";\nimport { ModalManager } from \"../../Modals\";\nimport { Locales } from \"../../../locales/locales\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Channels(_ref) {\n  _s();\n\n  let {\n    returnBack,\n    roomInfo,\n    userIsAdmin\n  } = _ref;\n  const [editModeActive, setEditModeActive] = useState(true);\n  const [isFetching, setFetching] = useState(false);\n  const [isFirstFetching, setFirstFetching] = useState(true);\n\n  const handleActiveEditMode = () => {\n    setEditModeActive(!editModeActive);\n  };\n\n  function renameChannel(channels, newNameChannel, channelId) {\n    console.log(channels);\n\n    for (let channel of channels) {\n      if (channel.id === channelId) {\n        channel.name = newNameChannel;\n        console.log(channel);\n        console.log(roomInfo);\n        return roomInfo;\n      }\n    }\n  }\n\n  function createChannel(channels, channelName) {\n    if (channels.length === 0) {\n      channels.push({\n        id: 1,\n        name: channelName\n      });\n    } else {\n      let lastChannelId = channels[channels.length - 1].id;\n      channels.push({\n        id: lastChannelId + 1,\n        name: channelName\n      });\n    }\n\n    roomInfo.channels = channels;\n    return roomInfo;\n  }\n\n  const createChannelInData = {\n    editRoom: function (channelName) {\n      editChannel(createChannel(roomInfo.channels, channelName)).then(room => {}).catch(error => {\n        alerts.showAlert(ErrorAlert({\n          message: Locales.Errors.FailedCreateRoom,\n          alertManager: alerts\n        }));\n      });\n    }\n  };\n  const renameChannelInData = {\n    editRoom: function (channelName, channelId) {\n      editChannel(renameChannel(roomInfo.channels, channelName, channelId)).then(room => {}).catch(error => {\n        alerts.showAlert(ErrorAlert({\n          message: Locales.Errors.FailedCreateRoom,\n          alertManager: alerts\n        }));\n      });\n    }\n  };\n  return roomInfo == null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(View, {\n    id: Views.Rooms.id,\n    activePanel: Views.Rooms.panels.list.id,\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      id: Views.Rooms.panels.list.id,\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        before: /*#__PURE__*/_jsxDEV(PanelHeaderBack, {\n          onClick: returnBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 30\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [roomInfo.name, /*#__PURE__*/_jsxDEV(AlterActionSheet, {\n            roomInfo: roomInfo,\n            returnBack: returnBack,\n            handleActiveEditMode: handleActiveEditMode,\n            userIsAdmin: userIsAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Group, {\n        children: [roomInfo.channels && roomInfo.channels.length > 0 && roomInfo.channels.map(channel => /*#__PURE__*/_jsxDEV(ChannelView, {\n          channel: channel,\n          connectToChannel: () => console.log(\"stub connect to channel \", channel.id),\n          renameToChannel: channelId => {\n            ModalManager.showModal(ModalIds.RenameChannel, () => {\n              renameChannelInData.editRoom(channelName, channelId);\n            });\n          },\n          editModeActive: editModeActive\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(CellButton, {\n          onClick: () => {\n            ModalManager.showModal(ModalIds.CreateChannel, createChannelInData);\n          },\n          centered: true,\n          before: /*#__PURE__*/_jsxDEV(Icon24Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this),\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u043D\\u0430\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Channels, \"ZC+fZnvr9Rxpa90TNOrouTVdWIo=\");\n\n_c = Channels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["View","Panel","Group","PanelHeader","PanelHeaderBack","CellButton","PanelHeaderContent","PullToRefresh","ScreenSpinner","ModalIds","Views","ChannelView","Icon16MoreVertical","Icon24Add","Icon24LinkCircle","AlterActionSheet","editChannel","React","useEffect","useState","ModalManager","Locales","Channels","returnBack","roomInfo","userIsAdmin","editModeActive","setEditModeActive","isFetching","setFetching","isFirstFetching","setFirstFetching","handleActiveEditMode","renameChannel","channels","newNameChannel","channelId","console","log","channel","id","name","createChannel","channelName","length","push","lastChannelId","createChannelInData","editRoom","then","room","catch","error","alerts","showAlert","ErrorAlert","message","Errors","FailedCreateRoom","alertManager","renameChannelInData","Rooms","panels","list","map","showModal","RenameChannel","CreateChannel"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx"],"sourcesContent":["import {\n  View,\n  Panel,\n  Group,\n  PanelHeader,\n  PanelHeaderBack,\n  CellButton,\n  PanelHeaderContent,\n  PullToRefresh,\n  ScreenSpinner,\n} from \"@vkontakte/vkui\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport {\n  Icon16MoreVertical,\n  Icon24Add,\n  Icon24LinkCircle,\n} from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { editChannel } from \"../../../serverApi/serverApi\";\nimport React, { useEffect, useState } from \"react\";\nimport { ModalManager } from \"../../Modals\";\nimport { Locales } from \"../../../locales/locales\";\n\nexport default function Channels({ returnBack, roomInfo, userIsAdmin }) {\n\n  const [editModeActive, setEditModeActive] = useState(true);\n  const [isFetching, setFetching] = useState(false);\n  const [isFirstFetching, setFirstFetching] = useState(true);\n\n  const handleActiveEditMode = () => {\n      setEditModeActive(!editModeActive);\n  };\n\n  function renameChannel(channels, newNameChannel, channelId) {\n    console.log(channels)\n    for(let channel of channels) {\n      if (channel.id === channelId) {\n        channel.name = newNameChannel\n        console.log(channel)\n        console.log(roomInfo)\n        return roomInfo\n      }\n    }\n  }\n\n  function createChannel(channels, channelName) {\n    if (channels.length === 0) {\n      channels.push({\n        id: 1,\n        name: channelName\n      });\n    } else {\n      let lastChannelId = channels[channels.length - 1].id;\n      channels.push({\n        id: lastChannelId + 1,\n        name: channelName\n      });\n    }\n    roomInfo.channels = channels\n    return roomInfo\n  }\n\n  const createChannelInData = {\n    editRoom: function (channelName) {\n      editChannel(createChannel(roomInfo.channels, channelName))\n        .then((room) => {\n        })\n        .catch((error) => {\n          alerts.showAlert(\n            ErrorAlert({\n              message: Locales.Errors.FailedCreateRoom,\n              alertManager: alerts,\n            })\n          );\n        });\n    },\n  };\n\n  const renameChannelInData = {\n    editRoom: function (channelName, channelId) {\n      editChannel(renameChannel(roomInfo.channels, channelName, channelId))\n        .then((room) => {\n        })\n        .catch((error) => {\n          alerts.showAlert(\n            ErrorAlert({\n              message: Locales.Errors.FailedCreateRoom,\n              alertManager: alerts,\n            })\n          );\n        });\n    },\n  };\n\n\n\n  return roomInfo == null ? (\n    <></>\n  ) : (\n    <View id={Views.Rooms.id} activePanel={Views.Rooms.panels.list.id}>\n      <Panel id={Views.Rooms.panels.list.id}>\n        <PanelHeader before={<PanelHeaderBack onClick={returnBack} />}>\n          <>\n            {roomInfo.name}\n            <AlterActionSheet\n              roomInfo={roomInfo}\n              returnBack={returnBack}\n              handleActiveEditMode={handleActiveEditMode}\n              userIsAdmin={userIsAdmin} />\n          </>\n        </PanelHeader>\n        <Group>\n          {roomInfo.channels &&\n            roomInfo.channels.length > 0 &&\n            roomInfo.channels.map((channel) => (\n              <ChannelView\n                key={channel.id}\n                channel={channel}\n                connectToChannel={() =>\n                  console.log(\"stub connect to channel \", channel.id)\n                }\n                renameToChannel={(channelId) => { \n                  ModalManager.showModal(ModalIds.RenameChannel, () => {\n                    renameChannelInData.editRoom(channelName, channelId);\n                  });\n                }}\n                editModeActive={editModeActive}\n              />\n            ))}\n          <CellButton\n            onClick={() => {\n              ModalManager.showModal(ModalIds.CreateChannel, createChannelInData);\n            }}\n            centered\n            before={<Icon24Add />}\n          >\n            Создать канал\n          </CellButton>\n        </Group>\n      </Panel>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}