{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames, hasReactNode } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { Platform } from \"../../lib/platform\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { Chevron } from \"./Chevron/Chevron\";\nvar warn = warnOnce(\"SimpleCell\");\nvar sizeYClassNames = _define_property({\n  none: \"vkuiSimpleCell--sizeY-none\"\n}, SizeType.COMPACT, \"vkuiSimpleCell--sizeY-compact\");\n/**\n * @see https://vkcom.github.io/VKUI/#/SimpleCell\n */\nexport var SimpleCell = function (_param) {\n  var badgeBeforeTitle = _param.badgeBeforeTitle,\n    badgeAfterTitle = _param.badgeAfterTitle,\n    badgeBeforeSubtitle = _param.badgeBeforeSubtitle,\n    badgeAfterSubtitle = _param.badgeAfterSubtitle,\n    before = _param.before,\n    indicator = _param.indicator,\n    children = _param.children,\n    after = _param.after,\n    expandable = _param.expandable,\n    multiline = _param.multiline,\n    subhead = _param.subhead,\n    subtitle = _param.subtitle,\n    extraSubtitle = _param.extraSubtitle,\n    className = _param.className,\n    _param_chevronSize = _param.chevronSize,\n    chevronSize = _param_chevronSize === void 0 ? \"m\" : _param_chevronSize,\n    restProps = _object_without_properties(_param, [\"badgeBeforeTitle\", \"badgeAfterTitle\", \"badgeBeforeSubtitle\", \"badgeAfterSubtitle\", \"before\", \"indicator\", \"children\", \"after\", \"expandable\", \"multiline\", \"subhead\", \"subtitle\", \"extraSubtitle\", \"className\", \"chevronSize\"]);\n  var platform = usePlatform();\n  if (process.env.NODE_ENV === \"development\" && expandable === true) {\n    // TODO [>=6]: Обновить типизацию для expandable свойства\n    warn('Значение true свойства expandable устарело и будет удалено в v6. Используйте expandable=\"auto\"');\n  }\n  var hasChevron = expandable === \"always\" || (expandable === true || expandable === \"auto\") && platform === Platform.IOS;\n  var hasAfter = hasReactNode(after) || hasChevron;\n  var _useAdaptivity = useAdaptivity(),\n    _useAdaptivity_sizeY = _useAdaptivity.sizeY,\n    sizeY = _useAdaptivity_sizeY === void 0 ? \"none\" : _useAdaptivity_sizeY;\n  return /*#__PURE__*/React.createElement(Tappable, _object_spread_props(_object_spread({}, restProps), {\n    className: classNames(\"vkuiSimpleCell\", sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY], multiline && \"vkuiSimpleCell--mult\", className)\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSimpleCell__before\"\n  }, before), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSimpleCell__middle\"\n  }, subhead && /*#__PURE__*/React.createElement(Subhead, {\n    Component: \"span\",\n    className: classNames(\"vkuiSimpleCell__text\", \"vkuiSimpleCell__subhead\")\n  }, subhead), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSimpleCell__content\"\n  }, badgeBeforeTitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSimpleCell__badge\"\n  }, badgeBeforeTitle), /*#__PURE__*/React.createElement(Headline, {\n    Component: \"span\",\n    className: \"vkuiSimpleCell__children\",\n    weight: \"3\"\n  }, children), hasReactNode(badgeAfterTitle) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSimpleCell__badge\"\n  }, badgeAfterTitle)), subtitle && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSimpleCell__content\"\n  }, badgeBeforeSubtitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSimpleCell__badge\"\n  }, badgeBeforeSubtitle), /*#__PURE__*/React.createElement(Footnote, {\n    normalize: false,\n    className: classNames(\"vkuiSimpleCell__text\", \"vkuiSimpleCell__subtitle\")\n  }, subtitle), badgeAfterSubtitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSimpleCell__badge\"\n  }, badgeAfterSubtitle)), extraSubtitle && /*#__PURE__*/React.createElement(Footnote, {\n    className: classNames(\"vkuiSimpleCell__text\", \"vkuiSimpleCell__extraSubtitle\")\n  }, extraSubtitle)), hasReactNode(indicator) && /*#__PURE__*/React.createElement(Headline, {\n    Component: \"span\",\n    weight: \"3\",\n    className: \"vkuiSimpleCell__indicator\"\n  }, indicator), hasAfter && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiSimpleCell__after\", \"vkuiInternalSimpleCell__after\")\n  }, after, hasChevron && /*#__PURE__*/React.createElement(Chevron, {\n    size: chevronSize,\n    className: \"vkuiSimpleCell__chevronIcon\"\n  })));\n};","map":{"version":3,"names":["React","classNames","hasReactNode","useAdaptivity","usePlatform","SizeType","Platform","warnOnce","Tappable","Footnote","Headline","Subhead","Chevron","warn","sizeYClassNames","_define_property","none","COMPACT","SimpleCell","_param","badgeBeforeTitle","badgeAfterTitle","badgeBeforeSubtitle","badgeAfterSubtitle","before","indicator","children","after","expandable","multiline","subhead","subtitle","extraSubtitle","className","_param_chevronSize","chevronSize","restProps","_object_without_properties","platform","process","env","NODE_ENV","hasChevron","IOS","hasAfter","_useAdaptivity","_useAdaptivity_sizeY","sizeY","createElement","_object_spread_props","_object_spread","REGULAR","Component","weight","normalize","size"],"sources":["../../../src/components/SimpleCell/SimpleCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { SizeType } from '../../lib/adaptivity';\nimport { Platform } from '../../lib/platform';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HasComponent } from '../../types';\nimport { Tappable, TappableProps } from '../Tappable/Tappable';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { Chevron } from './Chevron/Chevron';\nimport styles from './SimpleCell.module.css';\n\nconst warn = warnOnce('SimpleCell');\n\nconst sizeYClassNames = {\n  none: styles['SimpleCell--sizeY-none'],\n  [SizeType.COMPACT]: styles['SimpleCell--sizeY-compact'],\n};\n\nexport interface SimpleCellOwnProps extends HasComponent {\n  /**\n   * Иконка 28 или `<Avatar size={28|32|40|48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится слева от текста `children`.\n   */\n  badgeBeforeTitle?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится справа от текста `children`.\n   */\n  badgeAfterTitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится слева от текста `subtitle`.\n   */\n  badgeBeforeSubtitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится справа от текста `subtitle`.\n   */\n  badgeAfterSubtitle?: React.ReactNode;\n  /**\n   * Контейнер для текста справа от `children`.\n   */\n  indicator?: React.ReactNode;\n  /**\n   * Дополнительная строка текста над `children`.\n   */\n  subhead?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children`.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children` и `subtitle`.\n   */\n  extraSubtitle?: React.ReactNode;\n  /**\n   * Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.\n   */\n  after?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  /**\n   * В iOS добавляет chevron справа. Передавать `true`, если предполагается переход при клике по ячейке.\n   */\n  expandable?: boolean | 'auto' | 'always';\n  /**\n   * Размер chevron\n   */\n  chevronSize?: 's' | 'm';\n  /**\n   * Включает многострочный режим для отображения текста\n   */\n  multiline?: boolean;\n}\n\nexport interface SimpleCellProps extends SimpleCellOwnProps, TappableProps {}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SimpleCell\n */\nexport const SimpleCell = ({\n  badgeBeforeTitle,\n  badgeAfterTitle,\n  badgeBeforeSubtitle,\n  badgeAfterSubtitle,\n  before,\n  indicator,\n  children,\n  after,\n  expandable,\n  multiline,\n  subhead,\n  subtitle,\n  extraSubtitle,\n  className,\n  chevronSize = 'm',\n  ...restProps\n}: SimpleCellProps) => {\n  const platform = usePlatform();\n\n  if (process.env.NODE_ENV === 'development' && expandable === true) {\n    // TODO [>=6]: Обновить типизацию для expandable свойства\n    warn(\n      'Значение true свойства expandable устарело и будет удалено в v6. Используйте expandable=\"auto\"',\n    );\n  }\n\n  const hasChevron =\n    expandable === 'always' ||\n    ((expandable === true || expandable === 'auto') && platform === Platform.IOS);\n\n  const hasAfter = hasReactNode(after) || hasChevron;\n  const { sizeY = 'none' } = useAdaptivity();\n\n  return (\n    <Tappable\n      {...restProps}\n      className={classNames(\n        styles['SimpleCell'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        multiline && styles['SimpleCell--mult'],\n        className,\n      )}\n    >\n      <div className={styles['SimpleCell__before']}>{before}</div>\n      <div className={styles['SimpleCell__middle']}>\n        {subhead && (\n          <Subhead\n            Component=\"span\"\n            className={classNames(styles['SimpleCell__text'], styles['SimpleCell__subhead'])}\n          >\n            {subhead}\n          </Subhead>\n        )}\n        <div className={styles['SimpleCell__content']}>\n          {badgeBeforeTitle && (\n            <span className={styles['SimpleCell__badge']}>{badgeBeforeTitle}</span>\n          )}\n          <Headline Component=\"span\" className={styles['SimpleCell__children']} weight=\"3\">\n            {children}\n          </Headline>\n          {hasReactNode(badgeAfterTitle) && (\n            <span className={styles['SimpleCell__badge']}>{badgeAfterTitle}</span>\n          )}\n        </div>\n        {subtitle && (\n          <div className={styles['SimpleCell__content']}>\n            {badgeBeforeSubtitle && (\n              <span className={styles['SimpleCell__badge']}>{badgeBeforeSubtitle}</span>\n            )}\n            <Footnote\n              normalize={false}\n              className={classNames(styles['SimpleCell__text'], styles['SimpleCell__subtitle'])}\n            >\n              {subtitle}\n            </Footnote>\n            {badgeAfterSubtitle && (\n              <span className={styles['SimpleCell__badge']}>{badgeAfterSubtitle}</span>\n            )}\n          </div>\n        )}\n        {extraSubtitle && (\n          <Footnote\n            className={classNames(styles['SimpleCell__text'], styles['SimpleCell__extraSubtitle'])}\n          >\n            {extraSubtitle}\n          </Footnote>\n        )}\n      </div>\n      {hasReactNode(indicator) && (\n        <Headline Component=\"span\" weight=\"3\" className={styles['SimpleCell__indicator']}>\n          {indicator}\n        </Headline>\n      )}\n      {hasAfter && (\n        <div className={classNames(styles['SimpleCell__after'], 'vkuiInternalSimpleCell__after')}>\n          {after}\n          {hasChevron && (\n            <Chevron size={chevronSize} className={styles['SimpleCell__chevronIcon']} />\n          )}\n        </div>\n      )}\n    </Tappable>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}