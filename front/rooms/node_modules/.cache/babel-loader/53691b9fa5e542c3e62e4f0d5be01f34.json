{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { _ as _type_of } from \"@swc/helpers/_/_type_of\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { defaultFilterFn, getFormFieldModeFromSelectType } from \"../../lib/select\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { debounce, getTitleFromChildren } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { CustomSelectDropdown } from \"../CustomSelectDropdown/CustomSelectDropdown\";\nimport { CustomSelectOption } from \"../CustomSelectOption/CustomSelectOption\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon\";\nimport { Input } from \"../Input/Input\";\nimport { SelectMimicry } from \"../SelectMimicry/SelectMimicry\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nimport { CustomSelectClearButton } from \"./CustomSelectClearButton\";\nvar sizeYClassNames = _define_property({\n  none: \"vkuiCustomSelect--sizeY-none\"\n}, SizeType.COMPACT, \"vkuiCustomSelect--sizeY-compact\");\nvar findIndexAfter = function () {\n  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],\n    startIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex(function (option, i) {\n    return i > startIndex && !option.disabled;\n  });\n};\nvar findIndexBefore = function () {\n  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],\n    endIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : options.length;\n  var result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (var i = endIndex - 1; i >= 0; i--) {\n    var option = options[i];\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\nvar warn = warnOnce(\"CustomSelect\");\nvar checkOptionsValueType = function (options) {\n  if (new Set(options.map(function (item) {\n    return _type_of(item.value);\n  })).size > 1) {\n    warn(\"Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.\", \"error\");\n  }\n};\nfunction defaultRenderOptionFn(_param) {\n  var option = _param.option,\n    props = _object_without_properties(_param, [\"option\"]);\n  return /*#__PURE__*/React.createElement(CustomSelectOption, props);\n}\nvar handleOptionDown = function (e) {\n  e.preventDefault();\n};\nfunction findSelectedIndex(options, value, withClear) {\n  if (withClear && value === \"\") {\n    return -1;\n  }\n  var _options_findIndex;\n  return (_options_findIndex = options.findIndex(function (item) {\n    value = typeof item.value === \"number\" ? Number(value) : value;\n    return item.value === value;\n  })) !== null && _options_findIndex !== void 0 ? _options_findIndex : -1;\n}\nvar filter = function (options, inputValue, filterFn) {\n  return typeof filterFn === \"function\" ? options.filter(function (option) {\n    return filterFn(inputValue, option);\n  }) : options;\n};\nvar defaultOptions = [];\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect(props) {\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n    opened = _React_useState[0],\n    setOpened = _React_useState[1];\n  var before = props.before,\n    name = props.name,\n    className = props.className,\n    getRef = props.getRef,\n    getRootRef = props.getRootRef,\n    popupDirection = props.popupDirection,\n    style = props.style,\n    onChange = props.onChange,\n    children = props.children,\n    onInputChangeProp = props.onInputChange,\n    renderDropdown = props.renderDropdown,\n    onOpen = props.onOpen,\n    onClose = props.onClose,\n    fetching = props.fetching,\n    forceDropdownPortal = props.forceDropdownPortal,\n    _props_selectType = props.selectType,\n    selectType = _props_selectType === void 0 ? \"default\" : _props_selectType,\n    autoHideScrollbar = props.autoHideScrollbar,\n    autoHideScrollbarDelay = props.autoHideScrollbarDelay,\n    _props_searchable = props.searchable,\n    searchable = _props_searchable === void 0 ? false : _props_searchable,\n    tmp = props.renderOption,\n    renderOptionProp = tmp === void 0 ? defaultRenderOptionFn : tmp,\n    tmp1 = props.options,\n    optionsProp = tmp1 === void 0 ? defaultOptions : tmp1,\n    _props_emptyText = props.emptyText,\n    emptyText = _props_emptyText === void 0 ? \"Ничего не найдено\" : _props_emptyText,\n    _props_filterFn = props.filterFn,\n    filterFn = _props_filterFn === void 0 ? defaultFilterFn : _props_filterFn,\n    iconProp = props.icon,\n    _props_ClearButton = props.ClearButton,\n    ClearButton = _props_ClearButton === void 0 ? CustomSelectClearButton : _props_ClearButton,\n    _props_allowClearButton = props.allowClearButton,\n    allowClearButton = _props_allowClearButton === void 0 ? false : _props_allowClearButton,\n    _props_dropdownOffsetDistance = props.dropdownOffsetDistance,\n    dropdownOffsetDistance = _props_dropdownOffsetDistance === void 0 ? 0 : _props_dropdownOffsetDistance,\n    _props_fixDropdownWidth = props.fixDropdownWidth,\n    fixDropdownWidth = _props_fixDropdownWidth === void 0 ? true : _props_fixDropdownWidth,\n    restProps = _object_without_properties(props, [\"before\", \"name\", \"className\", \"getRef\", \"getRootRef\", \"popupDirection\", \"style\", \"onChange\", \"children\", \"onInputChange\", \"renderDropdown\", \"onOpen\", \"onClose\", \"fetching\", \"forceDropdownPortal\", \"selectType\", \"autoHideScrollbar\", \"autoHideScrollbarDelay\", \"searchable\", \"renderOption\", \"options\", \"emptyText\", \"filterFn\", \"icon\", \"ClearButton\", \"allowClearButton\", \"dropdownOffsetDistance\", \"fixDropdownWidth\"]);\n  if (process.env.NODE_ENV === \"development\") {\n    checkOptionsValueType(optionsProp);\n  }\n  var _useAdaptivity = useAdaptivity(),\n    _useAdaptivity_sizeY = _useAdaptivity.sizeY,\n    sizeY = _useAdaptivity_sizeY === void 0 ? \"none\" : _useAdaptivity_sizeY;\n  var containerRef = React.useRef(null);\n  var handleRootRef = useExternRef(containerRef, getRootRef);\n  var scrollBoxRef = React.useRef(null);\n  var selectElRef = useExternRef(getRef);\n  var _React_useState1 = _sliced_to_array(React.useState(-1), 2),\n    focusedOptionIndex = _React_useState1[0],\n    setFocusedOptionIndex = _React_useState1[1];\n  var _React_useState2 = _sliced_to_array(React.useState(props.value !== undefined), 2),\n    isControlledOutside = _React_useState2[0],\n    setIsControlledOutside = _React_useState2[1];\n  var _React_useState3 = _sliced_to_array(React.useState(\"\"), 2),\n    inputValue = _React_useState3[0],\n    setInputValue = _React_useState3[1];\n  var _React_useState4 = _sliced_to_array(React.useState(function () {\n      var _props_value, _ref;\n      return (_ref = (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : props.defaultValue) !== null && _ref !== void 0 ? _ref : allowClearButton ? \"\" : undefined;\n    }), 2),\n    nativeSelectValue = _React_useState4[0],\n    setNativeSelectValue = _React_useState4[1];\n  var _React_useState5 = _sliced_to_array(React.useState(\"\"), 2),\n    keyboardInput = _React_useState5[0],\n    setKeyboardInput = _React_useState5[1];\n  var _React_useState6 = _sliced_to_array(React.useState(undefined), 2),\n    popperPlacement = _React_useState6[0],\n    setPopperPlacement = _React_useState6[1];\n  var _React_useState7 = _sliced_to_array(React.useState(optionsProp), 2),\n    options = _React_useState7[0],\n    setOptions = _React_useState7[1];\n  var _props_value;\n  var _React_useState8 = _sliced_to_array(React.useState(findSelectedIndex(optionsProp, (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : props.defaultValue, allowClearButton)), 2),\n    selectedOptionIndex = _React_useState8[0],\n    setSelectedOptionIndex = _React_useState8[1];\n  React.useEffect(function () {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue(function (nativeSelectValue) {\n      var _props_value;\n      return (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : nativeSelectValue;\n    });\n  }, [props.value]);\n  useIsomorphicLayoutEffect(function () {\n    if (options.some(function (param) {\n      var value = param.value;\n      return nativeSelectValue === value;\n    }) || allowClearButton && nativeSelectValue === \"\") {\n      var _selectElRef_current;\n      var event = new Event(\"change\", {\n        bubbles: true\n      });\n      (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n  var selected = React.useMemo(function () {\n    if (!options.length) {\n      return null;\n    }\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n  var openedClassNames = React.useMemo(function () {\n    return opened && dropdownOffsetDistance === 0 && ((popperPlacement === null || popperPlacement === void 0 ? void 0 : popperPlacement.includes(\"top\")) ? \"vkuiCustomSelect--pop-up\" : \"vkuiCustomSelect--pop-down\") || undefined;\n  }, [dropdownOffsetDistance, opened, popperPlacement]);\n  var resetKeyboardInput = React.useCallback(function () {\n    setKeyboardInput(\"\");\n  }, []);\n  var scrollToElement = React.useCallback(function (index) {\n    var center = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var dropdown = scrollBoxRef.current;\n    var item = dropdown ? dropdown.children[index] : null;\n    if (!item || !dropdown) {\n      return;\n    }\n    var dropdownHeight = dropdown.offsetHeight;\n    var scrollTop = dropdown.scrollTop;\n    var itemTop = item.offsetTop;\n    var itemHeight = item.offsetHeight;\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n  var isValidIndex = React.useCallback(function (index) {\n    var _options_length;\n    return index >= 0 && index < ((_options_length = options.length) !== null && _options_length !== void 0 ? _options_length : 0);\n  }, [options.length]);\n  var focusOptionByIndex = React.useCallback(function (index) {\n    var scrollTo = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    var _options_length;\n    if (index === undefined || index < 0 || index > ((_options_length = options.length) !== null && _options_length !== void 0 ? _options_length : 0) - 1) {\n      return;\n    }\n    var option = options[index];\n    if (option === null || option === void 0 ? void 0 : option.disabled) {\n      return;\n    }\n    if (scrollTo) {\n      scrollToElement(index);\n    }\n    // Это оптимизация, прежде всего, под `onMouseOver`\n    setFocusedOptionIndex(function (focusedOptionIndex) {\n      return focusedOptionIndex !== index ? index : focusedOptionIndex;\n    });\n  }, [options, scrollToElement]);\n  var areOptionsShown = React.useCallback(function () {\n    return scrollBoxRef.current !== null;\n  }, []);\n  var setScrollBoxRef = React.useCallback(function (ref) {\n    scrollBoxRef.current = ref;\n    if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n      {\n        scrollToElement(selectedOptionIndex, true);\n      }\n    }\n  }, [isValidIndex, scrollToElement, selectedOptionIndex]);\n  var onKeyboardInput = React.useCallback(function (key) {\n    var fullInput = keyboardInput + key;\n    var optionIndex = options.findIndex(function (option) {\n      return getTitleFromChildren(option.label).toLowerCase().includes(fullInput);\n    });\n    if (optionIndex !== undefined && optionIndex > -1) {\n      focusOptionByIndex(optionIndex);\n    }\n    setKeyboardInput(fullInput);\n  }, [focusOptionByIndex, keyboardInput, options]);\n  /**\n  * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n  *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n  */\n  var close = React.useCallback(function () {\n    resetKeyboardInput();\n    setInputValue(\"\");\n    setOpened(false);\n    setFocusedOptionIndex(-1);\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  }, [onClose, resetKeyboardInput]);\n  var selectOption = React.useCallback(function (index) {\n    var item = options[index];\n    setNativeSelectValue(item === null || item === void 0 ? void 0 : item.value);\n    close();\n    var shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync = isControlledOutside && props.value !== nativeSelectValue && nativeSelectValue === (item === null || item === void 0 ? void 0 : item.value);\n    if (shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync) {\n      var _selectElRef_current;\n      var event = new Event(\"change\", {\n        bubbles: true\n      });\n      (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);\n    }\n  }, [close, options, selectElRef, isControlledOutside, props.value, nativeSelectValue]);\n  var selectFocused = React.useCallback(function () {\n    if (focusedOptionIndex === undefined || !isValidIndex(focusedOptionIndex)) {\n      return;\n    }\n    selectOption(focusedOptionIndex);\n  }, [focusedOptionIndex, isValidIndex, selectOption]);\n  var open = React.useCallback(function () {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n    if (typeof onOpen === \"function\") {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n  var onBlur = React.useCallback(function () {\n    var _selectElRef_current;\n    close();\n    var event = new Event(\"blur\");\n    (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);\n  }, [close, selectElRef]);\n  var resetFocusedOption = React.useCallback(function () {\n    setFocusedOptionIndex(-1);\n  }, []);\n  var onFocus = React.useCallback(function () {\n    var _selectElRef_current;\n    var event = new Event(\"focus\");\n    (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);\n  }, [selectElRef]);\n  var onClick = React.useCallback(function () {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n  var handleKeyUp = React.useMemo(function () {\n    return debounce(resetKeyboardInput, 1000);\n  }, [resetKeyboardInput]);\n  var focusOption = React.useCallback(function (type) {\n    var index = focusedOptionIndex;\n    if (type === \"next\") {\n      var nextIndex = findIndexAfter(options, index);\n      index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n    } else if (type === \"prev\") {\n      var beforeIndex = findIndexBefore(options, index);\n      index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n    }\n\n    focusOptionByIndex(index);\n  }, [focusOptionByIndex, focusedOptionIndex, options]);\n  React.useEffect(function updateOptionsAndSelectedOptionIndex() {\n    var _props_value, _ref;\n    var value = (_ref = (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : nativeSelectValue) !== null && _ref !== void 0 ? _ref : props.defaultValue;\n    var options = searchable && inputValue !== undefined ? filter(optionsProp, inputValue, filterFn) : optionsProp;\n    setOptions(options);\n    setSelectedOptionIndex(findSelectedIndex(options, value, allowClearButton));\n  }, [filterFn, inputValue, nativeSelectValue, optionsProp, props.defaultValue, props.value, searchable, allowClearButton]);\n  /**\n  * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n  * выпадающему списку.\n  */\n  var onLabelClick = React.useCallback(function (e) {\n    var _scrollBoxRef_current;\n    if ((_scrollBoxRef_current = scrollBoxRef.current) === null || _scrollBoxRef_current === void 0 ? void 0 : _scrollBoxRef_current.contains(e.target)) {\n      e.preventDefault();\n    }\n  }, []);\n  var onNativeSelectChange = function (e) {\n    var newSelectedOptionIndex = findSelectedIndex(options, e.currentTarget.value, allowClearButton);\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange === null || onChange === void 0 ? void 0 : onChange(e);\n    }\n  };\n  var onInputKeyDown = React.useCallback(function (event) {\n    [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) && areOptionsShown() && event.preventDefault();\n    switch (event.key) {\n      case \"ArrowUp\":\n        areOptionsShown() && focusOption(\"prev\");\n        break;\n      case \"ArrowDown\":\n        areOptionsShown() && focusOption(\"next\");\n        break;\n      case \"Escape\":\n        close();\n        break;\n      case \"Enter\":\n        areOptionsShown() && selectFocused();\n        break;\n    }\n  }, [areOptionsShown, close, focusOption, selectFocused]);\n  var onInputChange = React.useCallback(function (e) {\n    // TODO [>=6]: удалить `onInputChangeProp`.\n    if (onInputChangeProp) {\n      var options = onInputChangeProp(e, optionsProp);\n      if (options) {\n        if (process.env.NODE_ENV === \"development\") {\n          warn(\"Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет \" + \"проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.\");\n        }\n        setOptions(options);\n        setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n      }\n    } else {\n      var options1 = filter(optionsProp, e.target.value, filterFn);\n      setOptions(options1);\n      setSelectedOptionIndex(findSelectedIndex(options1, nativeSelectValue, allowClearButton));\n    }\n    setInputValue(e.target.value);\n  }, [filterFn, nativeSelectValue, onInputChangeProp, optionsProp, allowClearButton]);\n  var handleKeyDownSelect = React.useCallback(function (event) {\n    if (event.key.length === 1 && event.key !== \" \") {\n      onKeyboardInput(event.key);\n      return;\n    }\n    [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) && areOptionsShown() && event.preventDefault();\n    switch (event.key) {\n      case \"ArrowUp\":\n        if (opened) {\n          areOptionsShown() && focusOption(\"prev\");\n        } else {\n          open();\n        }\n        break;\n      case \"ArrowDown\":\n        if (opened) {\n          areOptionsShown() && focusOption(\"next\");\n        } else {\n          open();\n        }\n        break;\n      case \"Escape\":\n        close();\n        break;\n      case \"Enter\":\n      case \"Spacebar\":\n      case \" \":\n        if (opened) {\n          areOptionsShown() && selectFocused();\n        } else {\n          open();\n        }\n        break;\n    }\n  }, [areOptionsShown, close, focusOption, onKeyboardInput, open, opened, selectFocused]);\n  var handleOptionClick = React.useCallback(function (e) {\n    var _e_currentTarget_parentNode;\n    var index = Array.prototype.indexOf.call((_e_currentTarget_parentNode = e.currentTarget.parentNode) === null || _e_currentTarget_parentNode === void 0 ? void 0 : _e_currentTarget_parentNode.children, e.currentTarget);\n    var option = options[index];\n    if (option && !option.disabled) {\n      selectOption(index);\n    }\n  }, [options, selectOption]);\n  var handleOptionHover = React.useCallback(function (e) {\n    var _e_currentTarget_parentNode;\n    focusOptionByIndex(Array.prototype.indexOf.call((_e_currentTarget_parentNode = e.currentTarget.parentNode) === null || _e_currentTarget_parentNode === void 0 ? void 0 : _e_currentTarget_parentNode.children, e.currentTarget), false);\n  }, [focusOptionByIndex]);\n  var renderOption = React.useCallback(function (option, index) {\n    var hovered = index === focusedOptionIndex;\n    var selected = index === selectedOptionIndex;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"\".concat(option.value)\n    }, renderOptionProp({\n      option: option,\n      hovered: hovered,\n      children: option.label,\n      selected: selected,\n      disabled: option.disabled,\n      onClick: handleOptionClick,\n      onMouseDown: handleOptionDown,\n      // Используем `onMouseOver` вместо `onMouseEnter`.\n      // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n      //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n      //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n      //  2. Если это тач-устройство.\n      //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n      //     но не на тот, на который нажали в первый раз.\n      // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n      onMouseOver: handleOptionHover\n    }));\n  }, [focusedOptionIndex, handleOptionClick, handleOptionHover, renderOptionProp, selectedOptionIndex]);\n  var resolvedContent = React.useMemo(function () {\n    var defaultDropdownContent = (options === null || options === void 0 ? void 0 : options.length) > 0 ? options.map(renderOption) : /*#__PURE__*/React.createElement(Footnote, {\n      className: \"vkuiCustomSelect__empty\"\n    }, emptyText);\n    if (typeof renderDropdown === \"function\") {\n      return renderDropdown({\n        defaultDropdownContent: defaultDropdownContent\n      });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n  var controlledValueSet = isControlledOutside && props.value !== \"\";\n  var uncontrolledValueSet = !isControlledOutside && nativeSelectValue !== \"\";\n  var clearButtonShown = allowClearButton && !opened && (controlledValueSet || uncontrolledValueSet);\n  var clearButton = React.useMemo(function () {\n    if (!clearButtonShown) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(ClearButton, {\n      className: iconProp === undefined ? \"vkuiCustomSelect--clear-icon\" : undefined,\n      onClick: function () {\n        return setNativeSelectValue(\"\");\n      }\n    });\n  }, [clearButtonShown, ClearButton, iconProp]);\n  var icon = React.useMemo(function () {\n    if (iconProp !== undefined) {\n      return iconProp;\n    }\n    return /*#__PURE__*/React.createElement(DropdownIcon, {\n      className: clearButtonShown ? \"vkuiCustomSelect__dropdown-icon\" : undefined,\n      opened: opened\n    });\n  }, [clearButtonShown, iconProp, opened]);\n  var afterIcons = (icon || clearButtonShown) && /*#__PURE__*/React.createElement(React.Fragment, null, clearButton, icon);\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: classNames(\"vkuiCustomSelect\", sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY], className),\n    style: style,\n    ref: handleRootRef,\n    onClick: onLabelClick\n  }, opened && searchable ? /*#__PURE__*/React.createElement(Input, _object_spread_props(_object_spread({}, restProps), {\n    autoFocus: true,\n    onBlur: onBlur,\n    className: openedClassNames,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onChange: onInputChange,\n    // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n    // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n    // @ts-expect-error: TS2322 MouseEventHandler<HTMLSelectElement> !== MouseEventHandler<HTMLInputElement>\n    onClick: props.onClick,\n    before: before,\n    after: afterIcons,\n    mode: getFormFieldModeFromSelectType(selectType)\n  })) : /*#__PURE__*/React.createElement(SelectMimicry, _object_spread_props(_object_spread({}, restProps), {\n    \"aria-hidden\": true,\n    onClick: onClick,\n    onKeyDown: handleKeyDownSelect,\n    onKeyUp: handleKeyUp,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    className: openedClassNames,\n    before: before,\n    after: afterIcons,\n    selectType: selectType\n  }), selected === null || selected === void 0 ? void 0 : selected.label), /*#__PURE__*/React.createElement(\"select\", {\n    ref: selectElRef,\n    name: name,\n    onChange: onNativeSelectChange,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onClick: props.onClick,\n    value: nativeSelectValue,\n    \"aria-hidden\": true,\n    className: \"vkuiCustomSelect__control\"\n  }, allowClearButton && /*#__PURE__*/React.createElement(\"option\", {\n    key: \"\",\n    value: \"\"\n  }), optionsProp.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: \"\".concat(item.value),\n      value: item.value\n    });\n  })), opened && /*#__PURE__*/React.createElement(CustomSelectDropdown, {\n    targetRef: containerRef,\n    placement: popupDirection,\n    scrollBoxRef: setScrollBoxRef,\n    onPlacementChange: setPopperPlacement,\n    onMouseLeave: resetFocusedOption,\n    fetching: fetching,\n    offsetDistance: dropdownOffsetDistance,\n    sameWidth: fixDropdownWidth,\n    forcePortal: forceDropdownPortal,\n    autoHideScrollbar: autoHideScrollbar,\n    autoHideScrollbarDelay: autoHideScrollbarDelay\n  }, resolvedContent));\n}","map":{"version":3,"names":["React","classNames","useAdaptivity","useExternRef","SizeType","defaultFilterFn","getFormFieldModeFromSelectType","useIsomorphicLayoutEffect","debounce","getTitleFromChildren","warnOnce","CustomSelectDropdown","CustomSelectOption","DropdownIcon","Input","SelectMimicry","Footnote","CustomSelectClearButton","sizeYClassNames","_define_property","none","COMPACT","findIndexAfter","options","arguments","length","startIndex","findIndex","option","i","disabled","findIndexBefore","endIndex","result","warn","checkOptionsValueType","Set","map","item","_type_of","value","size","defaultRenderOptionFn","_param","props","_object_without_properties","createElement","handleOptionDown","e","preventDefault","findSelectedIndex","withClear","_options_findIndex","Number","filter","inputValue","filterFn","defaultOptions","CustomSelect","_React_useState","_sliced_to_array","useState","opened","setOpened","before","name","className","getRef","getRootRef","popupDirection","style","onChange","children","onInputChangeProp","onInputChange","renderDropdown","onOpen","onClose","fetching","forceDropdownPortal","_props_selectType","selectType","autoHideScrollbar","autoHideScrollbarDelay","_props_searchable","searchable","tmp","renderOption","renderOptionProp","tmp1","optionsProp","_props_emptyText","emptyText","_props_filterFn","iconProp","icon","_props_ClearButton","ClearButton","_props_allowClearButton","allowClearButton","_props_dropdownOffsetDistance","dropdownOffsetDistance","_props_fixDropdownWidth","fixDropdownWidth","restProps","process","env","NODE_ENV","_useAdaptivity","_useAdaptivity_sizeY","sizeY","containerRef","useRef","handleRootRef","scrollBoxRef","selectElRef","_React_useState1","focusedOptionIndex","setFocusedOptionIndex","_React_useState2","undefined","isControlledOutside","setIsControlledOutside","_React_useState3","setInputValue","_React_useState4","_props_value","_ref","defaultValue","nativeSelectValue","setNativeSelectValue","_React_useState5","keyboardInput","setKeyboardInput","_React_useState6","popperPlacement","setPopperPlacement","_React_useState7","setOptions","_React_useState8","selectedOptionIndex","setSelectedOptionIndex","useEffect","some","param","_selectElRef_current","event","Event","bubbles","current","dispatchEvent","selected","useMemo","openedClassNames","includes","resetKeyboardInput","useCallback","scrollToElement","index","center","dropdown","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","isValidIndex","_options_length","focusOptionByIndex","scrollTo","areOptionsShown","setScrollBoxRef","ref","onKeyboardInput","key","fullInput","optionIndex","label","toLowerCase","close","selectOption","shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync","selectFocused","open","onBlur","resetFocusedOption","onFocus","onClick","handleKeyUp","focusOption","type","nextIndex","beforeIndex","updateOptionsAndSelectedOptionIndex","onLabelClick","_scrollBoxRef_current","contains","target","onNativeSelectChange","newSelectedOptionIndex","currentTarget","onInputKeyDown","options1","handleKeyDownSelect","handleOptionClick","_e_currentTarget_parentNode","Array","prototype","indexOf","call","parentNode","handleOptionHover","hovered","Fragment","concat","onMouseDown","onMouseOver","resolvedContent","defaultDropdownContent","controlledValueSet","uncontrolledValueSet","clearButtonShown","clearButton","afterIcons","REGULAR","_object_spread_props","_object_spread","autoFocus","onKeyDown","after","mode","onKeyUp","targetRef","placement","onPlacementChange","onMouseLeave","offsetDistance","sameWidth","forcePortal"],"sources":["../../../src/components/CustomSelect/CustomSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { SizeType } from '../../lib/adaptivity';\nimport type { PlacementWithAuto } from '../../lib/floating';\nimport { defaultFilterFn, getFormFieldModeFromSelectType } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { debounce, getTitleFromChildren } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { TrackerOptionsProps } from '../CustomScrollView/useTrackerVisibility';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormFieldProps } from '../FormField/FormField';\nimport { Input } from '../Input/Input';\nimport { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport { SelectType } from '../Select/Select';\nimport { SelectMimicry } from '../SelectMimicry/SelectMimicry';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { CustomSelectClearButton, CustomSelectClearButtonProps } from './CustomSelectClearButton';\nimport styles from './CustomSelect.module.css';\n\nconst sizeYClassNames = {\n  none: styles['CustomSelect--sizeY-none'],\n  [SizeType.COMPACT]: styles['CustomSelect--sizeY-compact'],\n};\n\nconst findIndexAfter = (options: CustomSelectOptionInterface[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nconst warn = warnOnce('CustomSelect');\n\nconst checkOptionsValueType = (options: CustomSelectOptionInterface[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      'Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.',\n      'error',\n    );\n  }\n};\n\nfunction defaultRenderOptionFn({ option, ...props }: CustomSelectOptionProps): React.ReactNode {\n  return <CustomSelectOption {...props} />;\n}\n\nconst handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n  e.preventDefault();\n};\n\nfunction findSelectedIndex(\n  options: CustomSelectOptionInterface[],\n  value: SelectValue,\n  withClear: boolean,\n) {\n  if (withClear && value === '') {\n    return -1;\n  }\n  return (\n    options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    }) ?? -1\n  );\n}\n\nconst filter = (\n  options: SelectProps['options'],\n  inputValue: string,\n  filterFn: SelectProps['filterFn'],\n) => {\n  return typeof filterFn === 'function'\n    ? options.filter((option) => filterFn(inputValue, option))\n    : options;\n};\n\nconst defaultOptions: CustomSelectOptionInterface[] = [];\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: React.ReactElement | string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\ninterface CustomSelectRenderOption extends CustomSelectOptionProps {\n  option: CustomSelectOptionInterface;\n}\n\nexport interface SelectProps extends NativeSelectProps, FormFieldProps, TrackerOptionsProps {\n  /**\n   * Если `true`, то при клике на селект в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`.\n   */\n  emptyText?: string;\n  /**\n   * > ⚠️ В **v6** из возвращаемых типов будет удалён `CustomSelectOptionInterface[]`. Для кастомной фильтрации используйте\n   * > `filterFn`.\n   */\n  onInputChange?: (\n    e: React.ChangeEvent,\n    options: CustomSelectOptionInterface[],\n  ) => void | CustomSelectOptionInterface[];\n  options: CustomSelectOptionInterface[];\n  /**\n   * Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.\n   */\n  filterFn?:\n    | false\n    | ((\n        value: string,\n        option: CustomSelectOptionInterface,\n        getOptionLabel?: (option: Partial<CustomSelectOptionInterface>) => string,\n      ) => boolean);\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](https://vkcom.github.io/VKUI/#/CustomSelectOption?id=props)\n   *\n   * > ⚠️  Важно: cвойство опции `disabled` должно выставляться только через проп `options`.\n   * > Запрещается выставлять `disabled` проп опциям в обход `options`, иначе селект не будет знать об актуальном состоянии\n   * опции.\n   */\n  renderOption?: (props: CustomSelectRenderOption) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В `defaultDropdownContent` содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n   * \"победит\" `renderDropdown`.\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n  /**\n   * Кастомная кнопка для очистки значения.\n   * Должна принимать обязательное свойство `onClick`\n   */\n  ClearButton?: React.ComponentType<CustomSelectClearButtonProps>;\n  /**\n   * Если `true`, то справа будет отображаться кнопка для очистки значения\n   */\n  allowClearButton?: boolean;\n  dropdownOffsetDistance?: number;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: SelectType;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect(props: SelectProps) {\n  const [opened, setOpened] = React.useState(false);\n  const {\n    before,\n    name,\n    className,\n    getRef,\n    getRootRef,\n    popupDirection,\n    style,\n    onChange,\n    children,\n    onInputChange: onInputChangeProp,\n    renderDropdown,\n    onOpen,\n    onClose,\n    fetching,\n    forceDropdownPortal,\n    selectType = 'default',\n    autoHideScrollbar,\n    autoHideScrollbarDelay,\n    searchable = false,\n    renderOption: renderOptionProp = defaultRenderOptionFn,\n    options: optionsProp = defaultOptions,\n    emptyText = 'Ничего не найдено',\n    filterFn = defaultFilterFn,\n    icon: iconProp,\n    ClearButton = CustomSelectClearButton,\n    allowClearButton = false,\n    dropdownOffsetDistance = 0,\n    fixDropdownWidth = true,\n    ...restProps\n  } = props;\n\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const containerRef = React.useRef<HTMLLabelElement>(null);\n  const handleRootRef = useExternRef(containerRef, getRootRef);\n  const scrollBoxRef = React.useRef<HTMLDivElement | null>(null);\n  const selectElRef = useExternRef(getRef);\n\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | undefined>(-1);\n  const [isControlledOutside, setIsControlledOutside] = React.useState(props.value !== undefined);\n  const [inputValue, setInputValue] = React.useState('');\n  const [nativeSelectValue, setNativeSelectValue] = React.useState(\n    () => props.value ?? props.defaultValue ?? (allowClearButton ? '' : undefined),\n  );\n  const [keyboardInput, setKeyboardInput] = React.useState('');\n  const [popperPlacement, setPopperPlacement] = React.useState<PlacementWithAuto | undefined>(\n    undefined,\n  );\n  const [options, setOptions] = React.useState(optionsProp);\n  const [selectedOptionIndex, setSelectedOptionIndex] = React.useState<number | undefined>(\n    findSelectedIndex(optionsProp, props.value ?? props.defaultValue, allowClearButton),\n  );\n\n  React.useEffect(() => {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue((nativeSelectValue) => props.value ?? nativeSelectValue);\n  }, [props.value]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      options.some(({ value }) => nativeSelectValue === value) ||\n      (allowClearButton && nativeSelectValue === '')\n    ) {\n      const event = new Event('change', { bubbles: true });\n\n      selectElRef.current?.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n\n  const selected = React.useMemo(() => {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n\n  const openedClassNames = React.useMemo(\n    () =>\n      (opened &&\n        dropdownOffsetDistance === 0 &&\n        (popperPlacement?.includes('top')\n          ? styles['CustomSelect--pop-up']\n          : styles['CustomSelect--pop-down'])) ||\n      undefined,\n    [dropdownOffsetDistance, opened, popperPlacement],\n  );\n\n  const resetKeyboardInput = React.useCallback(() => {\n    setKeyboardInput('');\n  }, []);\n\n  const scrollToElement = React.useCallback((index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n\n  const isValidIndex = React.useCallback(\n    (index: number) => {\n      return index >= 0 && index < (options.length ?? 0);\n    },\n    [options.length],\n  );\n\n  const focusOptionByIndex = React.useCallback(\n    (index: number | undefined, scrollTo = true) => {\n      if (index === undefined || index < 0 || index > (options.length ?? 0) - 1) {\n        return;\n      }\n\n      const option = options[index];\n\n      if (option?.disabled) {\n        return;\n      }\n\n      if (scrollTo) {\n        scrollToElement(index);\n      }\n\n      // Это оптимизация, прежде всего, под `onMouseOver`\n      setFocusedOptionIndex((focusedOptionIndex) =>\n        focusedOptionIndex !== index ? index : focusedOptionIndex,\n      );\n    },\n    [options, scrollToElement],\n  );\n\n  const areOptionsShown = React.useCallback(() => {\n    return scrollBoxRef.current !== null;\n  }, []);\n\n  const setScrollBoxRef = React.useCallback(\n    (ref: HTMLDivElement | null) => {\n      scrollBoxRef.current = ref;\n\n      if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n        {\n          scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    },\n    [isValidIndex, scrollToElement, selectedOptionIndex],\n  );\n\n  const onKeyboardInput = React.useCallback(\n    (key: string) => {\n      const fullInput = keyboardInput + key;\n\n      const optionIndex = options.findIndex((option) => {\n        return getTitleFromChildren(option.label).toLowerCase().includes(fullInput);\n      });\n\n      if (optionIndex !== undefined && optionIndex > -1) {\n        focusOptionByIndex(optionIndex);\n      }\n\n      setKeyboardInput(fullInput);\n    },\n    [focusOptionByIndex, keyboardInput, options],\n  );\n\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n  const close = React.useCallback(() => {\n    resetKeyboardInput();\n\n    setInputValue('');\n    setOpened(false);\n    setFocusedOptionIndex(-1);\n    onClose?.();\n  }, [onClose, resetKeyboardInput]);\n\n  const selectOption = React.useCallback(\n    (index: number) => {\n      const item = options[index];\n\n      setNativeSelectValue(item?.value);\n      close();\n\n      const shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync =\n        isControlledOutside &&\n        props.value !== nativeSelectValue &&\n        nativeSelectValue === item?.value;\n\n      if (shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync) {\n        const event = new Event('change', { bubbles: true });\n        selectElRef.current?.dispatchEvent(event);\n      }\n    },\n    [close, options, selectElRef, isControlledOutside, props.value, nativeSelectValue],\n  );\n\n  const selectFocused = React.useCallback(() => {\n    if (focusedOptionIndex === undefined || !isValidIndex(focusedOptionIndex)) {\n      return;\n    }\n\n    selectOption(focusedOptionIndex);\n  }, [focusedOptionIndex, isValidIndex, selectOption]);\n\n  const open = React.useCallback(() => {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n\n  const onBlur = React.useCallback(() => {\n    close();\n    const event = new Event('blur');\n    selectElRef.current?.dispatchEvent(event);\n  }, [close, selectElRef]);\n\n  const resetFocusedOption = React.useCallback(() => {\n    setFocusedOptionIndex(-1);\n  }, []);\n\n  const onFocus = React.useCallback(() => {\n    const event = new Event('focus');\n    selectElRef.current?.dispatchEvent(event);\n  }, [selectElRef]);\n\n  const onClick = React.useCallback(() => {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n\n  const handleKeyUp = React.useMemo(() => debounce(resetKeyboardInput, 1000), [resetKeyboardInput]);\n\n  const focusOption = React.useCallback(\n    (type: 'next' | 'prev') => {\n      let index = focusedOptionIndex;\n\n      if (type === 'next') {\n        const nextIndex = findIndexAfter(options, index);\n        index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n      } else if (type === 'prev') {\n        const beforeIndex = findIndexBefore(options, index);\n        index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n      }\n\n      focusOptionByIndex(index);\n    },\n    [focusOptionByIndex, focusedOptionIndex, options],\n  );\n\n  React.useEffect(\n    function updateOptionsAndSelectedOptionIndex() {\n      const value = props.value ?? nativeSelectValue ?? props.defaultValue;\n\n      const options =\n        searchable && inputValue !== undefined\n          ? filter(optionsProp, inputValue, filterFn)\n          : optionsProp;\n\n      setOptions(options);\n      setSelectedOptionIndex(findSelectedIndex(options, value, allowClearButton));\n    },\n    [\n      filterFn,\n      inputValue,\n      nativeSelectValue,\n      optionsProp,\n      props.defaultValue,\n      props.value,\n      searchable,\n      allowClearButton,\n    ],\n  );\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  const onLabelClick = React.useCallback((e: React.MouseEvent<HTMLLabelElement>) => {\n    if (scrollBoxRef.current?.contains(e.target as Node)) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = findSelectedIndex(\n      options,\n      e.currentTarget.value,\n      allowClearButton,\n    );\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange?.(e);\n    }\n  };\n\n  const onInputKeyDown: React.KeyboardEventHandler<HTMLInputElement> = React.useCallback(\n    (event) => {\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          areOptionsShown() && focusOption('prev');\n          break;\n        case 'ArrowDown':\n          areOptionsShown() && focusOption('next');\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n          areOptionsShown() && selectFocused();\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, selectFocused],\n  );\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      // TODO [>=6]: удалить `onInputChangeProp`.\n      if (onInputChangeProp) {\n        const options = onInputChangeProp(e, optionsProp);\n        if (options) {\n          if (process.env.NODE_ENV === 'development') {\n            warn(\n              'Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет ' +\n                'проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.',\n            );\n          }\n          setOptions(options);\n          setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n        }\n      } else {\n        const options = filter(optionsProp, e.target.value, filterFn);\n        setOptions(options);\n        setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n      }\n      setInputValue(e.target.value);\n    },\n    [filterFn, nativeSelectValue, onInputChangeProp, optionsProp, allowClearButton],\n  );\n\n  const handleKeyDownSelect = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key.length === 1 && event.key !== ' ') {\n        onKeyboardInput(event.key);\n        return;\n      }\n\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          if (opened) {\n            areOptionsShown() && focusOption('prev');\n          } else {\n            open();\n          }\n          break;\n        case 'ArrowDown':\n          if (opened) {\n            areOptionsShown() && focusOption('next');\n          } else {\n            open();\n          }\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n        case 'Spacebar':\n        case ' ':\n          if (opened) {\n            areOptionsShown() && selectFocused();\n          } else {\n            open();\n          }\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, onKeyboardInput, open, opened, selectFocused],\n  );\n\n  const handleOptionClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      const index = Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget,\n      );\n      const option = options[index];\n\n      if (option && !option.disabled) {\n        selectOption(index);\n      }\n    },\n    [options, selectOption],\n  );\n\n  const handleOptionHover = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      focusOptionByIndex(\n        Array.prototype.indexOf.call(e.currentTarget.parentNode?.children, e.currentTarget),\n        false,\n      );\n    },\n    [focusOptionByIndex],\n  );\n\n  const renderOption = React.useCallback(\n    (option: CustomSelectOptionInterface, index: number) => {\n      const hovered = index === focusedOptionIndex;\n      const selected = index === selectedOptionIndex;\n\n      return (\n        <React.Fragment key={`${option.value}`}>\n          {renderOptionProp({\n            option,\n            hovered,\n            children: option.label,\n            selected,\n            disabled: option.disabled,\n            onClick: handleOptionClick,\n            onMouseDown: handleOptionDown,\n            // Используем `onMouseOver` вместо `onMouseEnter`.\n            // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n            //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n            //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n            //  2. Если это тач-устройство.\n            //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n            //     но не на тот, на который нажали в первый раз.\n            // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n            onMouseOver: handleOptionHover,\n          })}\n        </React.Fragment>\n      );\n    },\n    [\n      focusedOptionIndex,\n      handleOptionClick,\n      handleOptionHover,\n      renderOptionProp,\n      selectedOptionIndex,\n    ],\n  );\n\n  const resolvedContent = React.useMemo(() => {\n    const defaultDropdownContent =\n      options?.length > 0 ? (\n        options.map(renderOption)\n      ) : (\n        <Footnote className={styles['CustomSelect__empty']}>{emptyText}</Footnote>\n      );\n\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({ defaultDropdownContent });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n\n  const controlledValueSet = isControlledOutside && props.value !== '';\n  const uncontrolledValueSet = !isControlledOutside && nativeSelectValue !== '';\n  const clearButtonShown =\n    allowClearButton && !opened && (controlledValueSet || uncontrolledValueSet);\n\n  const clearButton = React.useMemo(() => {\n    if (!clearButtonShown) {\n      return null;\n    }\n\n    return (\n      <ClearButton\n        className={iconProp === undefined ? styles['CustomSelect--clear-icon'] : undefined}\n        onClick={() => setNativeSelectValue('')}\n      />\n    );\n  }, [clearButtonShown, ClearButton, iconProp]);\n\n  const icon = React.useMemo(() => {\n    if (iconProp !== undefined) {\n      return iconProp;\n    }\n\n    return (\n      <DropdownIcon\n        className={clearButtonShown ? styles['CustomSelect__dropdown-icon'] : undefined}\n        opened={opened}\n      />\n    );\n  }, [clearButtonShown, iconProp, opened]);\n\n  const afterIcons = (icon || clearButtonShown) && (\n    <React.Fragment>\n      {clearButton}\n      {icon}\n    </React.Fragment>\n  );\n\n  return (\n    <label\n      className={classNames(\n        styles['CustomSelect'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      ref={handleRootRef}\n      onClick={onLabelClick}\n    >\n      {opened && searchable ? (\n        <Input\n          {...restProps}\n          autoFocus\n          onBlur={onBlur}\n          className={openedClassNames}\n          value={inputValue}\n          onKeyDown={onInputKeyDown}\n          onChange={onInputChange}\n          // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n          // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n          // @ts-expect-error: TS2322 MouseEventHandler<HTMLSelectElement> !== MouseEventHandler<HTMLInputElement>\n          onClick={props.onClick}\n          before={before}\n          after={afterIcons}\n          mode={getFormFieldModeFromSelectType(selectType)}\n        />\n      ) : (\n        <SelectMimicry\n          {...restProps}\n          aria-hidden\n          onClick={onClick}\n          onKeyDown={handleKeyDownSelect}\n          onKeyUp={handleKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          className={openedClassNames}\n          before={before}\n          after={afterIcons}\n          selectType={selectType}\n        >\n          {selected?.label}\n        </SelectMimicry>\n      )}\n      <select\n        ref={selectElRef}\n        name={name}\n        onChange={onNativeSelectChange}\n        onBlur={props.onBlur}\n        onFocus={props.onFocus}\n        onClick={props.onClick}\n        value={nativeSelectValue}\n        aria-hidden\n        className={styles['CustomSelect__control']}\n      >\n        {allowClearButton && <option key=\"\" value=\"\" />}\n        {optionsProp.map((item) => (\n          <option key={`${item.value}`} value={item.value} />\n        ))}\n      </select>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={containerRef}\n          placement={popupDirection}\n          scrollBoxRef={setScrollBoxRef}\n          onPlacementChange={setPopperPlacement}\n          onMouseLeave={resetFocusedOption}\n          fetching={fetching}\n          offsetDistance={dropdownOffsetDistance}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n          autoHideScrollbar={autoHideScrollbar}\n          autoHideScrollbarDelay={autoHideScrollbarDelay}\n        >\n          {resolvedContent}\n        </CustomSelectDropdown>\n      )}\n    </label>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}