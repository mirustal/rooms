{"ast":null,"code":"var _jsxFileName = \"/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx\",\n    _s = $RefreshSig$();\n\nimport { View, Panel, Group, PanelHeader, PanelHeaderBack, CellButton, PanelHeaderContent, PullToRefresh, ScreenSpinner, Div } from \"@vkontakte/vkui\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport { Icon16MoreVertical, Icon24Add, Icon24LinkCircle } from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { editChannel } from \"../../../serverApi/serverApi\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ModalManager } from \"../../Modals\";\nimport { Locales } from \"../../../locales/locales\";\nimport { getVkUserId } from \"../../../bridge/bridgeLib\";\nimport { AlertManagerContext, ErrorAlert } from \"../../contexts/AlertProvider\";\nimport { channelOperation } from \"./utils/channelOperation\";\nimport useAdminStatus from \"./hooks/channelManager\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Channels(_ref) {\n  _s();\n\n  let {\n    roomManager,\n    returnBack\n  } = _ref;\n  const [editModeActive, setEditModeActive] = useState(false);\n  const userIsAdmin = useAdminStatus(roomManager.room);\n  const alerts = useContext(AlertManagerContext);\n  const channelsOps = channelOperation(roomManager, alerts);\n\n  const handleActiveEditMode = () => {\n    setEditModeActive(!editModeActive);\n  };\n\n  const handleCreateChannel = () => {\n    ModalManager.showModal(ModalIds.CreateChannel, {\n      createChannel: channels.create\n    });\n    console.log(roomManager.room);\n  };\n\n  return roomManager.room == null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(View, {\n    id: Views.Rooms.id,\n    activePanel: Views.Rooms.panels.list.id,\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      id: Views.Rooms.panels.list.id,\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        before: /*#__PURE__*/_jsxDEV(PanelHeaderBack, {\n          onClick: returnBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 30\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Div, {\n          style: {\n            display: 'flex'\n          },\n          children: /*#__PURE__*/_jsxDEV(AlterActionSheet, {\n            roomInfo: roomManager.room,\n            returnBack: returnBack,\n            handleActiveEditMode: handleActiveEditMode,\n            userIsAdmin: userIsAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Group, {\n        children: [roomManager.room.channels && roomManager.room.channels.length > 0 && roomManager.room.channels.map((channel, index) => /*#__PURE__*/_jsxDEV(ChannelView, {\n          channelIndex: index,\n          channel: channel,\n          renameToChannel: () => {\n            ModalManager.showModal(ModalIds.RenameChannel, {\n              renameChannelId: channel.id,\n              renameChannel: channels.rename\n            });\n          },\n          deleteToChannel: id => {\n            channels.delete(id);\n          },\n          editModeActive: editModeActive,\n          refreshChannel: id => channels.refresh(id),\n          userIsAdmin: userIsAdmin\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)), userIsAdmin && /*#__PURE__*/_jsxDEV(CellButton, {\n          onClick: handleCreateChannel,\n          centered: true,\n          before: /*#__PURE__*/_jsxDEV(Icon24Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this),\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u043D\\u0430\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Channels, \"HcOfVIOlHJg/I/eGQgyqXe17iTw=\", false, function () {\n  return [useAdminStatus];\n});\n\n_c = Channels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["View","Panel","Group","PanelHeader","PanelHeaderBack","CellButton","PanelHeaderContent","PullToRefresh","ScreenSpinner","Div","ModalIds","Views","ChannelView","Icon16MoreVertical","Icon24Add","Icon24LinkCircle","AlterActionSheet","editChannel","React","useContext","useEffect","useState","ModalManager","Locales","getVkUserId","AlertManagerContext","ErrorAlert","channelOperation","useAdminStatus","Channels","roomManager","returnBack","editModeActive","setEditModeActive","userIsAdmin","room","alerts","channelsOps","handleActiveEditMode","handleCreateChannel","showModal","CreateChannel","createChannel","channels","create","console","log","Rooms","id","panels","list","display","length","map","channel","index","RenameChannel","renameChannelId","renameChannel","rename","delete","refresh"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx"],"sourcesContent":["import {\n  View,\n  Panel,\n  Group,\n  PanelHeader,\n  PanelHeaderBack,\n  CellButton,\n  PanelHeaderContent,\n  PullToRefresh,\n  ScreenSpinner,\n  Div,\n} from \"@vkontakte/vkui\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport {\n  Icon16MoreVertical,\n  Icon24Add,\n  Icon24LinkCircle,\n} from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { editChannel } from \"../../../serverApi/serverApi\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ModalManager } from \"../../Modals\";\nimport { Locales } from \"../../../locales/locales\";\nimport { getVkUserId } from \"../../../bridge/bridgeLib\";\nimport { AlertManagerContext, ErrorAlert } from \"../../contexts/AlertProvider\";\nimport { channelOperation } from \"./utils/channelOperation\";\nimport useAdminStatus from \"./hooks/channelManager\";\n\nexport default function Channels({ roomManager, returnBack }) {\n  \n  const [editModeActive, setEditModeActive] = useState(false);\n  const userIsAdmin = useAdminStatus(roomManager.room);\n\n  const alerts = useContext(AlertManagerContext)\n  const channelsOps = channelOperation(roomManager, alerts)\n\n\n\n  const handleActiveEditMode = () => {\n    setEditModeActive(!editModeActive);\n  };\n\n\n\n  const handleCreateChannel = () => {\n    ModalManager.showModal(ModalIds.CreateChannel, { \n      createChannel: channels.create\n    });\n    console.log(roomManager.room)\n  };\n\n  return roomManager.room == null ? (\n    <></>\n  ) : (\n    <View id={Views.Rooms.id} activePanel={Views.Rooms.panels.list.id}>\n      <Panel id={Views.Rooms.panels.list.id}>\n  \n        <PanelHeader before={<PanelHeaderBack onClick={returnBack}/>}>\n        <Div style={{display: 'flex'}}>  \n            <AlterActionSheet\n              roomInfo={roomManager.room}\n              returnBack={returnBack}\n              handleActiveEditMode={handleActiveEditMode}\n              userIsAdmin={userIsAdmin} />\n          </Div>\n        </PanelHeader>\n        <Group>\n          {roomManager.room.channels &&\n            roomManager.room.channels.length > 0 &&\n            roomManager.room.channels.map((channel, index) => (\n\n              <ChannelView\n                key={channel.id}\n                channelIndex={index}\n                channel={channel}\n                renameToChannel={() => {\n                  ModalManager.showModal(ModalIds.RenameChannel, {\n                    renameChannelId: channel.id,\n                    renameChannel: channels.rename,\n                  })\n                }}\n                deleteToChannel={(id) => {channels.delete(id)}}\n                editModeActive={editModeActive}\n                refreshChannel={(id) => channels.refresh(id)}\n                userIsAdmin={userIsAdmin}\n              />\n\n            ))}\n            {userIsAdmin && \n          <CellButton\n            onClick={handleCreateChannel\n            }\n            centered\n            before={<Icon24Add />}\n          >\n            Создать канал\n          </CellButton>\n            }\n        </Group>\n      </Panel>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}