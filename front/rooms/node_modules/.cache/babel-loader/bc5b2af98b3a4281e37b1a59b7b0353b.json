{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from \"../../hooks/useKeyboardInputTracker\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { Tappable } from \"../Tappable/Tappable\";\nexport var CalendarDay = /*#__PURE__*/React.memo(function (_param) {\n  var day = _param.day,\n    today = _param.today,\n    selected = _param.selected,\n    onChange = _param.onChange,\n    hidden = _param.hidden,\n    disabled = _param.disabled,\n    active = _param.active,\n    selectionStart = _param.selectionStart,\n    selectionEnd = _param.selectionEnd,\n    focused = _param.focused,\n    onEnter = _param.onEnter,\n    onLeave = _param.onLeave,\n    hinted = _param.hinted,\n    hintedSelectionStart = _param.hintedSelectionStart,\n    hintedSelectionEnd = _param.hintedSelectionEnd,\n    sameMonth = _param.sameMonth,\n    size = _param.size,\n    className = _param.className,\n    props = _object_without_properties(_param, [\"day\", \"today\", \"selected\", \"onChange\", \"hidden\", \"disabled\", \"active\", \"selectionStart\", \"selectionEnd\", \"focused\", \"onEnter\", \"onLeave\", \"hinted\", \"hintedSelectionStart\", \"hintedSelectionEnd\", \"sameMonth\", \"size\", \"className\"]);\n  var locale = useConfigProvider().locale;\n  var ref = React.useRef(null);\n  var onClick = React.useCallback(function () {\n    return onChange(day);\n  }, [day, onChange]);\n  var handleEnter = React.useCallback(function () {\n    return onEnter === null || onEnter === void 0 ? void 0 : onEnter(day);\n  }, [day, onEnter]);\n  var handleLeave = React.useCallback(function () {\n    return onLeave === null || onLeave === void 0 ? void 0 : onLeave(day);\n  }, [day, onLeave]);\n  React.useEffect(function () {\n    if (focused && ref.current) {\n      ref.current.dispatchEvent(new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, {\n        bubbles: true\n      }));\n      ref.current.focus();\n    }\n  }, [focused]);\n  if (hidden) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiCalendarDay__hidden\"\n    });\n  }\n  return /*#__PURE__*/React.createElement(Tappable, _object_spread({\n    className: classNames(\"vkuiCalendarDay\", size === \"s\" && \"vkuiCalendarDay--size-s\", today && \"vkuiCalendarDay--today\", selected && !disabled && \"vkuiCalendarDay--selected\", selectionStart && \"vkuiCalendarDay--selection-start\", selectionEnd && \"vkuiCalendarDay--selection-end\", disabled && \"vkuiCalendarDay--disabled\", !sameMonth && \"vkuiCalendarDay--not-same-month\", className),\n    hoverMode: active ? \"\" : \"vkuiCalendarDay--hover\",\n    hasActive: false,\n    onClick: onClick,\n    disabled: disabled,\n    \"aria-label\": new Intl.DateTimeFormat(locale, {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    }).format(day),\n    tabIndex: -1,\n    getRootRef: ref,\n    focusVisibleMode: active ? \"outside\" : \"inside\",\n    onEnter: handleEnter,\n    onLeave: handleLeave\n  }, props), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiCalendarDay__hinted\", hinted && \"vkuiCalendarDay__hinted--active\", hintedSelectionStart && \"vkuiCalendarDay__hinted--selection-start\", hintedSelectionEnd && \"vkuiCalendarDay__hinted--selection-end\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiCalendarDay__inner\", active && !disabled && \"vkuiCalendarDay__inner--active\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiCalendarDay__day-number\"\n  }, day.getDate()))));\n});\nCalendarDay.displayName = \"CalendarDay\";","map":{"version":3,"names":["React","classNames","ENABLE_KEYBOARD_INPUT_EVENT_NAME","useConfigProvider","Tappable","CalendarDay","memo","_param","day","today","selected","onChange","hidden","disabled","active","selectionStart","selectionEnd","focused","onEnter","onLeave","hinted","hintedSelectionStart","hintedSelectionEnd","sameMonth","size","className","props","_object_without_properties","locale","ref","useRef","onClick","useCallback","handleEnter","handleLeave","useEffect","current","dispatchEvent","Event","bubbles","focus","createElement","_object_spread","hoverMode","hasActive","Intl","DateTimeFormat","weekday","year","month","format","tabIndex","getRootRef","focusVisibleMode","getDate","displayName"],"sources":["../../../src/components/CalendarDay/CalendarDay.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from '../../hooks/useKeyboardInputTracker';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { Tappable, TappableElementProps } from '../Tappable/Tappable';\nimport styles from './CalendarDay.module.css';\n\nexport type CalendarDayElementProps = Omit<\n  TappableElementProps,\n  'onChange' | 'size' | 'disabled' | 'selected'\n>;\n\nexport interface CalendarDayProps extends CalendarDayElementProps {\n  day: Date;\n  today?: boolean;\n  selected?: boolean;\n  selectionStart?: boolean;\n  selectionEnd?: boolean;\n  hintedSelectionStart?: boolean;\n  hintedSelectionEnd?: boolean;\n  active?: boolean;\n  hidden?: boolean;\n  disabled?: boolean;\n  focused?: boolean;\n  hinted?: boolean;\n  sameMonth?: boolean;\n  size?: 's' | 'm';\n  onChange(value: Date): void;\n  onEnter?(value: Date): void;\n  onLeave?(value: Date): void;\n}\n\nexport const CalendarDay = React.memo(\n  ({\n    day,\n    today,\n    selected,\n    onChange,\n    hidden,\n    disabled,\n    active,\n    selectionStart,\n    selectionEnd,\n    focused,\n    onEnter,\n    onLeave,\n    hinted,\n    hintedSelectionStart,\n    hintedSelectionEnd,\n    sameMonth,\n    size,\n    className,\n    ...props\n  }: CalendarDayProps) => {\n    const { locale } = useConfigProvider();\n    const ref = React.useRef<HTMLElement>(null);\n    const onClick = React.useCallback(() => onChange(day), [day, onChange]);\n    const handleEnter = React.useCallback(() => onEnter?.(day), [day, onEnter]);\n    const handleLeave = React.useCallback(() => onLeave?.(day), [day, onLeave]);\n\n    React.useEffect(() => {\n      if (focused && ref.current) {\n        ref.current.dispatchEvent(new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, { bubbles: true }));\n        ref.current.focus();\n      }\n    }, [focused]);\n\n    if (hidden) {\n      return <div className={styles['CalendarDay__hidden']}></div>;\n    }\n\n    return (\n      <Tappable\n        className={classNames(\n          styles['CalendarDay'],\n          size === 's' && styles['CalendarDay--size-s'],\n          today && styles['CalendarDay--today'],\n          selected && !disabled && styles['CalendarDay--selected'],\n          selectionStart && styles['CalendarDay--selection-start'],\n          selectionEnd && styles['CalendarDay--selection-end'],\n          disabled && styles['CalendarDay--disabled'],\n          !sameMonth && styles['CalendarDay--not-same-month'],\n          className,\n        )}\n        hoverMode={active ? '' : styles['CalendarDay--hover']}\n        hasActive={false}\n        onClick={onClick}\n        disabled={disabled}\n        aria-label={new Intl.DateTimeFormat(locale, {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        }).format(day)}\n        tabIndex={-1}\n        getRootRef={ref}\n        focusVisibleMode={active ? 'outside' : 'inside'}\n        onEnter={handleEnter}\n        onLeave={handleLeave}\n        {...props}\n      >\n        <div\n          className={classNames(\n            styles['CalendarDay__hinted'],\n            hinted && styles['CalendarDay__hinted--active'],\n            hintedSelectionStart && styles['CalendarDay__hinted--selection-start'],\n            hintedSelectionEnd && styles['CalendarDay__hinted--selection-end'],\n          )}\n        >\n          <div\n            className={classNames(\n              styles['CalendarDay__inner'],\n              active && !disabled && styles['CalendarDay__inner--active'],\n            )}\n          >\n            <div className={styles['CalendarDay__day-number']}>{day.getDate()}</div>\n          </div>\n        </div>\n      </Tappable>\n    );\n  },\n);\n\nCalendarDay.displayName = 'CalendarDay';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}