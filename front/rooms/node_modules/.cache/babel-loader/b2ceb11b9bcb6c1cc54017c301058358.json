{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { Icon20CheckBoxOff, Icon20CheckBoxOn, Icon24CheckBoxOff, Icon24CheckBoxOn, Icon24CheckCircleOff, Icon24CheckCircleOn } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { Platform } from \"../../../lib/platform\";\nimport { AdaptiveIconRenderer } from \"../../AdaptiveIconRenderer/AdaptiveIconRenderer\";\nimport { VisuallyHidden } from \"../../VisuallyHidden/VisuallyHidden\";\nvar CheckBoxOn = function () {\n  return /*#__PURE__*/React.createElement(AdaptiveIconRenderer, {\n    IconCompact: Icon20CheckBoxOn,\n    IconRegular: Icon24CheckBoxOn\n  });\n};\nvar CheckBoxOff = function () {\n  return /*#__PURE__*/React.createElement(AdaptiveIconRenderer, {\n    IconCompact: Icon20CheckBoxOff,\n    IconRegular: Icon24CheckBoxOff\n  });\n};\nfunction useTypeIcon(type) {\n  var platform = usePlatform();\n  if (type !== \"auto\") {\n    return type;\n  }\n  if (platform === Platform.IOS || platform === Platform.VKCOM) {\n    return \"circle\";\n  }\n  return \"square\";\n}\nexport var CellCheckbox = function (_param) {\n  var getRootRef = _param.getRootRef,\n    getRef = _param.getRef,\n    className = _param.className,\n    style = _param.style,\n    _param_type = _param.type,\n    type = _param_type === void 0 ? \"auto\" : _param_type,\n    restProps = _object_without_properties(_param, [\"getRootRef\", \"getRef\", \"className\", \"style\", \"type\"]);\n  var typeIcon = useTypeIcon(type);\n  var IconOff = typeIcon === \"circle\" ? Icon24CheckCircleOff : CheckBoxOff;\n  var IconOn = typeIcon === \"circle\" ? Icon24CheckCircleOn : CheckBoxOn;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiCellCheckbox\", className),\n    style: style,\n    ref: getRootRef\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, _object_spread_props(_object_spread({}, restProps), {\n    Component: \"input\",\n    type: \"checkbox\",\n    className: \"vkuiCellCheckbox__input\",\n    getRootRef: getRef\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiCellCheckbox__icon\", \"vkuiCellCheckbox__icon--off\"),\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(IconOff, null)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiCellCheckbox__icon\", \"vkuiCellCheckbox__icon--on\"),\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(IconOn, null)));\n};","map":{"version":3,"names":["React","Icon20CheckBoxOff","Icon20CheckBoxOn","Icon24CheckBoxOff","Icon24CheckBoxOn","Icon24CheckCircleOff","Icon24CheckCircleOn","classNames","usePlatform","Platform","AdaptiveIconRenderer","VisuallyHidden","CheckBoxOn","createElement","IconCompact","IconRegular","CheckBoxOff","useTypeIcon","type","platform","IOS","VKCOM","CellCheckbox","_param","getRootRef","getRef","className","style","_param_type","restProps","_object_without_properties","typeIcon","IconOff","IconOn","ref","_object_spread_props","_object_spread","Component"],"sources":["../../../../src/components/Cell/CellCheckbox/CellCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Icon20CheckBoxOff,\n  Icon20CheckBoxOn,\n  Icon24CheckBoxOff,\n  Icon24CheckBoxOn,\n  Icon24CheckCircleOff,\n  Icon24CheckCircleOn,\n} from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../../hooks/usePlatform';\nimport { Platform } from '../../../lib/platform';\nimport { HasRef, HasRootRef } from '../../../types';\nimport { AdaptiveIconRenderer } from '../../AdaptiveIconRenderer/AdaptiveIconRenderer';\nimport { VisuallyHidden } from '../../VisuallyHidden/VisuallyHidden';\nimport { CellProps } from '../Cell';\nimport styles from './CellCheckbox.module.css';\n\nconst CheckBoxOn = () => (\n  <AdaptiveIconRenderer IconCompact={Icon20CheckBoxOn} IconRegular={Icon24CheckBoxOn} />\n);\n\nconst CheckBoxOff = () => (\n  <AdaptiveIconRenderer IconCompact={Icon20CheckBoxOff} IconRegular={Icon24CheckBoxOff} />\n);\n\nfunction useTypeIcon(type: NonNullable<CellCheckboxProps['type']>) {\n  const platform = usePlatform();\n\n  if (type !== 'auto') {\n    return type;\n  }\n\n  if (platform === Platform.IOS || platform === Platform.VKCOM) {\n    return 'circle';\n  }\n\n  return 'square';\n}\n\nexport interface CellCheckboxProps\n  extends Pick<CellProps, 'defaultChecked' | 'checked'>,\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HasRootRef<HTMLSpanElement>,\n    HasRef<HTMLInputElement> {\n  /**\n   * Вид чекбокса. Если auto, то зависит от платформы.\n   */\n  type?: 'auto' | 'circle' | 'square';\n}\n\nexport const CellCheckbox = ({\n  getRootRef,\n  getRef,\n  className,\n  style,\n  type = 'auto',\n  ...restProps\n}: CellCheckboxProps) => {\n  const typeIcon = useTypeIcon(type);\n\n  const IconOff = typeIcon === 'circle' ? Icon24CheckCircleOff : CheckBoxOff;\n  const IconOn = typeIcon === 'circle' ? Icon24CheckCircleOn : CheckBoxOn;\n\n  return (\n    <span className={classNames(styles['CellCheckbox'], className)} style={style} ref={getRootRef}>\n      <VisuallyHidden\n        {...restProps}\n        Component=\"input\"\n        type=\"checkbox\"\n        className={styles['CellCheckbox__input']}\n        getRootRef={getRef}\n      />\n      <span\n        className={classNames(styles['CellCheckbox__icon'], styles['CellCheckbox__icon--off'])}\n        aria-hidden\n      >\n        <IconOff />\n      </span>\n      <span\n        className={classNames(styles['CellCheckbox__icon'], styles['CellCheckbox__icon--on'])}\n        aria-hidden\n      >\n        <IconOn />\n      </span>\n    </span>\n  );\n};\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SACEC,iBAAiB,EACjBC,gBAAgB,EAChBC,iBAAiB,EACjBC,gBAAgB,EAChBC,oBAAoB,EACpBC,mBAAmB,QACd;AACP,SAASC,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAC5B,SAASC,QAAQ,QAAQ;AAEzB,SAASC,oBAAoB,QAAQ;AACrC,SAASC,cAAc,QAAQ;AAI/B,IAAMC,UAAA,GAAa,SAAAA,CAAA;sBACjBZ,KAAA,CAAAa,aAAA,CAACH,oBAAA;IAAqBI,WAAA,EAAaZ,gBAAA;IAAkBa,WAAA,EAAaX;;;AAGpE,IAAMY,WAAA,GAAc,SAAAA,CAAA;sBAClBhB,KAAA,CAAAa,aAAA,CAACH,oBAAA;IAAqBI,WAAA,EAAab,iBAAA;IAAmBc,WAAA,EAAaZ;;;AAGrE,SAASc,YAAYC,IAA4C;EAC/D,IAAMC,QAAA,GAAWX,WAAA;EAEjB,IAAIU,IAAA,KAAS,QAAQ;IACnB,OAAOA,IAAA;EACT;EAEA,IAAIC,QAAA,KAAaV,QAAA,CAASW,GAAG,IAAID,QAAA,KAAaV,QAAA,CAASY,KAAK,EAAE;IAC5D,OAAO;EACT;EAEA,OAAO;AACT;AAaA,OAAO,IAAMC,YAAA,GAAe,SAAAA,CAAAC,MAAA;MAC1BC,UAAA,GAAAD,MAAA,CAAAC,UAAA;IACAC,MAAA,GAAAF,MAAA,CAAAE,MAAA;IACAC,SAAA,GAAAH,MAAA,CAAAG,SAAA;IACAC,KAAA,GAAAJ,MAAA,CAAAI,KAAA;IAAAC,WAAA,GAAAL,MAAA,CACAL,IAAA;IAAAA,IAAA,GAAAU,WAAA,cAAO,SAAAA,WAAA;IACJC,SAAA,GAAAC,0BAAA,CAAAP,MAAA,GALH,cACA,UACA,aACA,SACA,O;EAGA,IAAMQ,QAAA,GAAWd,WAAA,CAAYC,IAAA;EAE7B,IAAMc,OAAA,GAAUD,QAAA,KAAa,WAAW1B,oBAAA,GAAuBW,WAAA;EAC/D,IAAMiB,MAAA,GAASF,QAAA,KAAa,WAAWzB,mBAAA,GAAsBM,UAAA;EAE7D,oBACEZ,KAAA,CAAAa,aAAA,CAAC;IAAKa,SAAA,EAAWnB,UAAA,qBAAmCmB,SAAA;IAAYC,KAAA,EAAOA,KAAA;IAAOO,GAAA,EAAKV;kBACjFxB,KAAA,CAAAa,aAAA,CAACF,cAAA,EAAAwB,oBAAA,CAAAC,cAAA,KACKP,SAAA;IACJQ,SAAA,EAAU;IACVnB,IAAA,EAAK;IACLQ,SAAS;IACTF,UAAA,EAAYC;oBAEdzB,KAAA,CAAAa,aAAA,CAAC;IACCa,SAAA,EAAWnB,UAAA;IACX;kBAEAP,KAAA,CAAAa,aAAA,CAACmB,OAAA,uBAEHhC,KAAA,CAAAa,aAAA,CAAC;IACCa,SAAA,EAAWnB,UAAA;IACX;kBAEAP,KAAA,CAAAa,aAAA,CAACoB,MAAA;AAIT"},"metadata":{},"sourceType":"module"}