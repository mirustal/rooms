{"ast":null,"code":"import { clearTheStorage, getFromStorage, getLaunchParams, pushToStorage } from \"../bridge/bridgeLib\";\nimport { VkStorageKeys } from \"../bridge/storageKeys\";\nimport { ServerApiUrl } from \"../config\";\nexport class RoomInfo {\n  constructor(id, name, avatar, members, channels) {\n    this.id = id;\n    this.name = name;\n    this.avatar = avatar;\n    this.members = members;\n    this.channels = channels;\n  }\n\n}\n\nasync function requestServer(request, data) {\n  let response = undefined;\n  await fetch(`${ServerApiUrl}/${request}`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(data => data.json()).then(json => response = json).catch(error => {\n    console.error(error);\n    alert(error);\n  });\n  console.log(request, \" response:\\n\", response);\n  return response;\n}\n\nexport async function getJoinedRoomInfos() {\n  let ids = await getFromStorage(VkStorageKeys.JoinedRooms);\n  ids.split(\",\").filter(x => x !== '').then(item);\n  ids = ids.split(',').filter(x => x !== '');\n  let response = await requestServer(\"rooms/get\", {\n    room_ids: ids\n  });\n  if (response.rooms) return response.rooms.map(x => Object.assign(new RoomInfo(), x));\n  return [];\n}\nexport async function joinRoom(id) {\n  getFromStorage(VkStorageKeys.JoinedRooms).then(joinedRooms => pushToStorage(VkStorageKeys.JoinedRooms, joinedRooms + ',' + id));\n  let user_id = (await getLaunchParams()).vk_user_id;\n  let response = await requestServer(\"rooms/join\", {\n    user_id: user_id,\n    room_id: id\n  });\n  return response.room;\n}\nexport async function createRoom(newRoom) {\n  newRoom.addMember((await getLaunchParams()).vk_user_id);\n  getFromStorage(VkStorageKeys.JoinedRooms).then(joinedRooms => pushToStorage(VkStorageKeys.JoinedRooms, joinedRooms + ',' + newRoom.id));\n  let response = await requestServer(\"rooms/create\", {\n    room_data: newRoom\n  });\n  return response.room;\n}\nexport async function deleteRoom(id) {\n  let response = await requestServer(\"rooms/delete\", {\n    room_id: id\n  });\n  return response.room;\n}\nexport async function renameChannel(room) {\n  let response = await requestServer(\"rooms/update\", {\n    room_data: room\n  });\n  return response.room;\n}\nexport async function editChannel(room) {\n  let response = await requestServer(\"rooms/update\", {\n    room_data: room\n  });\n  return response.room;\n}","map":{"version":3,"names":["clearTheStorage","getFromStorage","getLaunchParams","pushToStorage","VkStorageKeys","ServerApiUrl","RoomInfo","constructor","id","name","avatar","members","channels","requestServer","request","data","response","undefined","fetch","method","headers","body","JSON","stringify","then","json","catch","error","console","alert","log","getJoinedRoomInfos","ids","JoinedRooms","split","filter","x","item","room_ids","rooms","map","Object","assign","joinRoom","joinedRooms","user_id","vk_user_id","room_id","room","createRoom","newRoom","addMember","room_data","deleteRoom","renameChannel","editChannel"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/serverApi/serverApi.js"],"sourcesContent":["import { clearTheStorage, getFromStorage, getLaunchParams, pushToStorage } from \"../bridge/bridgeLib\";\nimport { VkStorageKeys } from \"../bridge/storageKeys\";\nimport { ServerApiUrl } from \"../config\";\n\nexport class RoomInfo {\n    constructor(id, name, avatar, members, channels) {\n        this.id = id;\n        this.name = name;\n        this.avatar = avatar;\n        this.members = members;\n        this.channels = channels;\n    }\n}\n\nasync function requestServer(request, data) {\n    let response = undefined;\n    await fetch(`${ServerApiUrl}/${request}`, {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data)\n    })\n        .then(data => data.json())\n        .then((json) => response = json)\n        .catch(error => {\n            console.error(error);\n            alert(error)\n        })\n    console.log(request, \" response:\\n\", response)\n    return response;\n}\n\nexport async function getJoinedRoomInfos() {\n    let ids = await getFromStorage(VkStorageKeys.JoinedRooms);\n    ids.split(\",\").filter(x => x !== '').then(item)\n    ids = ids.split(',').filter(x => x !== '')\n\n    let response = await requestServer(\"rooms/get\", { room_ids: ids });\n    if (response.rooms) return response.rooms.map(x => Object.assign(new RoomInfo, x));\n    return []\n}\n\nexport async function joinRoom(id) {\n    getFromStorage(VkStorageKeys.JoinedRooms).then(joinedRooms => pushToStorage(VkStorageKeys.JoinedRooms, joinedRooms + ',' + id))\n\n    let user_id = (await getLaunchParams()).vk_user_id;\n    let response = await requestServer(\"rooms/join\", { user_id: user_id, room_id: id });\n    return response.room;\n}\n\nexport async function createRoom(newRoom) {\n    newRoom.addMember((await getLaunchParams()).vk_user_id)\n    getFromStorage(VkStorageKeys.JoinedRooms).then(joinedRooms => pushToStorage(VkStorageKeys.JoinedRooms, joinedRooms + ',' + newRoom.id))\n    let response = await requestServer(\"rooms/create\", { room_data: newRoom });\n    return response.room;\n}\n\nexport async function deleteRoom(id) {\n    let response = await requestServer(\"rooms/delete\", { room_id: id });\n    return response.room;\n}\n\nexport async function renameChannel(room) {\n    let response = await requestServer(\"rooms/update\", { room_data: room })\n    return response.room\n}\n\nexport async function editChannel(room) {\n    let response = await requestServer(\"rooms/update\", {room_data: room})\n    return response.room\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}