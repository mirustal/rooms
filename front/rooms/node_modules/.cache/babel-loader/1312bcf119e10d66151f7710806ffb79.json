{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { _ as _to_consumable_array } from \"@swc/helpers/_/_to_consumable_array\";\nimport * as React from \"react\";\nimport { useChipsInput } from \"./useChipsInput\";\nexport var useChipsSelect = function (props) {\n  var options = props.options,\n    filterFn = props.filterFn,\n    getOptionLabel = props.getOptionLabel,\n    getOptionValue = props.getOptionValue,\n    showSelected = props.showSelected;\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n    opened = _React_useState[0],\n    setOpened = _React_useState[1];\n  var _React_useState1 = _sliced_to_array(React.useState(0), 2),\n    focusedOptionIndex = _React_useState1[0],\n    setFocusedOptionIndex = _React_useState1[1];\n  var _React_useState2 = _sliced_to_array(React.useState(null), 2),\n    focusedOption = _React_useState2[0],\n    setFocusedOption = _React_useState2[1];\n  var _useChipsInput = useChipsInput(props),\n    fieldValue = _useChipsInput.fieldValue,\n    selectedOptions = _useChipsInput.selectedOptions,\n    chipsInputState = _object_without_properties(_useChipsInput, [\"fieldValue\", \"selectedOptions\"]);\n  var handleInputChange = function (e) {\n    if (!e) {\n      return;\n    }\n    chipsInputState.handleInputChange(e);\n    if (!opened) {\n      setOpened(true);\n      setFocusedOptionIndex(0);\n    }\n  };\n  var filteredOptions = React.useMemo(function () {\n    return filterFn ? options.filter(function (option) {\n      return filterFn(fieldValue, option, getOptionLabel);\n    }) : options;\n  }, [options, filterFn, fieldValue, getOptionLabel]);\n  filteredOptions = React.useMemo(function filterOutSelectedIfNeeded() {\n    if (!filteredOptions.length || showSelected) {\n      return filteredOptions;\n    }\n    var filteredSet = new Set(filteredOptions);\n    var selected = selectedOptions.map(function (item) {\n      return getOptionValue(item);\n    });\n    var _iteratorNormalCompletion = true,\n      _didIteratorError = false,\n      _iteratorError = undefined;\n    try {\n      for (var _iterator = filteredSet[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n        if (selected.includes(getOptionValue(item))) {\n          filteredSet.delete(item);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n    return _to_consumable_array(filteredSet);\n  }, [filteredOptions, selectedOptions, getOptionValue, showSelected]);\n  return _object_spread_props(_object_spread({}, chipsInputState), {\n    fieldValue: fieldValue,\n    handleInputChange: handleInputChange,\n    opened: opened,\n    setOpened: setOpened,\n    filteredOptions: filteredOptions,\n    focusedOptionIndex: focusedOptionIndex,\n    setFocusedOptionIndex: setFocusedOptionIndex,\n    focusedOption: focusedOption,\n    setFocusedOption: setFocusedOption,\n    selectedOptions: selectedOptions\n  });\n};","map":{"version":3,"names":["React","useChipsInput","useChipsSelect","props","options","filterFn","getOptionLabel","getOptionValue","showSelected","_React_useState","_sliced_to_array","useState","opened","setOpened","_React_useState1","focusedOptionIndex","setFocusedOptionIndex","_React_useState2","focusedOption","setFocusedOption","_useChipsInput","fieldValue","selectedOptions","chipsInputState","_object_without_properties","handleInputChange","e","filteredOptions","useMemo","filter","option","filterOutSelectedIfNeeded","length","filteredSet","Set","selected","map","item","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","value","includes","delete","err","return","_to_consumable_array","_object_spread_props","_object_spread"],"sources":["../../src/hooks/useChipsSelect.ts"],"sourcesContent":["import * as React from 'react';\nimport { ChipOption } from '../components/Chip/Chip';\nimport { ChipsSelectProps } from '../components/ChipsSelect/ChipsSelect';\nimport { useChipsInput } from './useChipsInput';\n\nexport const useChipsSelect = <Option extends ChipOption>(\n  props: Partial<ChipsSelectProps<Option>>,\n) => {\n  const { options, filterFn, getOptionLabel, getOptionValue, showSelected } = props;\n\n  const [opened, setOpened] = React.useState(false);\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | null>(0);\n  const [focusedOption, setFocusedOption] = React.useState<Option | null>(null);\n\n  const { fieldValue, selectedOptions, ...chipsInputState } = useChipsInput(props);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement> | undefined) => {\n    if (!e) {\n      return;\n    }\n    chipsInputState.handleInputChange(e);\n\n    if (!opened) {\n      setOpened(true);\n      setFocusedOptionIndex(0);\n    }\n  };\n\n  let filteredOptions = React.useMemo(() => {\n    return filterFn\n      ? options!.filter((option) => filterFn(fieldValue, option, getOptionLabel))\n      : (options as Option[]);\n  }, [options, filterFn, fieldValue, getOptionLabel]);\n\n  filteredOptions = React.useMemo(\n    function filterOutSelectedIfNeeded() {\n      if (!filteredOptions.length || showSelected) {\n        return filteredOptions;\n      }\n\n      const filteredSet = new Set(filteredOptions);\n      const selected = selectedOptions.map((item) => getOptionValue!(item));\n\n      for (const item of filteredSet) {\n        if (selected.includes(getOptionValue!(item))) {\n          filteredSet.delete(item);\n        }\n      }\n\n      return [...filteredSet];\n    },\n    [filteredOptions, selectedOptions, getOptionValue, showSelected],\n  );\n\n  return {\n    ...chipsInputState,\n    fieldValue,\n    handleInputChange,\n    opened,\n    setOpened,\n    filteredOptions,\n    focusedOptionIndex,\n    setFocusedOptionIndex,\n    focusedOption,\n    setFocusedOption,\n    selectedOptions,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}