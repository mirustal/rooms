{"ast":null,"code":"import { _ as _to_consumable_array } from \"@swc/helpers/_/_to_consumable_array\";\nimport * as React from \"react\";\nexport function debounce(fn, delay) {\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return fn.apply(void 0, _to_consumable_array(args));\n    }, delay);\n  };\n}\nexport function setRef(element1, ref) {\n  if (ref) {\n    if (typeof ref === \"function\") {\n      ref(element1);\n    } else {\n      ref.current = element1;\n    }\n  }\n}\nexport function multiRef() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  var current = null;\n  return {\n    get current() {\n      return current;\n    },\n    set current(element) {\n      current = element;\n      refs.forEach(function (ref) {\n        return ref && setRef(element, ref);\n      });\n    }\n  };\n}\nexport function getTitleFromChildren(children) {\n  var label = \"\";\n  React.Children.map(children, function (child) {\n    if (typeof child === \"string\") {\n      label += \" \" + child;\n    }\n  });\n  return label.trim();\n}\nexport var stopPropagation = function (event) {\n  return event.stopPropagation();\n};\nexport function addClassNameToElement(element1, className) {\n  var elementClassName = element1.getAttribute(\"class\") || \"\";\n  var updatedClassName = \"\".concat(elementClassName).concat(elementClassName ? \" \" : \"\").concat(className);\n  element1.setAttribute(\"class\", updatedClassName);\n}\nexport function removeClassNameFromElement(element1, classNameToRemove) {\n  var classNamesArray = (element1.getAttribute(\"class\") || \"\").split(/\\s+/);\n  var elementIndexToRemove = classNamesArray.findIndex(function (className) {\n    return className === classNameToRemove;\n  });\n  if (elementIndexToRemove === -1) {\n    return;\n  }\n  classNamesArray.splice(elementIndexToRemove, 1);\n  element1.setAttribute(\"class\", classNamesArray.join(\" \"));\n}\nexport var excludeKeysWithUndefined = function (obj) {\n  var filteredObj = {};\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key] !== undefined) {\n      filteredObj[key] = obj[key];\n    }\n  }\n  return filteredObj;\n};","map":{"version":3,"names":["React","debounce","fn","delay","timeout","args","Array","_len","_key","arguments","clearTimeout","setTimeout","apply","_to_consumable_array","setRef","element1","ref","current","multiRef","length","refs","element","forEach","getTitleFromChildren","children","label","Children","map","child","trim","stopPropagation","event","addClassNameToElement","className","elementClassName","getAttribute","updatedClassName","concat","setAttribute","removeClassNameFromElement","classNameToRemove","classNamesArray","split","elementIndexToRemove","findIndex","splice","join","excludeKeysWithUndefined","obj","filteredObj","key","hasOwnProperty","undefined"],"sources":["../../src/lib/utils.ts"],"sourcesContent":["import * as React from 'react';\n\nexport type ImgOnlyAttributes = {\n  [index in Exclude<\n    keyof React.ImgHTMLAttributes<HTMLImageElement>,\n    keyof React.HTMLAttributes<HTMLImageElement>\n  >]: React.ImgHTMLAttributes<HTMLImageElement>[index];\n};\n\nexport function debounce<A extends any[]>(fn: (...args: A) => void, delay: number) {\n  let timeout: any;\n\n  return (...args: A) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), delay);\n  };\n}\n\nexport function setRef<T>(element: T, ref?: React.Ref<T>): void {\n  if (ref) {\n    if (typeof ref === 'function') {\n      ref(element);\n    } else {\n      (ref as React.MutableRefObject<T>).current = element;\n    }\n  }\n}\n\nexport function multiRef<T>(...refs: Array<React.Ref<T> | undefined>): React.RefObject<T> {\n  let current: T | null = null;\n  return {\n    get current() {\n      return current;\n    },\n    set current(element) {\n      current = element;\n      refs.forEach((ref) => ref && setRef(element, ref));\n    },\n  };\n}\n\nexport function getTitleFromChildren(children: React.ReactNode): string {\n  let label = '';\n\n  React.Children.map(children, (child) => {\n    if (typeof child === 'string') {\n      label += ' ' + child;\n    }\n  });\n\n  return label.trim();\n}\n\nexport const stopPropagation = <T extends React.SyntheticEvent>(event: T) =>\n  event.stopPropagation();\n\nexport function addClassNameToElement(element: HTMLElement, className: string) {\n  const elementClassName = element.getAttribute('class') || '';\n  const updatedClassName = `${elementClassName}${elementClassName ? ' ' : ''}${className}`;\n\n  element.setAttribute('class', updatedClassName);\n}\n\nexport function removeClassNameFromElement(element: HTMLElement, classNameToRemove: string) {\n  const classNamesArray = (element.getAttribute('class') || '').split(/\\s+/);\n  const elementIndexToRemove = classNamesArray.findIndex(\n    (className) => className === classNameToRemove,\n  );\n  if (elementIndexToRemove === -1) {\n    return;\n  }\n  classNamesArray.splice(elementIndexToRemove, 1);\n\n  element.setAttribute('class', classNamesArray.join(' '));\n}\n\ntype ExcludeKeysWithUndefined<T> = {\n  [P in keyof T]?: Exclude<T[P], undefined>;\n};\n\nexport const excludeKeysWithUndefined = <T extends Record<string | number | symbol, any>>(\n  obj: T,\n): ExcludeKeysWithUndefined<T> => {\n  const filteredObj: ExcludeKeysWithUndefined<T> = {};\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key] !== undefined) {\n      filteredObj[key] = obj[key];\n    }\n  }\n  return filteredObj;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}