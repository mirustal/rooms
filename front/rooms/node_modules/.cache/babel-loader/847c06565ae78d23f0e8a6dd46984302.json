{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { Icon28DoneOutline, Icon28EditOutline } from \"@vkontakte/icons\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\nimport { PanelHeaderButton } from \"../PanelHeaderButton/PanelHeaderButton\";\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport var PanelHeaderEdit = function (_param) {\n  var _param_isActive = _param.isActive,\n    isActive = _param_isActive === void 0 ? false : _param_isActive,\n    _param_editLabel = _param.editLabel,\n    editLabel = _param_editLabel === void 0 ? \"Редактировать\" : _param_editLabel,\n    _param_doneLabel = _param.doneLabel,\n    doneLabel = _param_doneLabel === void 0 ? \"Готово\" : _param_doneLabel,\n    restProps = _object_without_properties(_param, [\"isActive\", \"editLabel\", \"doneLabel\"]);\n  var iOSText = isActive ? doneLabel : editLabel;\n  var AndroidIcon = isActive ? Icon28DoneOutline : Icon28EditOutline;\n  var platform = usePlatform();\n  return /*#__PURE__*/React.createElement(PanelHeaderButton, _object_spread({\n    \"aria-label\": iOSText\n  }, restProps), platform === Platform.IOS ? iOSText : /*#__PURE__*/React.createElement(AndroidIcon, null));\n};","map":{"version":3,"names":["React","Icon28DoneOutline","Icon28EditOutline","usePlatform","Platform","PanelHeaderButton","PanelHeaderEdit","_param","isActive","_param_isActive","_param_editLabel","editLabel","_param_doneLabel","doneLabel","restProps","_object_without_properties","iOSText","AndroidIcon","platform","createElement","_object_spread","IOS"],"sources":["../../../src/components/PanelHeaderEdit/PanelHeaderEdit.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon28DoneOutline, Icon28EditOutline } from '@vkontakte/icons';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Platform } from '../../lib/platform';\nimport { PanelHeaderButton, PanelHeaderButtonProps } from '../PanelHeaderButton/PanelHeaderButton';\n\nexport interface PanelHeaderEditProps extends PanelHeaderButtonProps {\n  /**\n   * Включен ли режим редактирования\n   */\n  isActive?: boolean;\n  /**\n   * iOS only. Текст кнопки, когда режим редактирования не активен\n   */\n  editLabel?: string;\n  /**\n   * iOS only. Текст кнопки при активном режиме редактирования для выхода из него\n   */\n  doneLabel?: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport const PanelHeaderEdit = ({\n  isActive = false,\n  editLabel = 'Редактировать',\n  doneLabel = 'Готово',\n  ...restProps\n}: PanelHeaderEditProps) => {\n  const iOSText = isActive ? doneLabel : editLabel;\n  const AndroidIcon = isActive ? Icon28DoneOutline : Icon28EditOutline;\n  const platform = usePlatform();\n\n  return (\n    <PanelHeaderButton aria-label={iOSText} {...restProps}>\n      {platform === Platform.IOS ? iOSText : <AndroidIcon />}\n    </PanelHeaderButton>\n  );\n};\n"],"mappings":";;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,iBAAiB,EAAEC,iBAAiB,QAAQ;AACrD,SAASC,WAAW,QAAQ;AAC5B,SAASC,QAAQ,QAAQ;AACzB,SAASC,iBAAiB,QAAgC;AAiB1D;;;AAGA,OAAO,IAAMC,eAAA,GAAkB,SAAAA,CAAAC,MAAA;+BAC7BC,QAAA;IAAAA,QAAA,GAAAC,eAAA,cAAW,QAAAA,eAAA;IAAAC,gBAAA,GAAAH,MAAA,CACXI,SAAA;IAAAA,SAAA,GAAAD,gBAAA,cAAY,kBAAAA,gBAAA;IAAAE,gBAAA,GAAAL,MAAA,CACZM,SAAA;IAAAA,SAAA,GAAAD,gBAAA,cAAY,WAAAA,gBAAA;IACTE,SAAA,GAAAC,0BAAA,CAAAR,MAAA,GAHH,YACA,aACA,Y;EAGA,IAAMS,OAAA,GAAUR,QAAA,GAAWK,SAAA,GAAYF,SAAA;EACvC,IAAMM,WAAA,GAAcT,QAAA,GAAWP,iBAAA,GAAoBC,iBAAA;EACnD,IAAMgB,QAAA,GAAWf,WAAA;EAEjB,oBACEH,KAAA,CAAAmB,aAAA,CAACd,iBAAA,EAAAe,cAAA;IAAkB,cAAYJ;KAAaF,SAAA,GACzCI,QAAA,KAAad,QAAA,CAASiB,GAAG,GAAGL,OAAA,gBAAUhB,KAAA,CAAAmB,aAAA,CAACF,WAAA;AAG9C"},"metadata":{},"sourceType":"module"}