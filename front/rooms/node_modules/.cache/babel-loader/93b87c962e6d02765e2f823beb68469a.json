{"ast":null,"code":"import { editChannel } from '../../../../serverApi/serverApi';\nexport const channelOperation = (roomManager, alerts) => ({\n  create: function (channelName) {\n    const channelList = roomManager.createChannel(channelName);\n    console.log(channelList);\n    editChannel(channelList).then(room => {\n      setRoomInfo(channelList);\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  rename: function (newNameChannel, renameChannelId) {\n    const channelList = renameChannel(room.channels, newNameChannel, renameChannelId);\n    editChannel(channelList).then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  delete: function (delChannenlId) {\n    const channelList = deleteChannel(room.channels, delChannenlId);\n    editChannel(channelList).then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  refresh: function (channelId) {\n    const channelList = refreshChannel(room.channels, channelId);\n    editChannel().then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  }\n});","map":{"version":3,"names":["editChannel","channelOperation","roomManager","alerts","create","channelName","channelList","createChannel","console","log","then","room","setRoomInfo","redrawRoom","catch","error","showAlert","ErrorAlert","message","Locales","Errors","FailedCreateRoom","alertManager","rename","newNameChannel","renameChannelId","renameChannel","channels","delete","delChannenlId","deleteChannel","refresh","channelId","refreshChannel"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/utils/channelOperation.jsx"],"sourcesContent":["import { editChannel } from '../../../../serverApi/serverApi';\n\nexport const channelOperation = (roomManager, alerts) => ({\n  create: function (channelName) {\n    const channelList = roomManager.createChannel(channelName)\n    console.log(channelList)\n    editChannel(channelList)\n      .then((room) => {\n        setRoomInfo(channelList)\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  rename: function (newNameChannel, renameChannelId) {\n    const channelList = renameChannel(room.channels, newNameChannel, renameChannelId)\n    editChannel(channelList)\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  delete: function (delChannenlId) {\n    const channelList = deleteChannel(room.channels, delChannenlId)\n    editChannel(channelList)\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  refresh: function (channelId) {\n    const channelList = refreshChannel(room.channels, channelId)\n    editChannel()\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n});"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iCAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,WAAD,EAAcC,MAAd,MAA0B;EACxDC,MAAM,EAAE,UAAUC,WAAV,EAAuB;IAC7B,MAAMC,WAAW,GAAGJ,WAAW,CAACK,aAAZ,CAA0BF,WAA1B,CAApB;IACAG,OAAO,CAACC,GAAR,CAAYH,WAAZ;IACAN,WAAW,CAACM,WAAD,CAAX,CACGI,IADH,CACSC,IAAD,IAAU;MACdC,WAAW,CAACN,WAAD,CAAX;MACAO,UAAU;IACX,CAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;MAChBP,OAAO,CAACC,GAAR,CAAYM,KAAZ;MACAZ,MAAM,CAACa,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEnB;MAFL,CAAD,CADZ;IAMD,CAbH;EAcD,CAlBuD;EAoBxDoB,MAAM,EAAE,UAAUC,cAAV,EAA0BC,eAA1B,EAA2C;IACjD,MAAMnB,WAAW,GAAGoB,aAAa,CAACf,IAAI,CAACgB,QAAN,EAAgBH,cAAhB,EAAgCC,eAAhC,CAAjC;IACAzB,WAAW,CAACM,WAAD,CAAX,CACGI,IADH,CACSC,IAAD,IAAU;MACdE,UAAU;IACX,CAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;MAChBP,OAAO,CAACC,GAAR,CAAYM,KAAZ;MACAZ,MAAM,CAACa,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEnB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD,CAnCuD;EAqCxDyB,MAAM,EAAE,UAAUC,aAAV,EAAyB;IAC/B,MAAMvB,WAAW,GAAGwB,aAAa,CAACnB,IAAI,CAACgB,QAAN,EAAgBE,aAAhB,CAAjC;IACA7B,WAAW,CAACM,WAAD,CAAX,CACGI,IADH,CACSC,IAAD,IAAU;MACdE,UAAU;IACX,CAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;MAChBP,OAAO,CAACC,GAAR,CAAYM,KAAZ;MACAZ,MAAM,CAACa,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEnB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD,CApDuD;EAsDxD4B,OAAO,EAAE,UAAUC,SAAV,EAAqB;IAC5B,MAAM1B,WAAW,GAAG2B,cAAc,CAACtB,IAAI,CAACgB,QAAN,EAAgBK,SAAhB,CAAlC;IACAhC,WAAW,GACRU,IADH,CACSC,IAAD,IAAU;MACdE,UAAU;IACX,CAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;MAChBP,OAAO,CAACC,GAAR,CAAYM,KAAZ;MACAZ,MAAM,CAACa,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEnB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD;AArEuD,CAA1B,CAAzB"},"metadata":{},"sourceType":"module"}