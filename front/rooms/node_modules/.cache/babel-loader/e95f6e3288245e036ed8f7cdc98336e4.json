{"ast":null,"code":"import { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames, noop } from \"@vkontakte/vkjs\";\nimport { clamp } from \"../../helpers/math\";\nimport { useObjectMemo } from \"../../hooks/useObjectMemo\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\nimport { useWaitTransitionFinish } from \"../../hooks/useWaitTransitionFinish\";\nimport { useDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { Platform } from \"../../lib/platform\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { ModalRootContext } from \"./ModalRootContext\";\nimport { useModalManager } from \"./useModalManager\";\nvar warn = warnOnce(\"ModalRoot\");\nexport var ModalRootDesktop = function (param) {\n  var activeModalProp = param.activeModal,\n    children = param.children,\n    onOpen = param.onOpen,\n    onOpened = param.onOpened,\n    onClose = param.onClose,\n    onClosed = param.onClosed;\n  var maskElementRef = React.useRef(null);\n  var maskAnimationFrame = React.useRef(undefined);\n  var restoreFocusTo = React.useRef(undefined);\n  var document = useDOM().document;\n  var _useConfigProvider = useConfigProvider(),\n    hasCustomPanelHeaderAfter = _useConfigProvider.hasCustomPanelHeaderAfter,\n    platform = _useConfigProvider.platform;\n  var _useModalManager = useModalManager(activeModalProp, children, onOpen, onOpened, onClose, onClosed, noop),\n    activeModal = _useModalManager.activeModal,\n    exitingModal = _useModalManager.exitingModal,\n    onExit = _useModalManager.onExit,\n    getModalState = _useModalManager.getModalState,\n    enteringModal = _useModalManager.enteringModal,\n    onEnter = _useModalManager.onEnter,\n    onEntered = _useModalManager.onEntered,\n    onExited = _useModalManager.onExited,\n    history = _useModalManager.history,\n    delayEnter = _useModalManager.delayEnter;\n  var waitTransitionFinish = useWaitTransitionFinish().waitTransitionFinish;\n  var prevProps = usePrevious({\n    exitingModal: exitingModal,\n    enteringModal: enteringModal,\n    activeModal: activeModal\n  });\n  var modalRootContext = useObjectMemo({\n    updateModalHeight: function () {\n      return undefined;\n    },\n    registerModal: function (_param) {\n      var id = _param.id,\n        data = _object_without_properties(_param, [\"id\"]);\n      var _getModalState;\n      return Object.assign((_getModalState = getModalState(id)) !== null && _getModalState !== void 0 ? _getModalState : {}, data);\n    },\n    onClose: onExit,\n    isInsideModal: true\n  });\n  var timeout = platform === Platform.IOS ? 400 : 320;\n  var modals = React.Children.toArray(children);\n  /* Анимирует сдвиг модального окна */\n  var animateModalOpacity = function (modalState, display) {\n    if (modalState === null || modalState === void 0 ? void 0 : modalState.innerElement) {\n      modalState.innerElement.style.transition = \"\";\n      modalState.innerElement.style.transitionDelay = display && delayEnter ? \"\".concat(timeout, \"ms\") : \"\";\n      modalState.innerElement.style.opacity = display ? \"1\" : \"0\";\n    }\n  };\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  var setMaskOpacity = function (modalState) {\n    var forceOpacity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n    if (forceOpacity === null && (history === null || history === void 0 ? void 0 : history[0]) !== modalState.id) {\n      return;\n    }\n    if (maskAnimationFrame.current) {\n      cancelAnimationFrame(maskAnimationFrame.current);\n    }\n    maskAnimationFrame.current = requestAnimationFrame(function () {\n      if (maskElementRef.current) {\n        var _modalState_translateY = modalState.translateY,\n          translateY = _modalState_translateY === void 0 ? 0 : _modalState_translateY,\n          _modalState_translateYCurrent = modalState.translateYCurrent,\n          translateYCurrent = _modalState_translateYCurrent === void 0 ? 0 : _modalState_translateYCurrent;\n        var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n        maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();\n      }\n    });\n  };\n  var openModal = function () {\n    if (!enteringModal || !prevProps) {\n      return;\n    }\n    var enteringState = getModalState(enteringModal);\n    onEnter();\n    // Анимация открытия модального окна\n    if (!prevProps.exitingModal) {\n      requestAnimationFrame(function () {\n        if (enteringModal === enteringModal) {\n          waitTransitionFinish(enteringState === null || enteringState === void 0 ? void 0 : enteringState.innerElement, function () {\n            return onEntered(enteringModal);\n          }, timeout);\n          animateModalOpacity(enteringState, true);\n          if (enteringState) {\n            setMaskOpacity(enteringState, 1);\n          }\n        }\n      });\n      return;\n    }\n    // Переход между модальными окнами без анимации\n    requestAnimationFrame(function () {\n      if (enteringState === null || enteringState === void 0 ? void 0 : enteringState.innerElement) {\n        enteringState.innerElement.style.transition = \"none\";\n        enteringState.innerElement.style.opacity = \"1\";\n        setMaskOpacity(enteringState, 1);\n      }\n    });\n    onEntered(enteringModal);\n  };\n  var closeModal = function (id) {\n    var prevModalState = getModalState(id);\n    if (!prevModalState) {\n      return;\n    }\n    // Анимация закрытия модального окна\n    if (!activeModal) {\n      requestAnimationFrame(function () {\n        waitTransitionFinish(prevModalState === null || prevModalState === void 0 ? void 0 : prevModalState.innerElement, function () {\n          return onExited(id);\n        }, timeout);\n        animateModalOpacity(prevModalState, false);\n        setMaskOpacity(prevModalState, 0);\n      });\n      return;\n    }\n    // Переход между модальными окнами без анимации\n    onExited(id);\n  };\n  React.useEffect(function () {\n    if (!prevProps) {\n      return;\n    }\n    // transition phase 2: animate exiting modal\n    if (exitingModal && exitingModal !== prevProps.exitingModal) {\n      closeModal(exitingModal);\n    }\n    // transition phase 3: animate entering modal\n    if (enteringModal && enteringModal !== prevProps.enteringModal) {\n      openModal();\n    }\n    // focus restoration\n    if (activeModal && !prevProps.activeModal) {\n      var _document_activeElement;\n      restoreFocusTo.current = (_document_activeElement = document === null || document === void 0 ? void 0 : document.activeElement) !== null && _document_activeElement !== void 0 ? _document_activeElement : undefined;\n    }\n    if (!activeModal && !exitingModal && restoreFocusTo.current) {\n      restoreFocusTo.current.focus();\n      restoreFocusTo.current = undefined;\n    }\n  });\n  if (!activeModal && !exitingModal) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(ModalRootContext.Provider, {\n    value: modalRootContext\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiModalRoot\", hasCustomPanelHeaderAfter && \"vkuiModalRoot--hasCustomPanelHeaderAfterSlot\", \"vkuiModalRoot--desktop\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiModalRoot__mask\",\n    ref: maskElementRef,\n    onClick: onExit\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiModalRoot__viewport\"\n  }, modals.map(function (Modal) {\n    var modalId = getNavId(Modal.props, warn);\n    if (modalId !== activeModal && modalId !== exitingModal) {\n      return null;\n    }\n    var key = \"modal-\".concat(modalId);\n    return /*#__PURE__*/React.createElement(FocusTrap, {\n      restoreFocus: false,\n      onClose: onExit,\n      timeout: timeout,\n      key: key,\n      className: \"vkuiModalRoot__modal\"\n    }, Modal);\n  }))));\n};","map":{"version":3,"names":["React","classNames","noop","clamp","useObjectMemo","usePrevious","useWaitTransitionFinish","useDOM","getNavId","Platform","warnOnce","useConfigProvider","FocusTrap","ModalRootContext","useModalManager","warn","ModalRootDesktop","param","activeModalProp","activeModal","children","onOpen","onOpened","onClose","onClosed","maskElementRef","useRef","maskAnimationFrame","undefined","restoreFocusTo","document","_useConfigProvider","hasCustomPanelHeaderAfter","platform","_useModalManager","exitingModal","onExit","getModalState","enteringModal","onEnter","onEntered","onExited","history","delayEnter","waitTransitionFinish","prevProps","modalRootContext","updateModalHeight","registerModal","_param","id","data","_object_without_properties","_getModalState","Object","assign","isInsideModal","timeout","IOS","modals","Children","toArray","animateModalOpacity","modalState","display","innerElement","style","transition","transitionDelay","concat","opacity","setMaskOpacity","forceOpacity","arguments","length","current","cancelAnimationFrame","requestAnimationFrame","_modalState_translateY","translateY","_modalState_translateYCurrent","translateYCurrent","toString","openModal","enteringState","closeModal","prevModalState","useEffect","_document_activeElement","activeElement","focus","createElement","Provider","value","className","ref","onClick","map","Modal","modalId","props","key","restoreFocus"],"sources":["../../../src/components/ModalRoot/ModalRootDesktop.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { useObjectMemo } from '../../hooks/useObjectMemo';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { useDOM } from '../../lib/dom';\nimport { getNavId } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { ModalRootContext, ModalRootContextInterface } from './ModalRootContext';\nimport { ModalRootWithDOMProps, ModalsStateEntry } from './types';\nimport { useModalManager } from './useModalManager';\nimport styles from './ModalRoot.module.css';\n\nconst warn = warnOnce('ModalRoot');\n\nexport const ModalRootDesktop = ({\n  activeModal: activeModalProp,\n  children,\n  onOpen,\n  onOpened,\n  onClose,\n  onClosed,\n}: ModalRootWithDOMProps) => {\n  const maskElementRef = React.useRef<HTMLDivElement>(null);\n  const maskAnimationFrame = React.useRef<number | undefined>(undefined);\n  const restoreFocusTo = React.useRef<HTMLElement | undefined>(undefined);\n\n  const { document } = useDOM();\n  const { hasCustomPanelHeaderAfter, platform } = useConfigProvider();\n  const {\n    activeModal,\n    exitingModal,\n    onExit,\n    getModalState,\n    enteringModal,\n    onEnter,\n    onEntered,\n    onExited,\n    history,\n    delayEnter,\n  } = useModalManager(activeModalProp, children, onOpen, onOpened, onClose, onClosed, noop);\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const prevProps = usePrevious({\n    exitingModal,\n    enteringModal,\n    activeModal,\n  });\n  const modalRootContext: ModalRootContextInterface = useObjectMemo({\n    updateModalHeight: () => undefined,\n    registerModal: ({ id, ...data }) => Object.assign(getModalState(id) ?? {}, data),\n    onClose: onExit,\n    isInsideModal: true,\n  });\n\n  const timeout = platform === Platform.IOS ? 400 : 320;\n  const modals = React.Children.toArray(children) as React.ReactElement[];\n\n  /* Анимирует сдвиг модального окна */\n  const animateModalOpacity = (modalState: ModalsStateEntry | undefined, display: boolean) => {\n    if (modalState?.innerElement) {\n      modalState.innerElement.style.transition = '';\n      modalState.innerElement.style.transitionDelay = display && delayEnter ? `${timeout}ms` : '';\n      modalState.innerElement.style.opacity = display ? '1' : '0';\n    }\n  };\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  const setMaskOpacity = (modalState: ModalsStateEntry, forceOpacity: number | null = null) => {\n    if (forceOpacity === null && history?.[0] !== modalState.id) {\n      return;\n    }\n\n    if (maskAnimationFrame.current) {\n      cancelAnimationFrame(maskAnimationFrame.current);\n    }\n    maskAnimationFrame.current = requestAnimationFrame(() => {\n      if (maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();\n      }\n    });\n  };\n\n  const openModal = () => {\n    if (!enteringModal || !prevProps) {\n      return;\n    }\n\n    const enteringState = getModalState(enteringModal);\n    onEnter();\n\n    // Анимация открытия модального окна\n    if (!prevProps.exitingModal) {\n      requestAnimationFrame(() => {\n        if (enteringModal === enteringModal) {\n          waitTransitionFinish(\n            enteringState?.innerElement,\n            () => onEntered(enteringModal),\n            timeout,\n          );\n          animateModalOpacity(enteringState, true);\n          if (enteringState) {\n            setMaskOpacity(enteringState, 1);\n          }\n        }\n      });\n\n      return;\n    }\n\n    // Переход между модальными окнами без анимации\n    requestAnimationFrame(() => {\n      if (enteringState?.innerElement) {\n        enteringState.innerElement.style.transition = 'none';\n        enteringState.innerElement.style.opacity = '1';\n        setMaskOpacity(enteringState, 1);\n      }\n    });\n\n    onEntered(enteringModal);\n  };\n\n  const closeModal = (id: string) => {\n    const prevModalState = getModalState(id);\n    if (!prevModalState) {\n      return;\n    }\n\n    // Анимация закрытия модального окна\n    if (!activeModal) {\n      requestAnimationFrame(() => {\n        waitTransitionFinish(prevModalState?.innerElement, () => onExited(id), timeout);\n        animateModalOpacity(prevModalState, false);\n        setMaskOpacity(prevModalState, 0);\n      });\n\n      return;\n    }\n\n    // Переход между модальными окнами без анимации\n    onExited(id);\n  };\n\n  React.useEffect(() => {\n    if (!prevProps) {\n      return;\n    }\n\n    // transition phase 2: animate exiting modal\n    if (exitingModal && exitingModal !== prevProps.exitingModal) {\n      closeModal(exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (enteringModal && enteringModal !== prevProps.enteringModal) {\n      openModal();\n    }\n\n    // focus restoration\n    if (activeModal && !prevProps.activeModal) {\n      restoreFocusTo.current = (document?.activeElement ?? undefined) as HTMLElement | undefined;\n    }\n    if (!activeModal && !exitingModal && restoreFocusTo.current) {\n      restoreFocusTo.current.focus();\n      restoreFocusTo.current = undefined;\n    }\n  });\n\n  if (!activeModal && !exitingModal) {\n    return null;\n  }\n\n  return (\n    <ModalRootContext.Provider value={modalRootContext}>\n      <div\n        className={classNames(\n          styles['ModalRoot'],\n          hasCustomPanelHeaderAfter && styles['ModalRoot--hasCustomPanelHeaderAfterSlot'],\n          styles['ModalRoot--desktop'],\n        )}\n      >\n        <div className={styles['ModalRoot__mask']} ref={maskElementRef} onClick={onExit} />\n        <div className={styles['ModalRoot__viewport']}>\n          {modals.map((Modal: React.ReactElement) => {\n            const modalId = getNavId(Modal.props, warn);\n            if (modalId !== activeModal && modalId !== exitingModal) {\n              return null;\n            }\n\n            const key = `modal-${modalId}`;\n\n            return (\n              <FocusTrap\n                restoreFocus={false}\n                onClose={onExit}\n                timeout={timeout}\n                key={key}\n                className={styles['ModalRoot__modal']}\n              >\n                {Modal}\n              </FocusTrap>\n            );\n          })}\n        </div>\n      </div>\n    </ModalRootContext.Provider>\n  );\n};\n"],"mappings":";AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,EAAEC,IAAI,QAAQ;AACjC,SAASC,KAAK,QAAQ;AACtB,SAASC,aAAa,QAAQ;AAC9B,SAASC,WAAW,QAAQ;AAC5B,SAASC,uBAAuB,QAAQ;AACxC,SAASC,MAAM,QAAQ;AACvB,SAASC,QAAQ,QAAQ;AACzB,SAASC,QAAQ,QAAQ;AACzB,SAASC,QAAQ,QAAQ;AACzB,SAASC,iBAAiB,QAAQ;AAClC,SAASC,SAAS,QAAQ;AAC1B,SAASC,gBAAgB,QAAmC;AAE5D,SAASC,eAAe,QAAQ;AAGhC,IAAMC,IAAA,GAAOL,QAAA,CAAS;AAEtB,OAAO,IAAMM,gBAAA,GAAmB,SAAAA,CAAAC,KAAA;MAC9BC,eAAa,GAAAD,KAAA,CAAbE,WAAA;IACAC,QAAA,GAAAH,KAAA,CAAAG,QAAA;IACAC,MAAA,GAAAJ,KAAA,CAAAI,MAAA;IACAC,QAAA,GAAAL,KAAA,CAAAK,QAAA;IACAC,OAAA,GAAAN,KAAA,CAAAM,OAAA;IACAC,QAAA,GAAAP,KAAA,CAAAO,QAAA;EAEA,IAAMC,cAAA,GAAiBzB,KAAA,CAAM0B,MAAM,CAAiB;EACpD,IAAMC,kBAAA,GAAqB3B,KAAA,CAAM0B,MAAM,CAAqBE,SAAA;EAC5D,IAAMC,cAAA,GAAiB7B,KAAA,CAAM0B,MAAM,CAA0BE,SAAA;EAE7D,IAAME,QAAE,GAAavB,MAAA,GAAbuB,QAAA;EACR,IAAgDC,kBAAA,GAAApB,iBAAA;IAAxCqB,yBAAA,GAAwCD,kBAAA,CAAxCC,yBAAA;IAA2BC,QAAA,GAAaF,kBAAA,CAAbE,QAAA;EACnC,IAWIC,gBAAA,GAAApB,eAAA,CAAgBI,eAAA,EAAiBE,QAAA,EAAUC,MAAA,EAAQC,QAAA,EAAUC,OAAA,EAASC,QAAA,EAAUtB,IAAA;IAVlFiB,WAAA,GAUEe,gBAAA,CAVFf,WAAA;IACAgB,YAAA,GASED,gBAAA,CATFC,YAAA;IACAC,MAAA,GAQEF,gBAAA,CARFE,MAAA;IACAC,aAAA,GAOEH,gBAAA,CAPFG,aAAA;IACAC,aAAA,GAMEJ,gBAAA,CANFI,aAAA;IACAC,OAAA,GAKEL,gBAAA,CALFK,OAAA;IACAC,SAAA,GAIEN,gBAAA,CAJFM,SAAA;IACAC,QAAA,GAGEP,gBAAA,CAHFO,QAAA;IACAC,OAAA,GAEER,gBAAA,CAFFQ,OAAA;IACAC,UAAA,GACET,gBAAA,CADFS,UAAA;EAGF,IAAMC,oBAAE,GAAyBtC,uBAAA,GAAzBsC,oBAAA;EACR,IAAMC,SAAA,GAAYxC,WAAA,CAAY;IAC5B8B,YAAA,EAAAA,YAAA;IACAG,aAAA,EAAAA,aAAA;IACAnB,WAAA,EAAAA;EACF;EACA,IAAM2B,gBAAA,GAA8C1C,aAAA,CAAc;IAChE2C,iBAAA,EAAmB,SAAAA,CAAA;aAAMnB,SAAA;;IACzBoB,aAAA,EAAe,SAAAA,CAAAC,MAAA;UAAGC,EAAA,GAAAD,MAAA,CAAAC,EAAA;QAAOC,IAAA,GAAAC,0BAAA,CAAAH,MAAA,GAAP,K;UAAgCI,cAAA;aAAdC,MAAA,CAAOC,MAAM,CAAC,CAAAF,cAAA,GAAAhB,aAAA,CAAca,EAAA,eAAdG,cAAA,cAAAA,cAAA,GAAqB,CAAC,GAAGF,IAAA;IAAI;IAC/E5B,OAAA,EAASa,MAAA;IACToB,aAAA,EAAe;EACjB;EAEA,IAAMC,OAAA,GAAUxB,QAAA,KAAaxB,QAAA,CAASiD,GAAG,GAAG,MAAM;EAClD,IAAMC,MAAA,GAAS3D,KAAA,CAAM4D,QAAQ,CAACC,OAAO,CAACzC,QAAA;EAEtC;EACA,IAAM0C,mBAAA,GAAsB,SAAAA,CAACC,UAAA,EAA0CC,OAAA;IACrE,IAAID,UAAA,aAAAA,UAAA,uBAAAA,UAAA,CAAYE,YAAY,EAAE;MAC5BF,UAAA,CAAWE,YAAY,CAACC,KAAK,CAACC,UAAU,GAAG;MAC3CJ,UAAA,CAAWE,YAAY,CAACC,KAAK,CAACE,eAAe,GAAGJ,OAAA,IAAWrB,UAAA,GAAa,EAAC,CAAU0B,MAAA,CAARZ,OAAA,EAAQ,QAAM;MACzFM,UAAA,CAAWE,YAAY,CAACC,KAAK,CAACI,OAAO,GAAGN,OAAA,GAAU,MAAM;IAC1D;EACF;EAEA;EACA,IAAMO,cAAA,GAAiB,SAAAA,CAACR,UAAA;QAA8BS,YAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAA8B;IAClF,IAAID,YAAA,KAAiB,QAAQ,CAAA9B,OAAA,aAAAA,OAAA,uBAAAA,OAAS,CAAC,EAAE,MAAKqB,UAAA,CAAWb,EAAE,EAAE;MAC3D;IACF;IAEA,IAAIvB,kBAAA,CAAmBgD,OAAO,EAAE;MAC9BC,oBAAA,CAAqBjD,kBAAA,CAAmBgD,OAAO;IACjD;IACAhD,kBAAA,CAAmBgD,OAAO,GAAGE,qBAAA,CAAsB;MACjD,IAAIpD,cAAA,CAAekD,OAAO,EAAE;QAC1B,IAAAG,sBAAA,GAAkDf,UAAA,CAA1CgB,UAAA;UAAAA,UAAA,GAAAD,sBAAA,cAAa,IAAAA,sBAAA;UAAAE,6BAAA,GAA6BjB,UAAA,CAA1BkB,iBAAA;UAAAA,iBAAA,GAAAD,6BAAA,cAAoB,IAAAA,6BAAA;QAE5C,IAAMV,OAAA,GACJE,YAAA,KAAiB,OACb,IAAI,CAACS,iBAAA,GAAoBF,UAAS,KAAM,MAAMA,UAAS,KAAM,IAC7DP,YAAA;QACN/C,cAAA,CAAekD,OAAO,CAACT,KAAK,CAACI,OAAO,GAAGnE,KAAA,CAAMmE,OAAA,EAAS,GAAG,KAAKY,QAAQ;MACxE;IACF;EACF;EAEA,IAAMC,SAAA,GAAY,SAAAA,CAAA;IAChB,IAAI,CAAC7C,aAAA,IAAiB,CAACO,SAAA,EAAW;MAChC;IACF;IAEA,IAAMuC,aAAA,GAAgB/C,aAAA,CAAcC,aAAA;IACpCC,OAAA;IAEA;IACA,IAAI,CAACM,SAAA,CAAUV,YAAY,EAAE;MAC3B0C,qBAAA,CAAsB;QACpB,IAAIvC,aAAA,KAAkBA,aAAA,EAAe;UACnCM,oBAAA,CACEwC,aAAA,aAAAA,aAAA,uBAAAA,aAAA,CAAenB,YAAY,EAC3B;mBAAMzB,SAAA,CAAUF,aAAA;aAChBmB,OAAA;UAEFK,mBAAA,CAAoBsB,aAAA,EAAe;UACnC,IAAIA,aAAA,EAAe;YACjBb,cAAA,CAAea,aAAA,EAAe;UAChC;QACF;MACF;MAEA;IACF;IAEA;IACAP,qBAAA,CAAsB;MACpB,IAAIO,aAAA,aAAAA,aAAA,uBAAAA,aAAA,CAAenB,YAAY,EAAE;QAC/BmB,aAAA,CAAcnB,YAAY,CAACC,KAAK,CAACC,UAAU,GAAG;QAC9CiB,aAAA,CAAcnB,YAAY,CAACC,KAAK,CAACI,OAAO,GAAG;QAC3CC,cAAA,CAAea,aAAA,EAAe;MAChC;IACF;IAEA5C,SAAA,CAAUF,aAAA;EACZ;EAEA,IAAM+C,UAAA,GAAa,SAAAA,CAACnC,EAAA;IAClB,IAAMoC,cAAA,GAAiBjD,aAAA,CAAca,EAAA;IACrC,IAAI,CAACoC,cAAA,EAAgB;MACnB;IACF;IAEA;IACA,IAAI,CAACnE,WAAA,EAAa;MAChB0D,qBAAA,CAAsB;QACpBjC,oBAAA,CAAqB0C,cAAA,aAAAA,cAAA,uBAAAA,cAAA,CAAgBrB,YAAY,EAAE;iBAAMxB,QAAA,CAASS,EAAA;WAAKO,OAAA;QACvEK,mBAAA,CAAoBwB,cAAA,EAAgB;QACpCf,cAAA,CAAee,cAAA,EAAgB;MACjC;MAEA;IACF;IAEA;IACA7C,QAAA,CAASS,EAAA;EACX;EAEAlD,KAAA,CAAMuF,SAAS,CAAC;IACd,IAAI,CAAC1C,SAAA,EAAW;MACd;IACF;IAEA;IACA,IAAIV,YAAA,IAAgBA,YAAA,KAAiBU,SAAA,CAAUV,YAAY,EAAE;MAC3DkD,UAAA,CAAWlD,YAAA;IACb;IAEA;IACA,IAAIG,aAAA,IAAiBA,aAAA,KAAkBO,SAAA,CAAUP,aAAa,EAAE;MAC9D6C,SAAA;IACF;IAEA;IACA,IAAIhE,WAAA,IAAe,CAAC0B,SAAA,CAAU1B,WAAW,EAAE;UACfqE,uBAAA;MAA1B3D,cAAA,CAAe8C,OAAO,GAAI,CAAAa,uBAAA,GAAA1D,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAU2D,aAAa,cAAvBD,uBAAA,cAAAA,uBAAA,GAA2B5D,SAAA;IACvD;IACA,IAAI,CAACT,WAAA,IAAe,CAACgB,YAAA,IAAgBN,cAAA,CAAe8C,OAAO,EAAE;MAC3D9C,cAAA,CAAe8C,OAAO,CAACe,KAAK;MAC5B7D,cAAA,CAAe8C,OAAO,GAAG/C,SAAA;IAC3B;EACF;EAEA,IAAI,CAACT,WAAA,IAAe,CAACgB,YAAA,EAAc;IACjC,OAAO;EACT;EAEA,oBACEnC,KAAA,CAAA2F,aAAA,CAAC9E,gBAAA,CAAiB+E,QAAQ;IAACC,KAAA,EAAO/C;kBAChC9C,KAAA,CAAA2F,aAAA,CAAC;IACCG,SAAA,EAAW7F,UAAA,kBAET+B,yBAAA;kBAIFhC,KAAA,CAAA2F,aAAA,CAAC;IAAIG,SAAS;IAA6BC,GAAA,EAAKtE,cAAA;IAAgBuE,OAAA,EAAS5D;mBACzEpC,KAAA,CAAA2F,aAAA,CAAC;IAAIG,SAAS;KACXnC,MAAA,CAAOsC,GAAG,CAAC,UAACC,KAAA;IACX,IAAMC,OAAA,GAAU3F,QAAA,CAAS0F,KAAA,CAAME,KAAK,EAAErF,IAAA;IACtC,IAAIoF,OAAA,KAAYhF,WAAA,IAAegF,OAAA,KAAYhE,YAAA,EAAc;MACvD,OAAO;IACT;IAEA,IAAMkE,GAAA,GAAM,QAAC,CAAgBhC,MAAA,CAAR8B,OAAA;IAErB,oBACEnG,KAAA,CAAA2F,aAAA,CAAC/E,SAAA;MACC0F,YAAA,EAAc;MACd/E,OAAA,EAASa,MAAA;MACTqB,OAAA,EAASA,OAAA;MACT4C,GAAA,EAAKA,GAAA;MACLP,SAAS;OAERI,KAAA;EAGP;AAKV"},"metadata":{},"sourceType":"module"}