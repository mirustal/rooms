{"ast":null,"code":"import { BrowserSprite } from \"./browser-sprite\";\nimport { useLayoutEffect, useEffect } from \"react\";\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar browserSprite;\nif (canUseDOM) {\n  var spriteId = \"__SVG_SPRITE_NODE__\";\n  browserSprite = new BrowserSprite({\n    attrs: {\n      id: spriteId\n    }\n  });\n  var mount = function () {\n    var spriteNode = document.getElementById(spriteId);\n    if (spriteNode) {\n      browserSprite.attach(spriteNode);\n    } else {\n      browserSprite.mount(document.body);\n    }\n    document.removeEventListener(\"DOMContentLoaded\", mount);\n  };\n  if (document.querySelector(\"body\")) {\n    mount();\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", mount);\n  }\n} else {\n  browserSprite = null;\n}\nexport function addSpriteSymbol(symbol) {\n  if (browserSprite) {\n    browserSprite.add(symbol);\n  }\n}\nexport var useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;","map":{"version":3,"names":["BrowserSprite","useLayoutEffect","useEffect","canUseDOM","window","document","createElement","browserSprite","spriteId","attrs","id","mount","spriteNode","getElementById","attach","body","removeEventListener","querySelector","addEventListener","addSpriteSymbol","symbol","add","useIsomorphicLayoutEffect"],"sources":["../src/sprite.ts"],"sourcesContent":["import { BrowserSprite } from './browser-sprite';\nimport { useLayoutEffect, useEffect } from 'react';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet browserSprite: BrowserSprite | null;\n\nif (canUseDOM) {\n  const spriteId = '__SVG_SPRITE_NODE__';\n\n  browserSprite = new BrowserSprite({ attrs: { id: spriteId } });\n\n  const mount = () => {\n    const spriteNode = document.getElementById(spriteId);\n    if (spriteNode) {\n      browserSprite!.attach(spriteNode);\n    } else {\n      browserSprite!.mount(document.body);\n    }\n\n    document.removeEventListener('DOMContentLoaded', mount);\n  };\n\n  if (document.querySelector('body')) {\n    mount();\n  } else {\n    document.addEventListener('DOMContentLoaded', mount);\n  }\n} else {\n  browserSprite = null;\n}\n\nexport function addSpriteSymbol(symbol: any) {\n  if (browserSprite) {\n    browserSprite.add(symbol);\n  }\n}\n\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ;AAC9B,SAASC,eAAe,EAAEC,SAAS,QAAQ;AAE3C,IAAMC,SAAA,GAAY,CAAC,EACjB,OAAOC,MAAA,KAAW,eAClBA,MAAA,CAAOC,QAAQ,IACfD,MAAA,CAAOC,QAAQ,CAACC,aAAa,CAAD;AAG9B,IAAIC,aAAA;AAEJ,IAAIJ,SAAA,EAAW;EACb,IAAMK,QAAA,GAAW;EAEjBD,aAAA,GAAgB,IAAIP,aAAA,CAAc;IAAES,KAAA,EAAO;MAAEC,EAAA,EAAIF;IAAS;EAAE;EAE5D,IAAMG,KAAA,GAAQ,SAAAA,CAAA;IACZ,IAAMC,UAAA,GAAaP,QAAA,CAASQ,cAAc,CAACL,QAAA;IAC3C,IAAII,UAAA,EAAY;MACdL,aAAA,CAAeO,MAAM,CAACF,UAAA;IACxB,OAAO;MACLL,aAAA,CAAeI,KAAK,CAACN,QAAA,CAASU,IAAI;IACpC;IAEAV,QAAA,CAASW,mBAAmB,CAAC,oBAAoBL,KAAA;EACnD;EAEA,IAAIN,QAAA,CAASY,aAAa,CAAC,SAAS;IAClCN,KAAA;EACF,OAAO;IACLN,QAAA,CAASa,gBAAgB,CAAC,oBAAoBP,KAAA;EAChD;AACF,OAAO;EACLJ,aAAA,GAAgB;AAClB;AAEA,OAAO,SAASY,gBAAgBC,MAAW;EACzC,IAAIb,aAAA,EAAe;IACjBA,aAAA,CAAcc,GAAG,CAACD,MAAA;EACpB;AACF;AAEA,OAAO,IAAME,yBAAA,GAA4BnB,SAAA,GAAYF,eAAA,GAAkBC,SAAA"},"metadata":{},"sourceType":"module"}