{"ast":null,"code":"var _jsxFileName = \"/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { View, Panel, Group, PanelHeader, PanelHeaderBack, CellButton, Div, PanelHeaderContent, PanelHeaderButton } from \"@vkontakte/vkui\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport { Icon16Dropdown, Icon24Add, Icon28AddOutline } from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { AlertManagerContext } from \"../../contexts/AlertProvider\";\nimport useAdminStatus from \"./hooks/AdminStatus\";\nimport { ModalManager } from \"../../Modals\";\nimport { Locales } from \"../../../locales/locales\";\nimport { roomOperation } from \"./utils/roomOperation\";\nimport { openBaseWithAction } from \"../../Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Channels(_ref) {\n  _s();\n\n  let {\n    roomManager,\n    returnBack\n  } = _ref;\n  const [editModeActive, setEditModeActive] = useState(false);\n  const userIsAdmin = useAdminStatus(roomManager.room);\n  const alerts = useContext(AlertManagerContext);\n  const roomOper = roomOperation(roomManager, alerts);\n  const [channels, setChannels] = useState(roomManager.channels);\n  const [snackbar, setSnackbar] = useState(null);\n  const [contextOpened, setContextOpened] = React.useState(false);\n\n  const toggleContext = () => {\n    setContextOpened(prev => !prev);\n  };\n\n  const toggleEditMode = () => {\n    setEditModeActive(!editModeActive);\n    openBaseWithAction(snackbar, setSnackbar);\n  };\n\n  const showModal = (modalId, props) => {\n    ModalManager.showModal(modalId, props);\n  };\n\n  return roomManager.room ? /*#__PURE__*/_jsxDEV(View, {\n    id: Views.Rooms.id,\n    activePanel: Views.Rooms.panels.list.id,\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      id: Views.Rooms.panels.list.id,\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        before: /*#__PURE__*/_jsxDEV(PanelHeaderBack, {\n          onClick: returnBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this),\n        after: /*#__PURE__*/_jsxDEV(PanelHeaderButton, {\n          children: /*#__PURE__*/_jsxDEV(Icon28AddOutline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(PanelHeaderContent, {\n          aside: /*#__PURE__*/_jsxDEV(Icon16Dropdown, {\n            style: {\n              transform: `rotate(${contextOpened ? '180deg' : '0'})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this),\n          onClick: toggleContext,\n          children: roomManager.room.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), AlterActionSheet({\n        roomInfo: roomManager.room,\n        returnBack: () => returnBack,\n        handleActiveEditMode: toggleEditMode,\n        userIsAdmin: userIsAdmin,\n        deleteRoom: () => roomOper.deleteRoom(roomManager.room.id, returnBack),\n        contextOpened: contextOpened,\n        toggleContext: toggleContext\n      }), /*#__PURE__*/_jsxDEV(Group, {\n        children: [roomManager.room.channels.map((channel, index) => /*#__PURE__*/_jsxDEV(ChannelView, {\n          channelIndex: index,\n          channel: channel,\n          renameToChannel: () => showModal(ModalIds.RenameChannel, {\n            renameChannelId: channel.id,\n            renameChannel: roomOper.renameChannel\n          }),\n          deleteToChannel: () => {\n            roomOper.deleteChannel(channel.id);\n            setChannels(roomManager.room.channels);\n          },\n          editModeActive: editModeActive,\n          refreshChannel: () => roomOper.refreshChannel(channel.id),\n          userIsAdmin: userIsAdmin\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)), userIsAdmin && /*#__PURE__*/_jsxDEV(CellButton, {\n          onClick: () => showModal(ModalIds.CreateChannel, {\n            createChannel: roomOper.createChannel\n          }),\n          centered: true,\n          before: /*#__PURE__*/_jsxDEV(Icon24Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 23\n          }, this),\n          children: Locales.Channels.CreateChannel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: snackbar\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(Channels, \"If19Yr/FIMoXEhUDcx+NiRQYwTc=\", false, function () {\n  return [useAdminStatus];\n});\n\n_c = Channels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"names":["React","useContext","useState","View","Panel","Group","PanelHeader","PanelHeaderBack","CellButton","Div","PanelHeaderContent","PanelHeaderButton","ModalIds","Views","ChannelView","Icon16Dropdown","Icon24Add","Icon28AddOutline","AlterActionSheet","AlertManagerContext","useAdminStatus","ModalManager","Locales","roomOperation","openBaseWithAction","Channels","roomManager","returnBack","editModeActive","setEditModeActive","userIsAdmin","room","alerts","roomOper","channels","setChannels","snackbar","setSnackbar","contextOpened","setContextOpened","toggleContext","prev","toggleEditMode","showModal","modalId","props","Rooms","id","panels","list","transform","name","roomInfo","handleActiveEditMode","deleteRoom","map","channel","index","RenameChannel","renameChannelId","renameChannel","deleteChannel","refreshChannel","CreateChannel","createChannel"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/Channels.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport {\n  View,\n  Panel,\n  Group,\n  PanelHeader,\n  PanelHeaderBack,\n  CellButton,\n  Div,\n  PanelHeaderContent,\n  PanelHeaderButton,\n} from \"@vkontakte/vkui\";\nimport { ModalIds, Views } from \"../../../model/views\";\nimport ChannelView from \"./ChannelView\";\nimport { Icon16Dropdown, Icon24Add, Icon28AddOutline } from \"@vkontakte/icons\";\nimport AlterActionSheet from \"./AlterActionSheet\";\nimport { AlertManagerContext } from \"../../contexts/AlertProvider\";\nimport useAdminStatus from \"./hooks/AdminStatus\";\nimport { ModalManager } from \"../../Modals\";\nimport { Locales } from \"../../../locales/locales\";\nimport { roomOperation } from \"./utils/roomOperation\";\nimport { openBaseWithAction } from \"../../Snackbar\";\n\nexport default function Channels({ roomManager, returnBack }) {\n  const [editModeActive, setEditModeActive] = useState(false);\n  const userIsAdmin = useAdminStatus(roomManager.room);\n  const alerts = useContext(AlertManagerContext);\n  const roomOper = roomOperation(roomManager, alerts);\n  const [channels, setChannels] = useState(roomManager.channels)\n  const [snackbar, setSnackbar] = useState(null)\n  \n  const [contextOpened, setContextOpened] = React.useState(false);\n  const toggleContext = () => {\n    setContextOpened((prev) => !prev);\n  };\n\n\n\n  const toggleEditMode = () => {\n    setEditModeActive(!editModeActive);\n    openBaseWithAction(snackbar, setSnackbar);\n  }\n\n  const showModal = (modalId, props) => {\n    ModalManager.showModal(modalId, props);\n  };\n\n  return roomManager.room ? (\n    <View id={Views.Rooms.id} activePanel={Views.Rooms.panels.list.id}>\n      <Panel id={Views.Rooms.panels.list.id}>\n        <PanelHeader before={<PanelHeaderBack onClick={returnBack} />} after={\n                <PanelHeaderButton>\n                  <Icon28AddOutline />\n                </PanelHeaderButton>\n              }>\n            <PanelHeaderContent\n              aside={\n                <Icon16Dropdown\n                  style={{\n                    transform: `rotate(${contextOpened ? '180deg' : '0'})`,\n                  }}\n                />\n              }\n              onClick={toggleContext}\n            >\n              {roomManager.room.name}\n            </PanelHeaderContent>\n        </PanelHeader>\n        {AlterActionSheet({\n              roomInfo:roomManager.room,\n              returnBack:() => returnBack,\n              handleActiveEditMode: toggleEditMode,\n              userIsAdmin:userIsAdmin,\n              deleteRoom: () => roomOper.deleteRoom(roomManager.room.id, returnBack),\n              contextOpened: contextOpened,\n              toggleContext: toggleContext\n        })}\n        <Group>\n          {roomManager.room.channels.map((channel, index) => (\n            <ChannelView\n              key={channel.id}\n              channelIndex={index}\n              channel={channel}\n              renameToChannel={() => showModal(ModalIds.RenameChannel, {\n                renameChannelId: channel.id,\n                renameChannel: roomOper.renameChannel,\n              })}\n              deleteToChannel={() => {roomOper.deleteChannel(channel.id);\n                                      setChannels(roomManager.room.channels)\n                    }}\n              editModeActive={editModeActive}\n              refreshChannel={() => roomOper.refreshChannel(channel.id)}\n              userIsAdmin={userIsAdmin}\n            />\n          ))}\n          {userIsAdmin && (\n            <CellButton\n              onClick={() => showModal(ModalIds.CreateChannel, {\n                createChannel: roomOper.createChannel\n              })\n              }\n              centered\n              before={<Icon24Add />}\n            >\n              {Locales.Channels.CreateChannel}\n            </CellButton>\n          )}\n        </Group>\n        <>\n        {snackbar}\n        </>\n      </Panel>\n    </View>\n  ) : null;\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}