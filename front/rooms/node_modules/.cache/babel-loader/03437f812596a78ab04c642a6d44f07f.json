{"ast":null,"code":"import { _ as _type_of } from \"@swc/helpers/_/_type_of\";\nexport function uniqueArrayFallback(array) {\n  if (!Array.isArray(array) || !array.length) {\n    return [];\n  }\n  var map = {};\n  var newArr = [];\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n    var key = String(item) + (typeof item === \"undefined\" ? \"undefined\" : _type_of(item));\n    if (!map[key]) {\n      newArr.push(item);\n      map[key] = true;\n    }\n  }\n  return newArr;\n}","map":{"version":3,"names":["uniqueArrayFallback","array","Array","isArray","length","map","newArr","i","item","key","String","_type_of","push"],"sources":["../../../src/internal/uniqueArray.ts"],"sourcesContent":["export function uniqueArrayFallback<T>(array: T[]): T[] {\n  if (!Array.isArray(array) || !array.length) {\n    return [];\n  }\n\n  const map: Record<string, boolean> = {};\n  const newArr: T[] = [];\n\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    const key = String(item) + typeof item;\n\n    if (!map[key]) {\n      newArr.push(item);\n      map[key] = true;\n    }\n  }\n\n  return newArr;\n}\n"],"mappings":";AAAA,OAAO,SAASA,oBAAuBC,KAAU;EAC/C,IAAI,CAACC,KAAA,CAAMC,OAAO,CAACF,KAAA,KAAU,CAACA,KAAA,CAAMG,MAAM,EAAE;IAC1C,OAAO,EAAE;EACX;EAEA,IAAMC,GAAA,GAA+B,CAAC;EACtC,IAAMC,MAAA,GAAc,EAAE;EAEtB,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,GAAIN,KAAA,CAAMG,MAAM,EAAEG,CAAA,IAAK;IACrC,IAAMC,IAAA,GAAOP,KAAK,CAACM,CAAA,CAAE;IACrB,IAAME,GAAA,GAAMC,MAAA,CAAOF,IAAA,KAAQ,OAAOA,IAAA,iCAAPG,QAAA,CAAOH,IAAA,CAAG;IAErC,IAAI,CAACH,GAAG,CAACI,GAAA,CAAI,EAAE;MACbH,MAAA,CAAOM,IAAI,CAACJ,IAAA;MACZH,GAAG,CAACI,GAAA,CAAI,GAAG;IACb;EACF;EAEA,OAAOH,MAAA;AACT"},"metadata":{},"sourceType":"module"}