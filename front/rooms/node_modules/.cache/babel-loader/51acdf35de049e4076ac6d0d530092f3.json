{"ast":null,"code":"import { SizeType, tryToCheckIsDesktop, ViewWidth } from \"../../lib/adaptivity\";\nexport var getAdaptiveSizeType = function (type, compactClassNames, regularClassNames) {\n  return {\n    compact: type === undefined ? compactClassNames.mq : type === SizeType.COMPACT ? compactClassNames[type] : false,\n    regular: type === undefined ? regularClassNames.mq : type === SizeType.REGULAR ? regularClassNames[type] : false\n  };\n};\nexport var getAdaptiveViewWidth = function (viewWidth, viewWidthClassNames) {\n  return {\n    tabletMinus: viewWidth === undefined ? viewWidthClassNames.tabletMinus.mq : viewWidth < ViewWidth.TABLET ? viewWidthClassNames.tabletMinus.forced : false,\n    tabletPlus: viewWidth === undefined ? viewWidthClassNames.tabletPlus.mq : viewWidth >= ViewWidth.TABLET ? viewWidthClassNames.tabletPlus.forced : false\n  };\n};\nexport var getAdaptiveDeviceType = function (viewWidth, viewHeight, hasPointer, platform, deviceTypeClassNames) {\n  var isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n  if (isDesktop === null) {\n    return {\n      mobile: deviceTypeClassNames.mobile.mq,\n      desktop: deviceTypeClassNames.desktop.mq\n    };\n  }\n  if (isDesktop) {\n    return {\n      mobile: false,\n      desktop: deviceTypeClassNames.desktop.forced\n    };\n  }\n  return {\n    mobile: deviceTypeClassNames.mobile.forced,\n    desktop: false\n  };\n};","map":{"version":3,"names":["SizeType","tryToCheckIsDesktop","ViewWidth","getAdaptiveSizeType","type","compactClassNames","regularClassNames","compact","undefined","mq","COMPACT","regular","REGULAR","getAdaptiveViewWidth","viewWidth","viewWidthClassNames","tabletMinus","TABLET","forced","tabletPlus","getAdaptiveDeviceType","viewHeight","hasPointer","platform","deviceTypeClassNames","isDesktop","mobile","desktop"],"sources":["../../../src/hooks/useAdaptivityConditionalRender/helpers.ts"],"sourcesContent":["import { SizeType, tryToCheckIsDesktop, ViewHeight, ViewWidth } from '../../lib/adaptivity';\nimport type { PlatformType } from '../../lib/platform';\nimport type {\n  AdaptiveDeviceType,\n  AdaptiveSizeType,\n  AdaptiveViewWidth,\n  DeviceTypeCSSBreakpoints,\n  ElementProps,\n  ViewWidthCSSBreakpoints,\n} from './types';\n\nexport const getAdaptiveSizeType = (\n  type: undefined | SizeType,\n  compactClassNames: Record<'mq' | SizeType.COMPACT, ElementProps>,\n  regularClassNames: Record<'mq' | SizeType.REGULAR, ElementProps>,\n): AdaptiveSizeType => {\n  return {\n    compact:\n      type === undefined\n        ? compactClassNames.mq\n        : type === SizeType.COMPACT\n        ? compactClassNames[type]\n        : false,\n    regular:\n      type === undefined\n        ? regularClassNames.mq\n        : type === SizeType.REGULAR\n        ? regularClassNames[type]\n        : false,\n  };\n};\n\nexport const getAdaptiveViewWidth = (\n  viewWidth: undefined | ViewWidth,\n  viewWidthClassNames: Record<ViewWidthCSSBreakpoints, Record<'mq' | 'forced', ElementProps>>,\n): AdaptiveViewWidth => {\n  return {\n    tabletMinus:\n      viewWidth === undefined\n        ? viewWidthClassNames.tabletMinus.mq\n        : viewWidth < ViewWidth.TABLET\n        ? viewWidthClassNames.tabletMinus.forced\n        : false,\n    tabletPlus:\n      viewWidth === undefined\n        ? viewWidthClassNames.tabletPlus.mq\n        : viewWidth >= ViewWidth.TABLET\n        ? viewWidthClassNames.tabletPlus.forced\n        : false,\n  };\n};\n\nexport const getAdaptiveDeviceType = (\n  viewWidth: undefined | ViewWidth,\n  viewHeight: undefined | ViewHeight,\n  hasPointer: undefined | boolean,\n  platform: PlatformType,\n  deviceTypeClassNames: Record<DeviceTypeCSSBreakpoints, Record<'mq' | 'forced', ElementProps>>,\n): AdaptiveDeviceType => {\n  const isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n\n  if (isDesktop === null) {\n    return {\n      mobile: deviceTypeClassNames.mobile.mq,\n      desktop: deviceTypeClassNames.desktop.mq,\n    };\n  }\n\n  if (isDesktop) {\n    return {\n      mobile: false,\n      desktop: deviceTypeClassNames.desktop.forced,\n    };\n  }\n\n  return {\n    mobile: deviceTypeClassNames.mobile.forced,\n    desktop: false,\n  };\n};\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,mBAAmB,EAAcC,SAAS,QAAQ;AAWrE,OAAO,IAAMC,mBAAA,GAAsB,SAAAA,CACjCC,IAAA,EACAC,iBAAA,EACAC,iBAAA;EAEA,OAAO;IACLC,OAAA,EACEH,IAAA,KAASI,SAAA,GACLH,iBAAA,CAAkBI,EAAE,GACpBL,IAAA,KAASJ,QAAA,CAASU,OAAO,GACzBL,iBAAiB,CAACD,IAAA,CAAK,GACvB;IACNO,OAAA,EACEP,IAAA,KAASI,SAAA,GACLF,iBAAA,CAAkBG,EAAE,GACpBL,IAAA,KAASJ,QAAA,CAASY,OAAO,GACzBN,iBAAiB,CAACF,IAAA,CAAK,GACvB;EACR;AACF;AAEA,OAAO,IAAMS,oBAAA,GAAuB,SAAAA,CAClCC,SAAA,EACAC,mBAAA;EAEA,OAAO;IACLC,WAAA,EACEF,SAAA,KAAcN,SAAA,GACVO,mBAAA,CAAoBC,WAAW,CAACP,EAAE,GAClCK,SAAA,GAAYZ,SAAA,CAAUe,MAAM,GAC5BF,mBAAA,CAAoBC,WAAW,CAACE,MAAM,GACtC;IACNC,UAAA,EACEL,SAAA,KAAcN,SAAA,GACVO,mBAAA,CAAoBI,UAAU,CAACV,EAAE,GACjCK,SAAA,IAAaZ,SAAA,CAAUe,MAAM,GAC7BF,mBAAA,CAAoBI,UAAU,CAACD,MAAM,GACrC;EACR;AACF;AAEA,OAAO,IAAME,qBAAA,GAAwB,SAAAA,CACnCN,SAAA,EACAO,UAAA,EACAC,UAAA,EACAC,QAAA,EACAC,oBAAA;EAEA,IAAMC,SAAA,GAAYxB,mBAAA,CAAoBa,SAAA,EAAWO,UAAA,EAAYC,UAAA,EAAYC,QAAA;EAEzE,IAAIE,SAAA,KAAc,MAAM;IACtB,OAAO;MACLC,MAAA,EAAQF,oBAAA,CAAqBE,MAAM,CAACjB,EAAE;MACtCkB,OAAA,EAASH,oBAAA,CAAqBG,OAAO,CAAClB;IACxC;EACF;EAEA,IAAIgB,SAAA,EAAW;IACb,OAAO;MACLC,MAAA,EAAQ;MACRC,OAAA,EAASH,oBAAA,CAAqBG,OAAO,CAACT;IACxC;EACF;EAEA,OAAO;IACLQ,MAAA,EAAQF,oBAAA,CAAqBE,MAAM,CAACR,MAAM;IAC1CS,OAAA,EAAS;EACX;AACF"},"metadata":{},"sourceType":"module"}