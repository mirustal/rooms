{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\n/**\n * `AspectRatio` позволяет поддерживать постоянное соотношение ширины и высоты.\n * Его можно использовать для отображения изображений, карт, видео и других медиафайлов.\n\n * @since 5.5.0\n * @see https://vkcom.github.io/VKUI/#/AspectRatio\n */\nexport function AspectRatio(_param) {\n  var ratio = _param.ratio,\n    _param_mode = _param.mode,\n    mode = _param_mode === void 0 ? \"stretch\" : _param_mode,\n    styleProp = _param.style,\n    props = _object_without_properties(_param, [\"ratio\", \"mode\", \"style\"]);\n  var style = _define_property({}, \"--vkui_internal--aspect_ratio\", String(ratio));\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread({\n    baseClassName: classNames(\"vkuiAspectRatio\", mode === \"stretch\" && \"vkuiAspectRatio--mode-stretch\"),\n    style: _object_spread({}, styleProp, style)\n  }, props));\n}","map":{"version":3,"names":["React","classNames","RootComponent","AspectRatio","_param","ratio","_param_mode","mode","styleProp","style","props","_object_without_properties","_define_property","String","createElement","_object_spread","baseClassName"],"sources":["../../../src/components/AspectRatio/AspectRatio.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { CSSCustomProperties, HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './AspectRatio.module.css';\n\nexport interface AspectRatioProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  className?: string;\n  /**\n   * По умолчанию, вложенный контент будет растягиваться и заполнять весь блок.\n   */\n  mode?: 'stretch' | 'none';\n  /**\n   * Например 16 / 9, 4 / 3, 1920 / 1080\n   */\n  ratio: number;\n}\n\n/**\n * `AspectRatio` позволяет поддерживать постоянное соотношение ширины и высоты.\n * Его можно использовать для отображения изображений, карт, видео и других медиафайлов.\n\n * @since 5.5.0\n * @see https://vkcom.github.io/VKUI/#/AspectRatio\n */\nexport function AspectRatio({\n  ratio,\n  mode = 'stretch',\n  style: styleProp,\n  ...props\n}: AspectRatioProps): JSX.Element {\n  const style: React.CSSProperties & CSSCustomProperties = {\n    ['--vkui_internal--aspect_ratio']: String(ratio),\n  };\n\n  return (\n    <RootComponent\n      baseClassName={classNames(\n        styles.AspectRatio,\n        mode === 'stretch' && styles['AspectRatio--mode-stretch'],\n      )}\n      style={{ ...styleProp, ...style }}\n      {...props}\n    />\n  );\n}\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAE3B,SAASC,aAAa,QAAQ;AAe9B;;;;;;;AAOA,OAAO,SAASC,YAAYC,MAAA;MAC1BC,KAAA,GAD0BD,MAAA,CAC1BC,KAAA;IAAAC,WAAA,GAD0BF,MAAA,CAE1BG,IAAA;IAAAA,IAAA,GAAAD,WAAA,cAAO,YAAAA,WAAA;IACPE,SAAO,GAHmBJ,MAAA,CAG1BK,KAAA;IACGC,KAAA,GAAAC,0BAAA,CAJuBP,MAAA,GAC1B,SACA,QACA,Q;EAGA,IAAMK,KAAA,GACJG,gBAAA,KAAC,iCAAkCC,MAAA,CAAOR,KAAA;EAG5C,oBACEL,KAAA,CAAAc,aAAA,CAACZ,aAAA,EAAAa,cAAA;IACCC,aAAA,EAAef,UAAA,oBAEbM,IAAA,KAAS;IAEXE,KAAA,EAAOM,cAAA,KAAKP,SAAA,EAAcC,KAAA;KACtBC,KAAA;AAGV"},"metadata":{},"sourceType":"module"}