{"ast":null,"code":"!function (e, n) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? n(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], n) : n((e = \"undefined\" != typeof globalThis ? globalThis : e || self).vkBridge = {});\n}(this, function (e) {\n  \"use strict\";\n\n  var n = function () {\n    return n = Object.assign || function (e) {\n      for (var n, t = 1, o = arguments.length; t < o; t++) for (var r in n = arguments[t]) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n      return e;\n    }, n.apply(this, arguments);\n  };\n  function t(e, n, t) {\n    if (t || 2 === arguments.length) for (var o, r = 0, a = n.length; r < a; r++) !o && r in n || (o || (o = Array.prototype.slice.call(n, 0, r)), o[r] = n[r]);\n    return e.concat(o || Array.prototype.slice.call(n));\n  }\n  function o(e, t) {\n    var o,\n      r,\n      a = (o = {\n        current: 0,\n        next: function () {\n          return ++this.current;\n        }\n      }, r = {}, {\n        add: function (e, n) {\n          var t = null != n ? n : o.next();\n          return r[t] = e, t;\n        },\n        resolve: function (e, n, t) {\n          var o = r[e];\n          o && (t(n) ? o.resolve(n) : o.reject(n), r[e] = null);\n        }\n      });\n    return t(function (e) {\n      if (e.detail && e.detail.data && \"object\" == typeof e.detail.data && \"request_id\" in e.detail.data) {\n        var n = e.detail.data,\n          t = n.request_id,\n          o = function (e, n) {\n            var t = {};\n            for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && n.indexOf(o) < 0 && (t[o] = e[o]);\n            if (null != e && \"function\" == typeof Object.getOwnPropertySymbols) {\n              var r = 0;\n              for (o = Object.getOwnPropertySymbols(e); r < o.length; r++) n.indexOf(o[r]) < 0 && Object.prototype.propertyIsEnumerable.call(e, o[r]) && (t[o[r]] = e[o[r]]);\n            }\n            return t;\n          }(n, [\"request_id\"]);\n        t && a.resolve(t, o, function (e) {\n          return !(\"error_type\" in e);\n        });\n      }\n    }), function (t, o) {\n      return void 0 === o && (o = {}), new Promise(function (r, p) {\n        var i = a.add({\n          resolve: r,\n          reject: p\n        }, o.request_id);\n        e(t, n(n({}, o), {\n          request_id: i\n        }));\n      });\n    };\n  }\n  var r = \"undefined\" != typeof window,\n    a = Boolean(r && window.AndroidBridge),\n    p = Boolean(r && window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.VKWebAppClose),\n    i = Boolean(r && window.ReactNativeWebView && \"function\" == typeof window.ReactNativeWebView.postMessage),\n    s = r && !a && !p,\n    u = s && /(^\\?|&)vk_platform=mobile_web(&|$)/.test(location.search),\n    d = s ? \"message\" : \"VKWebAppEvent\",\n    c = t([\"VKWebAppInit\", \"VKWebAppGetCommunityAuthToken\", \"VKWebAppAddToCommunity\", \"VKWebAppAddToHomeScreenInfo\", \"VKWebAppClose\", \"VKWebAppCopyText\", \"VKWebAppCreateHash\", \"VKWebAppGetUserInfo\", \"VKWebAppSetLocation\", \"VKWebAppSendToClient\", \"VKWebAppGetClientVersion\", \"VKWebAppGetPhoneNumber\", \"VKWebAppGetEmail\", \"VKWebAppGetGroupInfo\", \"VKWebAppGetGeodata\", \"VKWebAppGetCommunityToken\", \"VKWebAppGetConfig\", \"VKWebAppGetLaunchParams\", \"VKWebAppSetTitle\", \"VKWebAppGetAuthToken\", \"VKWebAppCallAPIMethod\", \"VKWebAppJoinGroup\", \"VKWebAppLeaveGroup\", \"VKWebAppAllowMessagesFromGroup\", \"VKWebAppDenyNotifications\", \"VKWebAppAllowNotifications\", \"VKWebAppOpenPayForm\", \"VKWebAppOpenApp\", \"VKWebAppShare\", \"VKWebAppShowWallPostBox\", \"VKWebAppScroll\", \"VKWebAppShowOrderBox\", \"VKWebAppShowLeaderBoardBox\", \"VKWebAppShowInviteBox\", \"VKWebAppShowRequestBox\", \"VKWebAppAddToFavorites\", \"VKWebAppShowStoryBox\", \"VKWebAppStorageGet\", \"VKWebAppStorageGetKeys\", \"VKWebAppStorageSet\", \"VKWebAppFlashGetInfo\", \"VKWebAppSubscribeStoryApp\", \"VKWebAppOpenWallPost\", \"VKWebAppCheckAllowedScopes\", \"VKWebAppCheckBannerAd\", \"VKWebAppHideBannerAd\", \"VKWebAppShowBannerAd\", \"VKWebAppCheckNativeAds\", \"VKWebAppShowNativeAds\", \"VKWebAppRetargetingPixel\", \"VKWebAppConversionHit\", \"VKWebAppShowSubscriptionBox\", \"VKWebAppCheckSurvey\", \"VKWebAppShowSurvey\", \"VKWebAppScrollTop\", \"VKWebAppScrollTopStart\", \"VKWebAppScrollTopStop\", \"VKWebAppShowSlidesSheet\", \"VKWebAppTranslate\", \"VKWebAppRecommend\"], s && !u ? [\"VKWebAppResizeWindow\", \"VKWebAppAddToMenu\", \"VKWebAppShowInstallPushBox\", \"VKWebAppGetFriends\", \"VKWebAppShowCommunityWidgetPreviewBox\", \"VKWebAppCallStart\", \"VKWebAppCallJoin\", \"VKWebAppCallGetStatus\"] : [\"VKWebAppShowImages\"], !0),\n    l = r ? window.AndroidBridge : void 0,\n    b = p ? window.webkit.messageHandlers : void 0,\n    f = s ? parent : void 0;\n  var A, v, m, W, V, _, K;\n  e.EAdsFormats = void 0, (A = e.EAdsFormats || (e.EAdsFormats = {})).REWARD = \"reward\", A.INTERSTITIAL = \"interstitial\", e.BannerAdLayoutType = void 0, (v = e.BannerAdLayoutType || (e.BannerAdLayoutType = {})).RESIZE = \"resize\", v.OVERLAY = \"overlay\", e.BannerAdLocation = void 0, (m = e.BannerAdLocation || (e.BannerAdLocation = {})).TOP = \"top\", m.BOTTOM = \"bottom\", e.EGrantedPermission = void 0, (W = e.EGrantedPermission || (e.EGrantedPermission = {})).CAMERA = \"camera\", W.LOCATION = \"location\", W.PHOTO = \"photo\", e.EGetLaunchParamsResponseLanguages = void 0, (V = e.EGetLaunchParamsResponseLanguages || (e.EGetLaunchParamsResponseLanguages = {})).RU = \"ru\", V.UK = \"uk\", V.UA = \"ua\", V.EN = \"en\", V.BE = \"be\", V.KZ = \"kz\", V.PT = \"pt\", V.ES = \"es\", e.EGetLaunchParamsResponseGroupRole = void 0, (_ = e.EGetLaunchParamsResponseGroupRole || (e.EGetLaunchParamsResponseGroupRole = {})).ADMIN = \"admin\", _.EDITOR = \"editor\", _.MEMBER = \"member\", _.MODER = \"moder\", _.NONE = \"none\", e.EGetLaunchParamsResponsePlatforms = void 0, (K = e.EGetLaunchParamsResponsePlatforms || (e.EGetLaunchParamsResponsePlatforms = {})).DESKTOP_WEB = \"desktop_web\", K.DESKTOP_WEB_MESSENGER = \"desktop_web_messenger\", K.DESKTOP_APP_MESSENGER = \"desktop_app_messenger\", K.MOBILE_WEB = \"mobile_web\", K.MOBILE_ANDROID = \"mobile_android\", K.MOBILE_ANDROID_MESSENGER = \"mobile_android_messenger\", K.MOBILE_IPHONE = \"mobile_iphone\", K.MOBILE_IPHONE_MESSENGER = \"mobile_iphone_messenger\", K.MOBILE_IPAD = \"mobile_ipad\";\n  var w = function (e) {\n    var n = void 0,\n      r = [];\n    function u(e) {\n      r.push(e);\n    }\n    function A() {\n      return p || a;\n    }\n    function v() {\n      return s && window.parent !== window;\n    }\n    function m() {\n      return A() || v();\n    }\n    function W(e) {\n      if (p || a) return t([], r, !0).map(function (n) {\n        return n.call(null, e);\n      });\n      var o = null == e ? void 0 : e.data;\n      if (s && o) {\n        if (i && \"string\" == typeof o) try {\n          o = JSON.parse(o);\n        } catch (e) {}\n        var u = o.type,\n          d = o.data,\n          c = o.frameId;\n        u && (\"VKWebAppSettings\" !== u ? t([], r, !0).map(function (e) {\n          return e({\n            detail: {\n              type: u,\n              data: d\n            }\n          });\n        }) : n = c);\n      }\n    }\n    i && /(android)/i.test(navigator.userAgent) ? document.addEventListener(d, W) : \"undefined\" != typeof window && \"addEventListener\" in window && window.addEventListener(d, W);\n    var V = o(function (t, o) {\n      l && l[t] ? l[t](JSON.stringify(o)) : b && b[t] && \"function\" == typeof b[t].postMessage ? b[t].postMessage(o) : i ? window.ReactNativeWebView.postMessage(JSON.stringify({\n        handler: t,\n        params: o\n      })) : f && \"function\" == typeof f.postMessage && f.postMessage({\n        handler: t,\n        params: o,\n        type: \"vk-connect\",\n        webFrameId: n,\n        connectVersion: e\n      }, \"*\");\n    }, u);\n    return {\n      send: V,\n      sendPromise: V,\n      subscribe: u,\n      unsubscribe: function (e) {\n        var n = r.indexOf(e);\n        n > -1 && r.splice(n, 1);\n      },\n      supports: function (e) {\n        return a ? !(!l || \"function\" != typeof l[e]) : p ? !(!b || !b[e] || \"function\" != typeof b[e].postMessage) : !!s && c.includes(e);\n      },\n      isWebView: A,\n      isIframe: v,\n      isEmbedded: m,\n      isStandalone: function () {\n        return !m();\n      }\n    };\n  }(\"2.11.2\");\n  e.applyMiddleware = function e() {\n    for (var t = [], o = 0; o < arguments.length; o++) t[o] = arguments[o];\n    return t.includes(void 0) || t.includes(null) ? e.apply(void 0, t.filter(function (e) {\n      return \"function\" == typeof e;\n    })) : function (e) {\n      if (0 === t.length) return e;\n      var o,\n        r = {\n          subscribe: e.subscribe,\n          send: function () {\n            for (var n = [], t = 0; t < arguments.length; t++) n[t] = arguments[t];\n            return e.send.apply(e, n);\n          }\n        },\n        a = t.filter(function (e) {\n          return \"function\" == typeof e;\n        }).map(function (e) {\n          return e(r);\n        }).reduce(function (e, n) {\n          return function (t) {\n            return e(n(t));\n          };\n        });\n      return o = a(e.send), n(n({}, e), {\n        send: o\n      });\n    };\n  }, e.default = w, e.parseURLSearchParamsForGetLaunchParams = function (n) {\n    var t = {};\n    try {\n      var o = new URLSearchParams(n);\n      o.forEach(function (n, o) {\n        switch (o) {\n          case \"vk_ts\":\n          case \"vk_is_recommended\":\n          case \"vk_profile_id\":\n          case \"vk_has_profile_button\":\n          case \"vk_testing_group_id\":\n          case \"vk_user_id\":\n          case \"vk_app_id\":\n          case \"vk_group_id\":\n            t[o] = Number(n);\n            break;\n          case \"sign\":\n          case \"vk_chat_id\":\n          case \"vk_ref\":\n          case \"vk_access_token_settings\":\n            t[o] = n;\n            break;\n          case \"odr_enabled\":\n            t.odr_enabled = \"1\" === n ? 1 : void 0;\n            break;\n          case \"vk_is_app_user\":\n          case \"vk_are_notifications_enabled\":\n          case \"vk_is_favorite\":\n            t[o] = function (e) {\n              switch (e) {\n                case \"0\":\n                  return 0;\n                case \"1\":\n                  return 1;\n                default:\n                  return;\n              }\n            }(n);\n            break;\n          case \"vk_language\":\n            t.vk_language = function (n) {\n              return Object.values(e.EGetLaunchParamsResponseLanguages).some(function (e) {\n                return e === n;\n              });\n            }(n) ? n : void 0;\n            break;\n          case \"vk_viewer_group_role\":\n            t.vk_viewer_group_role = function (n) {\n              return Object.values(e.EGetLaunchParamsResponseGroupRole).some(function (e) {\n                return e === n;\n              });\n            }(n) ? n : void 0;\n            break;\n          case \"vk_platform\":\n            t.vk_platform = function (n) {\n              return Object.values(e.EGetLaunchParamsResponsePlatforms).some(function (e) {\n                return e === n;\n              });\n            }(n) ? n : void 0;\n        }\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n    return t;\n  }, Object.defineProperty(e, \"__esModule\", {\n    value: !0\n  });\n});","map":{"version":3,"names":["o","e","t","r","a","current","next","add","n","resolve","reject","detail","data","request_id","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","length","propertyIsEnumerable","Promise","p","i","window","Boolean","AndroidBridge","webkit","messageHandlers","VKWebAppClose","ReactNativeWebView","postMessage","s","u","test","location","search","d","c","l","b","f","parent","A","v","m","W","V","_","K","EAdsFormats","REWARD","INTERSTITIAL","BannerAdLayoutType","RESIZE","OVERLAY","BannerAdLocation","TOP","BOTTOM","EGrantedPermission","CAMERA","LOCATION","PHOTO","EGetLaunchParamsResponseLanguages","RU","UK","UA","EN","BE","KZ","PT","ES","EGetLaunchParamsResponseGroupRole","ADMIN","EDITOR","MEMBER","MODER","NONE","EGetLaunchParamsResponsePlatforms","DESKTOP_WEB","DESKTOP_WEB_MESSENGER","DESKTOP_APP_MESSENGER","MOBILE_WEB","MOBILE_ANDROID","MOBILE_ANDROID_MESSENGER","MOBILE_IPHONE","MOBILE_IPHONE_MESSENGER","MOBILE_IPAD","w","push","map","JSON","parse","type","frameId","navigator","userAgent","document","addEventListener","stringify","handler","params","webFrameId","connectVersion","send","sendPromise","subscribe","unsubscribe","splice","supports","includes","isWebView","isIframe","isEmbedded","isStandalone","applyMiddleware","arguments","apply","filter","reduce","default","parseURLSearchParamsForGetLaunchParams","URLSearchParams","forEach","Number","odr_enabled","vk_language","values","some","vk_viewer_group_role","vk_platform","console","warn","defineProperty","value"],"sources":["../src/promisifySend.ts","../src/bridge.ts","../src/types/data.ts","../src/parseURLSearchParamsForGetLaunchParams.ts","../src/index.ts","../src/applyMiddleware.ts"],"sourcesContent":["import {\n  VKBridgeSubscribeHandler,\n  AnyRequestMethodName,\n  RequestProps,\n  RequestIdProp,\n  ReceiveData,\n  AnyReceiveMethodName,\n} from './types/bridge';\n\n/**\n * Creates counter interface.\n */\nfunction createCounter() {\n  return {\n    current: 0,\n    next() {\n      return ++this.current;\n    },\n  };\n}\n\n/**\n * Creates interface for resolving request promises by request id's (or not).\n */\nfunction createRequestResolver() {\n  /**\n   * @prop resolve Resolve function.\n   * @prop reject Reject function.\n   */\n  type PromiseController = {\n    resolve: (value: any) => any;\n    reject: (reason: any) => any;\n  };\n\n  const counter = createCounter();\n  const promiseControllers: Record<number | string, PromiseController | null> = {};\n\n  return {\n    /**\n     * Adds new controller with resolve/reject methods.\n     *\n     * @param controller Object with `resolve` and `reject` functions\n     * @param customId Custom `request_id`\n     * @returns New request id of the added controller.\n     */\n    add(controller: PromiseController, customId?: number | string): number | string {\n      const id = customId != null ? customId : counter.next();\n\n      promiseControllers[id] = controller;\n\n      return id;\n    },\n\n    /**\n     * Resolves/rejects an added promise by request id and the `isSuccess`\n     * predicate.\n     *\n     * @param requestId Request ID.\n     * @param data Data to pass to the resolve- or reject-function.\n     * @param isSuccess Predicate to select the desired function.\n     */\n    resolve<T>(requestId: number | string, data: T, isSuccess: (data: T) => boolean) {\n      const requestPromise = promiseControllers[requestId];\n\n      if (requestPromise) {\n        if (isSuccess(data)) {\n          requestPromise.resolve(data);\n        } else {\n          requestPromise.reject(data);\n        }\n\n        promiseControllers[requestId] = null;\n      }\n    },\n  };\n}\n\n/**\n * Returns send function that returns promises.\n *\n * @param sendEvent Send event function.\n * @param subscribe Subscribe event function.\n * @returns Send function which returns the Promise object.\n */\nexport function promisifySend(\n  sendEvent: <K extends AnyRequestMethodName>(\n    method: K,\n    props?: RequestProps<K> & RequestIdProp,\n  ) => void,\n  subscribe: (fn: VKBridgeSubscribeHandler) => void,\n) {\n  const requestResolver = createRequestResolver();\n\n  // Subscribe to receive a data\n  subscribe((event) => {\n    if (!event.detail || !event.detail.data || typeof event.detail.data !== 'object') {\n      return;\n    }\n\n    // There is no request_id in receive-only events, so we check its existence.\n    if ('request_id' in event.detail.data) {\n      const { request_id: requestId, ...data } = event.detail.data;\n\n      if (requestId) {\n        requestResolver.resolve(requestId, data, (data) => !('error_type' in data));\n      }\n    }\n  });\n\n  return function promisifiedSend<K extends AnyRequestMethodName>(\n    method: K,\n    props: RequestProps<K> & RequestIdProp = {} as RequestProps<K> & RequestIdProp, // eslint-disable-line @typescript-eslint/consistent-type-assertions\n  ): Promise<K extends AnyReceiveMethodName ? ReceiveData<K> : void> {\n    return new Promise((resolve, reject) => {\n      const requestId = requestResolver.add({ resolve, reject }, props.request_id);\n\n      sendEvent(method, {\n        ...props,\n        request_id: requestId,\n      });\n    });\n  };\n}\n","import { promisifySend } from './promisifySend';\nimport {\n  VKBridge,\n  VKBridgeSubscribeHandler,\n  AnyRequestMethodName,\n  RequestProps,\n  RequestIdProp,\n} from './types/bridge';\n\n/** Is the client side runtime environment */\nexport const IS_CLIENT_SIDE = typeof window !== 'undefined';\n\n/** Is the runtime environment an Android app */\nexport const IS_ANDROID_WEBVIEW = Boolean(IS_CLIENT_SIDE && (window as any).AndroidBridge);\n\n/** Is the runtime environment an iOS app */\nexport const IS_IOS_WEBVIEW = Boolean(\n  IS_CLIENT_SIDE &&\n    (window as any).webkit &&\n    (window as any).webkit.messageHandlers &&\n    (window as any).webkit.messageHandlers.VKWebAppClose,\n);\n\nexport const IS_REACT_NATIVE_WEBVIEW = Boolean(\n  IS_CLIENT_SIDE &&\n    (window as any).ReactNativeWebView &&\n    typeof (window as any).ReactNativeWebView.postMessage === 'function',\n);\n\n/** Is the runtime environment a browser */\nexport const IS_WEB = IS_CLIENT_SIDE && !IS_ANDROID_WEBVIEW && !IS_IOS_WEBVIEW;\n\n/** Is the runtime environment m.vk.com */\nexport const IS_MVK = IS_WEB && /(^\\?|&)vk_platform=mobile_web(&|$)/.test(location.search);\n\n/** Is the runtime environment vk.com */\nexport const IS_DESKTOP_VK = IS_WEB && !IS_MVK;\n\n/** Type of subscribe event */\nexport const EVENT_TYPE = IS_WEB ? 'message' : 'VKWebAppEvent';\n\n/** Methods supported on the desktop */\nexport const DESKTOP_METHODS = [\n  'VKWebAppInit',\n  'VKWebAppGetCommunityAuthToken',\n  'VKWebAppAddToCommunity',\n  'VKWebAppAddToHomeScreenInfo',\n  'VKWebAppClose',\n  'VKWebAppCopyText',\n  'VKWebAppCreateHash',\n  'VKWebAppGetUserInfo',\n  'VKWebAppSetLocation',\n  'VKWebAppSendToClient',\n  'VKWebAppGetClientVersion',\n  'VKWebAppGetPhoneNumber',\n  'VKWebAppGetEmail',\n  'VKWebAppGetGroupInfo',\n  'VKWebAppGetGeodata',\n  'VKWebAppGetCommunityToken',\n  'VKWebAppGetConfig',\n  'VKWebAppGetLaunchParams',\n  'VKWebAppSetTitle',\n  'VKWebAppGetAuthToken',\n  'VKWebAppCallAPIMethod',\n  'VKWebAppJoinGroup',\n  'VKWebAppLeaveGroup',\n  'VKWebAppAllowMessagesFromGroup',\n  'VKWebAppDenyNotifications',\n  'VKWebAppAllowNotifications',\n  'VKWebAppOpenPayForm',\n  'VKWebAppOpenApp',\n  'VKWebAppShare',\n  'VKWebAppShowWallPostBox',\n  'VKWebAppScroll',\n  'VKWebAppShowOrderBox',\n  'VKWebAppShowLeaderBoardBox',\n  'VKWebAppShowInviteBox',\n  'VKWebAppShowRequestBox',\n  'VKWebAppAddToFavorites',\n  'VKWebAppShowStoryBox',\n  'VKWebAppStorageGet',\n  'VKWebAppStorageGetKeys',\n  'VKWebAppStorageSet',\n  'VKWebAppFlashGetInfo',\n  'VKWebAppSubscribeStoryApp',\n  'VKWebAppOpenWallPost',\n  'VKWebAppCheckAllowedScopes',\n  'VKWebAppCheckBannerAd',\n  'VKWebAppHideBannerAd',\n  'VKWebAppShowBannerAd',\n  'VKWebAppCheckNativeAds',\n  'VKWebAppShowNativeAds',\n  'VKWebAppRetargetingPixel',\n  'VKWebAppConversionHit',\n  'VKWebAppShowSubscriptionBox',\n  'VKWebAppCheckSurvey',\n  'VKWebAppShowSurvey',\n  'VKWebAppScrollTop',\n  'VKWebAppScrollTopStart',\n  'VKWebAppScrollTopStop',\n  'VKWebAppShowSlidesSheet',\n  'VKWebAppTranslate',\n  'VKWebAppRecommend',\n\n  // Desktop web specific events\n  ...(IS_DESKTOP_VK\n    ? [\n        'VKWebAppResizeWindow',\n        'VKWebAppAddToMenu',\n        'VKWebAppShowInstallPushBox',\n        'VKWebAppGetFriends',\n        'VKWebAppShowCommunityWidgetPreviewBox',\n        'VKWebAppCallStart',\n        'VKWebAppCallJoin',\n        'VKWebAppCallGetStatus',\n      ]\n    : ['VKWebAppShowImages']),\n];\n\n/** Android VK Bridge interface. */\nconst androidBridge: Record<AnyRequestMethodName, (serializedData: string) => void> | undefined =\n  IS_CLIENT_SIDE ? (window as any).AndroidBridge : undefined;\n\n/** iOS VK Bridge interface. */\nconst iosBridge: Record<AnyRequestMethodName, { postMessage?: (data: any) => void }> | undefined =\n  IS_IOS_WEBVIEW ? (window as any).webkit.messageHandlers : undefined;\n\n/** Web VK Bridge interface. */\nconst webBridge: { postMessage?: (message: any, targetOrigin: string) => void } | undefined = IS_WEB\n  ? parent\n  : undefined;\n\n// [Примечание 1] Отключили использование в этом PR https://github.com/VKCOM/vk-bridge/pull/262\n// let webSdkHandlers: string[] | undefined;\n\n/**\n * Creates a VK Bridge API that holds functions for interact with runtime\n * environment.\n *\n * @param version Version of the package\n */\nexport function createVKBridge(version: string): VKBridge {\n  /** Current frame id. */\n  let webFrameId: string | undefined = undefined;\n\n  /** List of functions that subscribed on events. */\n  const subscribers: VKBridgeSubscribeHandler[] = [];\n\n  /**\n   * Sends an event to the runtime env. In the case of Android/iOS application\n   * env is the application itself. In the case of the browser, the parent\n   * frame in which the event handlers is located.\n   *\n   * @param method The method (event) name to send\n   * @param [props] Method properties\n   */\n  function send<K extends AnyRequestMethodName>(\n    method: K,\n    props?: RequestProps<K> & RequestIdProp,\n  ) {\n    // Sending data through Android bridge\n\n    if (androidBridge && androidBridge[method]) {\n      androidBridge[method](JSON.stringify(props));\n    }\n\n    // Sending data through iOS bridge\n    else if (\n      iosBridge &&\n      iosBridge[method] &&\n      typeof iosBridge[method].postMessage === 'function'\n    ) {\n      iosBridge[method].postMessage!(props);\n    }\n\n    // Sending data through React Native bridge\n    else if (IS_REACT_NATIVE_WEBVIEW) {\n      (window as any).ReactNativeWebView.postMessage(\n        JSON.stringify({\n          handler: method,\n          params: props,\n        }),\n      );\n    }\n\n    // Sending data through web bridge\n    else if (webBridge && typeof webBridge.postMessage === 'function') {\n      webBridge.postMessage(\n        {\n          handler: method,\n          params: props,\n          type: 'vk-connect',\n          webFrameId,\n          connectVersion: version,\n        },\n        '*',\n      );\n    }\n  }\n\n  /**\n   * Adds an event listener. It will be called any time a data is received.\n   *\n   * @param listener A callback to be invoked on every event receive.\n   */\n  function subscribe(listener: VKBridgeSubscribeHandler) {\n    subscribers.push(listener);\n  }\n\n  /**\n   * Removes an event listener which has been subscribed for event listening.\n   *\n   * @param listener A callback to unsubscribe.\n   */\n  function unsubscribe(listener: VKBridgeSubscribeHandler) {\n    const index = subscribers.indexOf(listener);\n\n    if (index > -1) {\n      subscribers.splice(index, 1);\n    }\n  }\n\n  /**\n   * Checks if a method is supported on runtime platform.\n   *\n   * @param method Method (event) name to check.\n   * @returns Result of checking.\n   */\n  function supports<K extends AnyRequestMethodName>(method: K): boolean {\n    if (IS_ANDROID_WEBVIEW) {\n      // Android support check\n      return !!(androidBridge && typeof androidBridge[method] === 'function');\n    } else if (IS_IOS_WEBVIEW) {\n      // iOS support check\n      return !!(\n        iosBridge &&\n        iosBridge[method] &&\n        typeof iosBridge[method].postMessage === 'function'\n      );\n    } else if (IS_WEB) {\n      // Web support check\n      return DESKTOP_METHODS.includes(method);\n      // см. Примечание 1\n      // if (!webSdkHandlers) {\n      //   console.error('You should call bridge.send(\"VKWebAppInit\") first');\n      //   return false;\n      // }\n      // return webSdkHandlers.includes(method);\n    }\n\n    return false;\n  }\n\n  /**\n   * Checks whether the runtime is a WebView.\n   *\n   * @returns Result of checking.\n   */\n  function isWebView(): boolean {\n    return IS_IOS_WEBVIEW || IS_ANDROID_WEBVIEW;\n  }\n\n  /**\n   * Checks whether the runtime is an iframe.\n   *\n   * @returns Result of checking.\n   */\n  function isIframe(): boolean {\n    return IS_WEB && window.parent !== window;\n  }\n\n  /**\n   * Checks whether the runtime is embedded.\n   *\n   * @returns Result of checking.\n   */\n  function isEmbedded(): boolean {\n    return isWebView() || isIframe();\n  }\n\n  /**\n   * Checks whether the runtime is standalone.\n   *\n   * @returns Result of checking.\n   */\n  function isStandalone(): boolean {\n    return !isEmbedded();\n  }\n\n  function handleEvent(event: any) {\n    if (IS_IOS_WEBVIEW || IS_ANDROID_WEBVIEW) {\n      // If it's webview\n      return [...subscribers].map((fn) => fn.call(null, event));\n    }\n\n    let bridgeEventData = event?.data;\n    if (!IS_WEB || !bridgeEventData) {\n      return;\n    }\n\n    if (IS_REACT_NATIVE_WEBVIEW && typeof bridgeEventData === 'string') {\n      try {\n        bridgeEventData = JSON.parse(bridgeEventData);\n      } catch {}\n    }\n\n    const { type, data, frameId } = bridgeEventData;\n    if (!type) {\n      return;\n    }\n\n    // см. Примечание 1\n    // if (type === 'SetSupportedHandlers') {\n    //   webSdkHandlers = data.supportedHandlers;\n    //   return;\n    // }\n\n    if (type === 'VKWebAppSettings') {\n      webFrameId = frameId;\n      return;\n    }\n\n    [...subscribers].map((fn) => fn({ detail: { type, data } }));\n  }\n\n  // Subscribes to listening messages from a runtime for calling each\n  // subscribed event listener.\n  if (IS_REACT_NATIVE_WEBVIEW && /(android)/i.test(navigator.userAgent)) {\n    document.addEventListener(EVENT_TYPE, handleEvent);\n  } else if (typeof window !== 'undefined' && 'addEventListener' in window) {\n    window.addEventListener(EVENT_TYPE, handleEvent);\n  }\n\n  /**\n   * Enhanced send functions for the ability to receive response data in\n   * the Promise object.\n   */\n  const sendPromise = promisifySend(send, subscribe);\n\n  return {\n    send: sendPromise,\n    sendPromise,\n    subscribe,\n    unsubscribe,\n    supports,\n    isWebView,\n    isIframe,\n    isEmbedded,\n    isStandalone,\n  };\n}\n","/** Type of the Personal Card */\nexport type PersonalCardType = 'phone' | 'email' | 'address';\n\n/** Access Permissions for User Token */\nexport type PersonalAuthScope =\n  | 'friends'\n  | 'photos'\n  | 'video'\n  | 'stories'\n  | 'pages'\n  | 'status'\n  | 'notes'\n  | 'wall'\n  | 'docs'\n  | 'groups'\n  | 'stats'\n  | 'market';\n\n/** Access Permissions for Community Token */\nexport type CommunityAuthScope =\n  | 'stories'\n  | 'photos'\n  | 'app_widget'\n  | 'messages'\n  | 'docs'\n  | 'manage';\n\n/**\n * Type of VKWebAppGetFriendsResult user\n */\nexport type UserGetFriendsFriend = {\n  /** User id */\n  id: number;\n  /** User name */\n  first_name: string;\n  /** User surname */\n  last_name: string;\n  /** User sex: 0 - not specified, 1 - female, 2 - male */\n  sex: 0 | 1 | 2;\n  /**\n   * URL of the square user's photo with 200px width.\n   * https://vk.com/images/camera_200.png will be returned if the photo\n   * is not set.\n   */\n  photo_200: string;\n};\n\n/**\n * Type of user info object\n */\nexport type UserInfo = {\n  /** User id */\n  id: number;\n  /** User name */\n  first_name: string;\n  /** User surname */\n  last_name: string;\n  /** User sex: 0 - not specified, 1 - female, 2 - male */\n  sex: 0 | 1 | 2;\n  /** User's city */\n  city: {\n    /** City ID */\n    id: number;\n    /** City title */\n    title: string;\n  };\n  /** User's country */\n  country: {\n    /** Country ID */\n    id: number;\n    /** Country  title */\n    title: string;\n  };\n  /**\n   * Date of Birth. It is returned in the format D.M.YYYY or D.M (if the\n   * year of birth is hidden). If the date of birth is hidden entirely,\n   * the field is not in the response.\n   */\n  bdate?: string;\n  /**\n   * URL of the square user's photo with 100px width.\n   * https://vk.com/images/camera_100.png will be returned if the photo\n   * is not set.\n   */\n  photo_100: string;\n  /**\n   * URL of the square user's photo with 200px width.\n   * https://vk.com/images/camera_200.png will be returned if the photo\n   * is not set.\n   */\n  photo_200: string;\n  /**\n   * URL of the square user's photo with maximum size.\n   * https://vk.com/images/camera_400.png will be returned if the photo\n   * is not set.\n   */\n  photo_max_orig?: string;\n  /** User's timezone */\n  timezone?: number;\n};\n\n/**\n * User's contact data from the Personal Card from\n */\nexport type PersonalCardData = {\n  phone?: string;\n  email?: string;\n  address?: {\n    country?: {\n      id: number;\n      name: string;\n    };\n    city?: {\n      id: number;\n      name: string;\n    };\n    specified_address?: string;\n    postal_code?: string;\n  };\n};\n\n/**\n * Map of VK Pay request params\n */\nexport type VKPayActionParamsMap = {\n  /** Payment with a given amount to a user */\n  'pay-to-user': {\n    /** The amount of payment in rubles. The minimum value is 1 */\n    amount?: number;\n    /** User ID */\n    user_id: number;\n    /** Payment description */\n    description?: string;\n  };\n  /** Payment with a given amount to a community */\n  'pay-to-group': {\n    /** The amount of payment in rubles. The minimum value is 1 */\n    amount: number;\n    /** Community ID */\n    group_id: number;\n    /** Payment description */\n    description?: string;\n    /** Dictionary with arbitrary parameters */\n    data?: string;\n  };\n  /** Transferring an arbitrary amount to a user */\n  'transfer-to-user': {\n    user_id: number;\n  };\n  /** Transferring an arbitrary amount to a community */\n  'transfer-to-group': {\n    group_id: number;\n  };\n  /**\n   * Payment in favor of the merchant\n   * @see {@link https://vk.com/@devpay-vk-pay-how-to VK Pay How To}\n   */\n  'pay-to-service': {\n    /**\n     * Amount of payment. The minimum value is 1. The amount field is\n     * involved in the formation of merchant_data for the signature of\n     * the seller.\n     */\n    amount: number | string;\n    /**\n     * Description of the payment for user. The text will be shown in\n     * payment dialog\n     */\n    description: string;\n    /**\n     * Merchant ID. This is your ID in the payment system, obtained after\n     * the conclusion of the contract along with the seller’s private key\n     */\n    merchant_id: number;\n    /** Version of the payment form */\n    version: number;\n    /** The signature of the VK app that caused the payment */\n    sign: string;\n    /** Service data */\n    data: {\n      /** Currency. Only RUB is currently supported */\n      currency: 'RUB';\n      /** Base64-string of data for the signature of the seller */\n      merchant_data: string;\n      /** SHA-1 seller sign */\n      merchant_sign: string;\n      /** Sales order id */\n      order_id: string | number;\n      /** Timestamp */\n      ts: number;\n      /** Cashback data */\n      cashback?: {\n        /** Cashback timestamp */\n        pay_time: number;\n        /** Cashback size */\n        amount?: number;\n        /** Percentage cashback size */\n        amount_percent?: number;\n      };\n    };\n  };\n};\n\n/**\n * Possible types VK Pay operations\n */\nexport type VKPayActionType = keyof VKPayActionParamsMap;\n\n/**\n * VK Pay request props\n */\nexport type VKPayProps<ActionType extends VKPayActionType> = {\n  app_id: number;\n  action: ActionType;\n  params: VKPayActionParamsMap[ActionType];\n};\n\n/**\n * Appearance type\n */\nexport type AppearanceType = 'light' | 'dark';\n\n/**\n * Application color scheme type\n */\nexport type AppearanceSchemeType = 'vkcom_light' | 'vkcom_dark' | 'space_gray' | 'bright_light';\n\n/**\n * Vibration type for Taptic Engine\n */\nexport type TapticVibrationPowerType = 'light' | 'medium' | 'heavy';\n\n/**\n * Notification type for Taptic Engine\n */\nexport type TapticNotificationType = 'error' | 'success' | 'warning';\n\n/** Status of showing order box */\nexport type OrderBoxShowingStatus = 'cancel' | 'success' | 'fail';\n\n/**\n * Community widget type\n */\nexport type CommunityWidgetType =\n  | 'text'\n  | 'list'\n  | 'table'\n  | 'tiles'\n  | 'compact_list'\n  | 'cover_list'\n  | 'match'\n  | 'matches'\n  | 'donation';\n\n/**\n * Output data from code reader\n */\nexport type CodeReaderOutput = {\n  /** Read QR code data */\n  code_data: string;\n};\n\n/**\n * Selected contact data\n */\nexport type SelectedContact = {\n  phone: string;\n  first_name: string;\n  last_name: string;\n};\n\n/**\n * Request result data\n */\nexport type RequestResult = {\n  /** Operation success */\n  success: boolean;\n  /** `requestKey` from request */\n  requestKey: string;\n};\n\n/**\n * Result data of transaction\n */\nexport type TransactionResult = {\n  /** Payment (true — successful, false — unsuccessful). */\n  status: boolean;\n  /** Payment transaction identifier (for `status=true`). */\n  transaction_id: string;\n  /** Payment amount */\n  amount: string;\n  /** Additional information of the seller */\n  extra?: string | null;\n};\n\n/**\n * Screen insets.\n */\nexport type Insets = {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n};\n\nexport type AdaptivityType = 'force_mobile' | 'force_mobile_compact' | 'adaptive';\n\n/** Default fields for config response on all platforms */\nexport type DefaultUpdateConfigData = {\n  /** App_id of opened app */\n  app_id: string;\n  /** Native app appearance */\n  appearance: AppearanceType;\n  /** Native app scheme */\n  scheme: AppearanceSchemeType;\n};\n\n/** Config response for native platforms */\nexport type MobileUpdateConfigData = DefaultUpdateConfigData & {\n  /** Client type */\n  app: 'vkclient' | 'vkme';\n  /** Safe area insets. iOS only */\n  insets?: Insets;\n};\n\n/** Config response for m.vk.com and vk.com */\nexport type SharedUpdateConfigData = DefaultUpdateConfigData & {\n  /** window.innerWidth of the parent window */\n  viewport_width: number;\n  /** window.innerHeight of the parent window */\n  viewport_height: number;\n  /** Server API host for direct requests. */\n  api_host: string;\n  /** Adaptivity type. */\n  adaptivity?: AdaptivityType;\n};\n\n/** Config response for m.vk.com (mobile browser) */\nexport type MVKUpdateConfigData = SharedUpdateConfigData;\n\n/** Config response for vk.com (full web) */\nexport type VKUpdateConfigData = SharedUpdateConfigData & {\n  /** Is app opened in layer */\n  is_layer: boolean;\n};\n\n/** Update config data */\nexport type ParentConfigData = MobileUpdateConfigData | MVKUpdateConfigData | VKUpdateConfigData;\n\nexport type WidgetPreviewRequestOptions = {\n  /** Widget type */\n  type: CommunityWidgetType;\n  /** Community ID */\n  group_id: number;\n  /**\n   * Widget code\n   * @see {@link https://vk.com/dev/execute Execute method}\n   */\n  code: string;\n};\n\nexport type VKWebAppLibverifyOnFailedCode =\n  | 'GENERAL_ERROR'\n  | 'UNSUPPORTED_NUMBER'\n  | 'INCORRECT_PHONE_NUMBER'\n  | 'INCORRECT_SMS_CODE'\n  | 'RATELIMIT'\n  | 'NETWORK_ERROR'\n  | 'NO_NETWORK';\n\n/**\n * App close status\n */\nexport type AppCloseStatus = 'success' | 'failed';\n\nexport type CommunityTokenRequestOptions = {\n  app_id: number;\n  group_id: number;\n  scope: CommunityAuthScope | string;\n};\n\nexport type MessageRequestOptions = {\n  /** Receiver ID (user, community, chat) */\n  peer_id: number;\n  /** Message text */\n  message: string;\n  /** List of attaches */\n  attachment?: string;\n  /** Geographic latitude of a point, specified in degrees (from -90 to 90). */\n  lat?: number;\n  /** Geographic longitude of a point, specified in degrees (from -180 to 180). */\n  lng?: number;\n};\n\nexport enum EAdsFormats {\n  REWARD = 'reward',\n  INTERSTITIAL = 'interstitial',\n}\n\nexport type ShowNativeAdsRequest = {\n  ad_format: EAdsFormats;\n  use_waterfall?: boolean;\n};\n\nexport type CheckNativeAdsRequest = {\n  ad_format: EAdsFormats;\n  use_waterfall?: boolean;\n};\n\nexport enum BannerAdLayoutType {\n  RESIZE = 'resize',\n  OVERLAY = 'overlay',\n}\n\nexport enum BannerAdLocation {\n  TOP = 'top',\n  BOTTOM = 'bottom',\n}\n\nexport type ShowBannerAdRequest = {\n  banner_location: BannerAdLocation;\n  layout_type?: BannerAdLayoutType;\n  can_close?: boolean;\n};\n\nexport type OrderRequestOptions = {\n  /** Always `item` */\n  type: 'item';\n  /**\n   * Name of product. Will be transmitted in the notification of receipt\n   * of product information\n   */\n  item: string;\n};\n\nexport type RequestForRequestOptions = {\n  /** User Id */\n  uid: number;\n  /** Request test */\n  message: string;\n  /**\n   * Optional parameter. Custom string to track conversion. It is passed\n   * in the application launch parameters in case of launch from the\n   * request.\n   */\n  requestKey?: string;\n};\n\nexport type WallPostRequestOptions = {\n  /**\n   * ID of the user or community on whose wall the post is to be\n   * published\n   */\n  owner_id?: number;\n  /**\n   * `true` - the post posted on behalf of the community will have a\n   * signature added (the name of the user who posted the post)\n   * `false` - the signature will not be added. The parameter is taken\n   * into account only when publishing on the community wall and\n   * specifying the from_group parameter. By default, the signature is\n   * not added\n   */\n  signed?: boolean;\n  /** Latitude, specified in degrees (from -90 to 90) */\n  lat?: number;\n  /** Longitude, specified in degrees (from -180 to 180) */\n  long?: number;\n  /** The place ID where the user is marked */\n  place_id?: number;\n  /**\n   * `true` - post will be available to friends only\n   * `false` - post will be available to all users (default)\n   */\n  friends_only?: boolean;\n  /**\n   * List of services or websites the update will be exported to, if the user has so requested.\n   * Sample values: 'twitter', 'facebook'\n   */\n  services?: 'twitter' | 'facebook' | string;\n  /** Publication date (in Unix time). If used, posting will be delayed until the set time */\n  publish_date?: number;\n  /**\n   * `true` - post comments will be closed\n   * `false` - permission to leave post comments will be up to user's settings (default)\n   */\n  close_comments?: boolean;\n  /** Source of the post. Internal and external links supported */\n  copyright?: string;\n} & (\n  | {\n      message?: string;\n      attachments: string;\n    }\n  | {\n      message: string;\n      attachments?: string;\n    }\n);\n\n/**\n * Result data user in Share\n */\nexport type ShareUserInfo = {\n  /** User id */\n  id: number;\n  /** User name */\n  first_name: string;\n  /** User surname */\n  last_name: string;\n  /** User sex: 0 - not specified, 1 - female, 2 - male */\n  sex: 0 | 1 | 2;\n  /** User profile photo */\n  photo: string;\n};\n\n/**\n * Result data of link share\n */\nexport type LinkShareResult =\n  | { type: 'message'; users: ShareUserInfo[] }\n  | { type: 'post'; post_id: string }\n  | { type: 'story'; story_id: string }\n  | { type: 'qr' | 'link' | 'other' };\n\nexport type StoryObjectTransform = {\n  /** Rotation, from 0 to 359 deg. Counterclockwise rotation. */\n  rotation?: number;\n  /**\n   * The desired width of the sticker relative to the screen is (0, 1), the\n   * height will be calculated taking into account maintaining the aspect ratio\n   * of the content.\n   */\n  relation_width?: number;\n  /** From -1 to 1 of screen with */\n  translation_x?: number;\n  /** From -1 to 1 of screen height */\n  translation_y?: number;\n  /** Gravity. Default: center. */\n  gravity?:\n    | 'left_top'\n    | 'left_center'\n    | 'left_bottom'\n    | 'center_top'\n    | 'center'\n    | 'center_bottom'\n    | 'right_top'\n    | 'right_center'\n    | 'right_bottom';\n};\n\nexport type StoryActionHashtag = {\n  /** Hashtag text */\n  hashtag: string;\n  /** Hashtag style. Default: `blue_gradient` */\n  style?: 'transparent' | 'blue_gradient';\n};\n\nexport type StoryActionMention = {\n  /**\n   * Text in mention format:\n   * for users: \"[id123|name]\"\n   * for communities: \"[club123|name]\"\n   */\n  mention: string;\n  /** Mention style. Default: `red_gradient` */\n  style?: 'transparent' | 'red_gradient';\n};\n\nexport type StoryActionPlace = {\n  /** Place id */\n  place_id: number;\n  /** Place name */\n  title: string;\n  /** Category id */\n  category_id?: number;\n  /** Style */\n  style?: 'transparent' | 'blue' | 'green' | 'white';\n};\n\n/**\n * Story action link\n */\nexport type StoryActionLink = {\n  /** Content link */\n  link: string;\n  /**\n   * The value of the string that will be displayed on the client when\n   * clicking on the tooltip.\n   */\n  tooltip_text_key:\n    | 'tooltip_open_post'\n    | 'tooltip_open_photo'\n    | 'tooltip_open_page'\n    | 'tooltip_open_default';\n};\n\nexport type StoryActionTime = {\n  /** Time style. Default: `date` */\n  style?: 'black' | 'white' | 'green' | 'text' | 'date';\n  /** Timestamp in milliseconds */\n  timestamp_ms?: number;\n  /**\n   * Date (`timestamp_ms` alternative) in format:\n   * `yyyy:MM:dd HH:mm:ss`\n   * (this format is chosen to unify dates from exif fields https://vk.cc/9NrgMr) */\n  date?: string;\n  /** Top sticker title, meaning only for date style */\n  title?: string;\n};\n\nexport type StoryActionGeo = {\n  /** Place id */\n  place_id: number;\n  /** Place name */\n  text: string;\n  /** Category id */\n  category_id?: number;\n  /** Sticker style. Default: `blue`*/\n  style?: 'blue' | 'green' | 'white' | 'transparent';\n};\n\nexport type StoryActionQuestion = {\n  /** Question text */\n  question: string;\n  /** Button text */\n  button: string;\n};\n\nexport type StoryActionText = {\n  /**\n   * The text may contain mentions/hashtags in the formats specified with\n   * the corresponding objects\n   */\n  text: string;\n  /** Text style */\n  style?: 'classic' | 'cursive' | 'marker' | 'italics' | 'typewriter' | 'poster' | 'retro';\n  /** Background/border style. Default: `none` */\n  background_style?: 'none' | 'alpha' | 'solid' | 'sticker' | 'neon';\n  /** Horizontal alignment */\n  alignment?: 'center' | 'left' | 'right';\n  /** HEX color */\n  selection_color?: string;\n};\n\nexport type StoryActionEmoji = {\n  emoji: string;\n};\n\nexport type StoryActionSticker = {\n  /** Sticker id */\n  sticker_id: number;\n  /** Sticker url */\n  url?: string;\n  /** JSON sticker url */\n  animation_url?: string;\n  /** Sticker pack id */\n  pack_id?: number;\n};\n\nexport type StoryActionMarketItem = {\n  /** Product name */\n  title: string;\n  /** Product id in VK Market */\n  product_id?: number;\n  /** Owner id of product in VK Market */\n  owner_id?: number;\n  /** Aliexpress product link */\n  link?: string;\n};\n\n/**\n * Story action type\n */\nexport type StoryAction =\n  | StoryActionHashtag\n  | StoryActionMention\n  | StoryActionPlace\n  | StoryActionLink\n  | StoryActionTime\n  | StoryActionGeo\n  | StoryActionQuestion\n  | StoryActionText\n  | StoryActionEmoji\n  | StoryActionSticker\n  | StoryActionMarketItem;\n\nexport type StoryClickableZoneOrigin = {\n  x: number;\n  y: number;\n};\n\nexport type StoryClickableZone = {\n  /** Action type */\n  action_type: 'hashtag' | 'mention' | 'link' | 'place' | 'question' | 'market_item';\n  /** Action data */\n  action: StoryAction;\n  /**\n   * Clickable area border on the sticker. The points should be located\n   * clockwise, forming a closed square.\n   */\n  clickable_area?: StoryClickableZoneOrigin[];\n};\n\nexport type StoryRenderableSticker = (\n  | {\n      /** Content url */\n      url: string;\n    }\n  | {\n      /** Base64 string with BLOB */\n      blob: string;\n    }\n) & {\n  /** Story type */\n  content_type: 'image' | 'gif' | 'video';\n  /** Object transform */\n  transform?: StoryObjectTransform;\n  /** Clickable zones */\n  clickable_zones?: StoryClickableZone[];\n  /** Content width */\n  original_width?: number;\n  /** Content height */\n  original_height?: number;\n  /** Whether the sticker can be removed from the screen, `true` by default */\n  can_delete?: boolean;\n};\n\nexport type StoryNativeSticker = {\n  /** Story action type */\n  action_type:\n    | 'text'\n    | 'hashtag'\n    | 'mention'\n    | 'time'\n    | 'place'\n    | 'question'\n    | 'emoji'\n    | 'sticker'\n    | 'market_item';\n  /** Story action */\n  action: StoryAction;\n  /** Object transform */\n  transform?: StoryObjectTransform;\n  /** Whether the sticker can be removed from the screen, `true` by default */\n  can_delete?: boolean;\n};\n\n/**\n * Sticker container\n */\nexport type StickerContainer =\n  | {\n      sticker_type: 'renderable';\n      sticker: StoryRenderableSticker;\n    }\n  | {\n      sticker_type: 'native';\n      sticker: StoryNativeSticker;\n    };\n\n/** Link text for moving from a story (community stories only) */\nexport type StoryButtonText =\n  | 'learn_more' // «Подробнее» (default)\n  | 'to_store' // «В магазин»\n  | 'vote' // «Голосовать»\n  | 'more' // «Ещё»\n  | 'book' // «Забронировать»\n  | 'order' // «Заказать»\n  | 'enroll' // «Записаться»\n  | 'fill' // «Заполнить»\n  | 'signup' // «Зарегистрироваться»\n  | 'buy' // «Купить»\n  | 'ticket' // «Купить билет»\n  | 'write' // «Написать»\n  | 'open' // «Открыть»\n  | 'view' // «Посмотреть»\n  | 'go_to' // «Перейти»\n  | 'contact' // «Связаться»\n  | 'watch' // «Смотреть»\n  | 'play' // «Слушать»\n  | 'install' // «Установить»\n  | 'read'; // «Читать»\n\nexport type StoryAttachment = {\n  /** Button text key (см. link_text в stories.getVideoUploadServer) */\n  text: string;\n  /** Attach type */\n  type: 'url' | 'audio' | 'video' | 'photo';\n  /** Content url */\n  url?: string;\n  /** Owner id */\n  owner_id?: number;\n  /** Object id */\n  id?: number;\n  /** Access key for the attachment */\n  access_key?: string;\n};\n\nexport type ShowStoryBoxOptions = {\n  /** Story type */\n  background_type: 'image' | 'video' | 'none';\n  /** Camera type (only for `background_type: none`). Default: `back` */\n  camera_type?: 'back' | 'front';\n  /** Link to an image or video (should follow a direct link to mp4) */\n  url?: string;\n  /** Base64 string with BLOB (supported only for image) */\n  blob?: string;\n  /** Lock to move the photo */\n  locked?: boolean;\n  /** Story attachment object */\n  attachment?: StoryAttachment;\n  /** Array of sticker objects */\n  stickers?: StickerContainer[];\n};\n\n/**\n * Params of method for subscribing to a story updates\n */\nexport type SubscribeStoryAppOptions = {\n  /** Story owner id */\n  story_owner_id: number;\n  /** Story id */\n  story_id: number;\n  /** Clickable sticker id */\n  sticker_id: number;\n  /** Private stories access key */\n  access_key?: string;\n};\n\n/**\n * Group info\n */\nexport type GroupInfo = {\n  id: number;\n  name: string;\n  screen_name: string;\n  is_closed: number;\n  type: string;\n  is_member: number;\n  description: string;\n  photo_50: string;\n  photo_100: string;\n  photo_200: string;\n};\n\n/*\n * Options for request to adding a user to an audience with a retargeting pixel\n */\nexport type RetargetingPixelOptions = {\n  /** Pixel code, e.g. `VK-RTRG-447253-dUuM` */\n  pixel_code: string;\n  /** Event id, pixel rule */\n  event?: string;\n  /** ID of the retargeting group to which the current user should be added */\n  target_group_id?: number;\n  /** ID of the price list */\n  price_list_id?: number;\n  /** Type of product event */\n  products_event?: string;\n  /** Product params */\n  products_params?: string;\n};\n\n/**\n * Type for params field in OKWebAppCallAPIMethod\n */\nexport type OKCallApiParams = {\n  application_key: string;\n  access_token: string;\n  format?: string;\n\n  [key: string]: any;\n};\n\n/**\n * Type for VKWebAppCheckAllowedScopes method results\n */\nexport type VKWebAppCheckAllowedScopesResponseEntry = {\n  scope: string;\n  allowed: boolean;\n};\n\ntype ActionSheetSlide = {\n  media: ActionSheetSlideMedia;\n  title: string;\n  subtitle: string;\n};\n\ntype ActionSheetSlideMedia = (\n  | {\n      /** Content url */\n      url: string;\n    }\n  | {\n      /** Base64 string with BLOB */\n      blob: string;\n    }\n) & {\n  /** Media type */\n  type: 'image' | 'gif' | 'video';\n};\n\nexport type ShowSlidesSheetResponse = {\n  result: true;\n} & (\n  | {\n      action: 'confirm' | 'cancel';\n    }\n  | {\n      action: 'reject';\n      slide_index: number;\n    }\n);\n\nexport type ShowSlidesSheetRequest = {\n  slides: ActionSheetSlide[];\n};\n\ntype TranslationLanguage = 'ru' | 'en' | 'es' | 'pt' | string;\n\nexport type TranslateResponse = {\n  result: {\n    texts: string[];\n    source_lang: TranslationLanguage;\n  };\n};\n\nexport type TranslateRequest = {\n  texts: string[];\n  translation_language: TranslationLanguage;\n};\n\nexport type CallStartResponse = {\n  result: true;\n  join_link: string;\n};\n\nexport type CallJoinRequest = {\n  join_link: string;\n};\n\nexport type CallJoinResponse = {\n  result: true;\n};\n\nexport type CallGetStatusResponse = {\n  result: true;\n  is_active: boolean;\n};\n\nexport type CallLeftResponse = {\n  reason: string;\n};\n\nexport type CallFinishedResponse = {\n  result: true;\n};\n\nexport enum EGrantedPermission {\n  CAMERA = 'camera',\n  LOCATION = 'location',\n  PHOTO = 'photo',\n}\n\nexport type GetGrantedPermissionsResponse = {\n  permissions: EGrantedPermission[];\n};\n\nexport type CreateHashRequest = {\n  payload?: string;\n};\n\nexport type CreateHashResponse = {\n  ts: number;\n  hash: string;\n  payload?: string;\n};\n\nexport type ChangeFragmentResponse = {\n  location: string;\n};\n\nexport enum EGetLaunchParamsResponseLanguages {\n  RU = 'ru',\n  UK = 'uk',\n  UA = 'ua',\n  EN = 'en',\n  BE = 'be',\n  KZ = 'kz',\n  PT = 'pt',\n  ES = 'es',\n}\n\nexport enum EGetLaunchParamsResponseGroupRole {\n  ADMIN = 'admin',\n  EDITOR = 'editor',\n  MEMBER = 'member',\n  MODER = 'moder',\n  NONE = 'none',\n}\n\nexport enum EGetLaunchParamsResponsePlatforms {\n  DESKTOP_WEB = 'desktop_web',\n  DESKTOP_WEB_MESSENGER = 'desktop_web_messenger',\n  DESKTOP_APP_MESSENGER = 'desktop_app_messenger',\n  MOBILE_WEB = 'mobile_web',\n  MOBILE_ANDROID = 'mobile_android',\n  MOBILE_ANDROID_MESSENGER = 'mobile_android_messenger',\n  MOBILE_IPHONE = 'mobile_iphone',\n  MOBILE_IPHONE_MESSENGER = 'mobile_iphone_messenger',\n  MOBILE_IPAD = 'mobile_ipad',\n}\n\nexport type GetLaunchParamsResponse = {\n  vk_user_id: number;\n  vk_app_id: number;\n  vk_is_app_user: 0 | 1;\n  vk_are_notifications_enabled: 0 | 1;\n  vk_language: EGetLaunchParamsResponseLanguages;\n  vk_ref: string;\n  vk_access_token_settings: string;\n  vk_group_id?: number;\n  vk_viewer_group_role?: EGetLaunchParamsResponseGroupRole;\n  vk_platform: EGetLaunchParamsResponsePlatforms;\n  vk_is_favorite: 0 | 1;\n  vk_ts: number;\n  sign: string;\n};\n\nexport type ConversionHitRequest = {\n  pixel_code: string;\n  conversion_event: string;\n  conversion_value: number;\n};\n\nexport type ConversionHitResponse = {\n  result: true;\n};\n\nexport type VKWebAppShowBannerAdResponse = {\n  result: boolean;\n  banner_width: number;\n  banner_height: number;\n  banner_location: BannerAdLocation;\n  layout_type: BannerAdLayoutType;\n};\n\nexport type VKWebAppCheckBannerAdResponse = VKWebAppShowBannerAdResponse;\nexport type VKWebAppHideBannerAdResponse = VKWebAppShowBannerAdResponse;\nexport type VKWebAppBannerAdUpdatedResponse = VKWebAppShowBannerAdResponse;\nexport type VKWebAppBannerAdClosedByUserResponse = Omit<VKWebAppShowBannerAdResponse, 'result'>;\n\nexport type VKWebAppShowOrderBoxResponse = {\n  status: OrderBoxShowingStatus;\n  order_id: string;\n};\n\nexport type ScrollTopResponse = {\n  scrollTop: number;\n};\n\nexport type ShowSubscriptionBoxRequest = {\n  action: 'create' | 'resume' | 'cancel';\n  item?: string;\n  subscription_id?: string;\n};\n\nexport type ShowSubscriptionBoxResponse = {\n  success: boolean;\n  subscriptionId: string;\n};\n\n/**\n * Map of types of request props of VK Bridge methods\n */\n/* eslint-disable @typescript-eslint/ban-types */\nexport type RequestPropsMap = {\n  VKWebAppInit: {};\n  VKWebAppAddToCommunity: {};\n  VKWebAppAddToHomeScreen: {};\n  VKWebAppAddToHomeScreenInfo: {};\n  VKWebAppAllowMessagesFromGroup: { group_id: number; key?: string };\n  VKWebAppAllowNotifications: {};\n  OKWebAppCallAPIMethod: { method: string; params: OKCallApiParams };\n  VKWebAppCallAPIMethod: {\n    method: string;\n    params: Record<'access_token' | 'v', string> & Record<string, string | number>;\n  };\n  VKWebAppCopyText: { text: string };\n  VKWebAppCreateHash: CreateHashRequest;\n  VKWebAppDownloadFile: { url: string; filename: string };\n  VKWebAppGetAuthToken: { app_id: number; scope: PersonalAuthScope | string };\n  VKWebAppClose: { status: AppCloseStatus; payload?: any };\n  VKWebAppOpenApp: { app_id: number; location?: string };\n  VKWebAppDenyNotifications: {};\n  VKWebAppFlashGetInfo: {};\n  VKWebAppFlashSetLevel: { level: number };\n  VKWebAppGetClientVersion: {};\n  VKWebAppGetCommunityToken: CommunityTokenRequestOptions;\n  VKWebAppGetConfig: {};\n  VKWebAppGetLaunchParams: {};\n  VKWebAppAudioPause: {};\n  VKWebAppGetEmail: {};\n  VKWebAppGetFriends: { multi?: boolean };\n  VKWebAppGetGeodata: {};\n  VKWebAppGetGrantedPermissions: {};\n  VKWebAppGetPersonalCard: { type: PersonalCardType[] };\n  VKWebAppGetPhoneNumber: {};\n  VKWebAppGetUserInfo: { user_id?: number };\n  VKWebAppJoinGroup: { group_id: number };\n  VKWebAppLeaveGroup: { group_id: number };\n  VKWebAppAddToMenu: {};\n  VKWebAppOpenCodeReader: {};\n  VKWebAppOpenContacts: {};\n  VKWebAppOpenPayForm: VKPayProps<VKPayActionType>;\n  VKWebAppOpenQR: {};\n  VKWebAppResizeWindow: { width: number; height?: number };\n  VKWebAppScroll: { top: number; speed?: number };\n  VKWebAppSendToClient: { fragment?: string };\n  VKWebAppSetLocation: { location: string; replace_state?: boolean };\n  VKWebAppSetViewSettings: {\n    status_bar_style: AppearanceType;\n    /** Android only */\n    action_bar_color?: 'none' | string;\n    /** Android only */\n    navigation_bar_color?: string;\n  };\n  VKWebAppShare: { link?: string };\n  VKWebAppShowCommunityWidgetPreviewBox: WidgetPreviewRequestOptions;\n  VKWebAppShowImages: { images: string[]; start_index?: number };\n  VKWebAppShowInviteBox: {};\n  VKWebAppShowLeaderBoardBox: { user_result: number };\n  VKWebAppShowMessageBox: MessageRequestOptions;\n  VKWebAppCheckBannerAd: {};\n  VKWebAppHideBannerAd: {};\n  VKWebAppShowBannerAd: ShowBannerAdRequest;\n  VKWebAppShowNativeAds: ShowNativeAdsRequest;\n  VKWebAppCheckNativeAds: CheckNativeAdsRequest;\n  VKWebAppShowOrderBox: OrderRequestOptions;\n  VKWebAppShowRequestBox: RequestForRequestOptions;\n  VKWebAppShowWallPostBox: WallPostRequestOptions;\n  VKWebAppShowSubscriptionBox: ShowSubscriptionBoxRequest;\n  VKWebAppOpenWallPost: { post_id: number; owner_id: number };\n  VKWebAppStorageGet: { keys: string[] };\n  VKWebAppStorageGetKeys: { count: number; offset: number };\n  VKWebAppStorageSet: { key: string; value: string };\n  VKWebAppTapticImpactOccurred: { style: TapticVibrationPowerType };\n  VKWebAppTapticNotificationOccurred: { type: TapticNotificationType };\n  VKWebAppTapticSelectionChanged: {};\n  VKWebAppAddToFavorites: {};\n  VKWebAppSendPayload: { group_id: number; payload: any };\n  VKWebAppDisableSwipeBack: {};\n  VKWebAppEnableSwipeBack: {};\n  VKWebAppSetSwipeSettings: { history: boolean };\n  VKWebAppShowStoryBox: ShowStoryBoxOptions;\n  VKWebAppAccelerometerStart: { refresh_rate?: string };\n  VKWebAppAccelerometerStop: {};\n  VKWebAppGyroscopeStart: {};\n  VKWebAppGyroscopeStop: {};\n  VKWebAppDeviceMotionStart: {};\n  VKWebAppDeviceMotionStop: {};\n  VKWebAppSubscribeStoryApp: SubscribeStoryAppOptions;\n  VKWebAppGetGroupInfo: { group_id: number };\n  VKWebAppLibverifyRequest: { phone: string };\n  VKWebAppLibverifyCheck: { code: string };\n  VKWebAppRetargetingPixel: RetargetingPixelOptions;\n  VKWebAppCheckAllowedScopes: { scopes: string };\n  VKWebAppConversionHit: ConversionHitRequest;\n  VKWebAppCheckSurvey: {};\n  VKWebAppShowSurvey: {};\n  VKWebAppScrollTop: {};\n  VKWebAppScrollTopStart: {};\n  VKWebAppScrollTopStop: {};\n  VKWebAppShowSlidesSheet: ShowSlidesSheetRequest;\n  VKWebAppTranslate: TranslateRequest;\n  VKWebAppCallStart: {};\n  VKWebAppCallJoin: CallJoinRequest;\n  VKWebAppCallGetStatus: {};\n  VKWebAppRecommend: {};\n};\n\n/**\n * Map of types of response data of VK Bridge methods\n */\nexport type ReceiveDataMap = {\n  VKWebAppInit: { result: true };\n  VKWebAppAddToCommunity: { group_id: number };\n  VKWebAppAddToHomeScreen: { result: true };\n  VKWebAppAddToHomeScreenInfo: { is_feature_supported: boolean; is_added_to_home_screen: boolean };\n  VKWebAppAllowMessagesFromGroup: { result: true };\n  VKWebAppAllowNotifications: { result: true };\n  OKWebAppCallAPIMethod: { response: any };\n  VKWebAppCallAPIMethod: { response: any };\n  VKWebAppCopyText: { result: true };\n  VKWebAppCreateHash: CreateHashResponse;\n  VKWebAppDownloadFile: { result: true };\n  VKWebAppGetAuthToken: { access_token: string; scope: string };\n  VKWebAppClose: { payload: any };\n  VKWebAppOpenApp: { result: true };\n  VKWebAppDenyNotifications: { result: true };\n  VKWebAppFlashGetInfo: { is_available: boolean; level: number };\n  VKWebAppFlashSetLevel: { result: true };\n  VKWebAppGetClientVersion: { platform: string; version: string };\n  VKWebAppGetEmail: { email: string; sign: string };\n  VKWebAppGetFriends: { users: UserGetFriendsFriend[] };\n  VKWebAppGetGeodata:\n    | { available: 0 }\n    | { available: 1; lat: number; long: number; accuracy: number };\n  VKWebAppGetGrantedPermissions: GetGrantedPermissionsResponse;\n  VKWebAppGetPersonalCard: PersonalCardData;\n  VKWebAppGetPhoneNumber: { phone_number: string; sign: string; is_verified: boolean };\n  VKWebAppGetUserInfo: UserInfo;\n  VKWebAppJoinGroup: { result: true };\n  VKWebAppLeaveGroup: { result: true };\n  VKWebAppAddToMenu: { result: true };\n  VKWebAppOpenCodeReader: CodeReaderOutput;\n  VKWebAppOpenQR: CodeReaderOutput;\n  VKWebAppOpenContacts: SelectedContact;\n  VKWebAppOpenPayForm: TransactionResult | { result: TransactionResult };\n  VKWebAppResizeWindow: { width: number; height: number };\n  VKWebAppScroll: { top: number; height: number };\n  VKWebAppSendToClient: { result: true };\n  VKWebAppSetLocation: { result: true };\n  VKWebAppSetViewSettings: { result: true };\n  VKWebAppShare: LinkShareResult[];\n  VKWebAppShowCommunityWidgetPreviewBox: { result: true };\n  VKWebAppShowImages: { result: true };\n  VKWebAppShowInviteBox: { success: true };\n  VKWebAppShowLeaderBoardBox: { success: boolean };\n  VKWebAppShowMessageBox: { result: true };\n  VKWebAppCheckBannerAd: VKWebAppCheckBannerAdResponse;\n  VKWebAppHideBannerAd: VKWebAppHideBannerAdResponse;\n  VKWebAppShowBannerAd: VKWebAppShowBannerAdResponse;\n  VKWebAppBannerAdUpdated: VKWebAppBannerAdUpdatedResponse;\n  VKWebAppBannerAdClosedByUser: VKWebAppBannerAdClosedByUserResponse;\n  VKWebAppShowNativeAds: { result: true };\n  VKWebAppCheckNativeAds: { result: boolean };\n  VKWebAppShowOrderBox: VKWebAppShowOrderBoxResponse;\n  VKWebAppShowRequestBox: RequestResult;\n  VKWebAppShowWallPostBox: { post_id: number | string };\n  VKWebAppShowSubscriptionBox: ShowSubscriptionBoxResponse;\n  VKWebAppOpenWallPost: { result: true };\n  VKWebAppStorageGet: { keys: Array<{ key: string; value: string }> };\n  VKWebAppStorageGetKeys: { keys: string[] };\n  VKWebAppStorageSet: { result: true };\n  VKWebAppTapticImpactOccurred: { result: true };\n  VKWebAppTapticNotificationOccurred: { result: true };\n  VKWebAppTapticSelectionChanged: { result: true };\n  VKWebAppAddToFavorites: { result: true };\n  VKWebAppSendPayload: { result: true };\n  VKWebAppGetCommunityToken: { access_token: string; scope: string };\n  VKWebAppAudioPause: { result: true };\n  VKWebAppAudioPaused: { position: number; type: string; id: string };\n  VKWebAppAudioStopped: {}; // Always empty\n  VKWebAppAudioTrackChanged: { type: string; id: string };\n  VKWebAppAudioUnpaused: { type: string; id: string };\n  VKWebAppInitAds: { init: 'true' | 'false' };\n  VKWebAppLoadAds: { load: 'true' | 'false' };\n  VKWebAppUpdateConfig: ParentConfigData;\n  VKWebAppGetConfig: ParentConfigData;\n  VKWebAppGetLaunchParams: GetLaunchParamsResponse;\n  VKWebAppUpdateInsets: { insets: Insets };\n  VKWebAppViewHide: {}; // Always empty\n  VKWebAppViewRestore: {}; // Always empty\n  VKWebAppDisableSwipeBack: { result: true };\n  VKWebAppEnableSwipeBack: { result: true };\n  VKWebAppSetSwipeSettings: { result: true };\n  VKWebAppShowStoryBox: { result: true };\n  VKWebAppAccelerometerStart: { result: true };\n  VKWebAppAccelerometerStop: { result: true };\n  VKWebAppGyroscopeStart: { result: true };\n  VKWebAppGyroscopeStop: { result: true };\n  VKWebAppAccelerometerChanged: { x: string; y: string; z: string };\n  VKWebAppGyroscopeChanged: { x: string; y: string; z: string };\n  VKWebAppDeviceMotionStart: { result: true };\n  VKWebAppDeviceMotionChanged: { alpha: string; beta: string; gamma: string };\n  VKWebAppDeviceMotionStop: { result: true };\n  VKWebAppLocationChanged: { location: string };\n  VKWebAppSubscribeStoryApp: { access_key: string };\n  VKWebAppGetGroupInfo: GroupInfo;\n  VKWebAppLibverifyOnConfirmed: { validate_session: string; validate_token: string };\n  VKWebAppLibverifyOnFailed: { code: VKWebAppLibverifyOnFailedCode };\n  VKWebAppRetargetingPixel: { result: true };\n  VKWebAppCheckAllowedScopes: { result: VKWebAppCheckAllowedScopesResponseEntry[] };\n  VKWebAppChangeFragment: ChangeFragmentResponse;\n  VKWebAppConversionHit: ConversionHitResponse;\n  VKWebAppCheckSurvey: { result: boolean };\n  VKWebAppShowSurvey: { result: boolean };\n  VKWebAppScrollTop: ScrollTopResponse;\n  VKWebAppScrollTopStart: { result: true };\n  VKWebAppScrollTopStop: { result: true };\n  VKWebAppShowSlidesSheet: ShowSlidesSheetResponse;\n  VKWebAppTranslate: TranslateResponse;\n  VKWebAppCallStart: CallStartResponse;\n  VKWebAppCallJoin: CallJoinResponse;\n  VKWebAppCallGetStatus: CallGetStatusResponse;\n  VKWebAppCallLeft: CallLeftResponse;\n  VKWebAppCallFinished: CallFinishedResponse;\n  VKWebAppRecommend: { result: true };\n};\n/* eslint-enable @typescript-eslint/ban-types */\n\ntype EventReceiveNames<\n  T extends keyof RequestPropsMap,\n  R extends string,\n  F extends string,\n> = Record<T, { result: R; failed: F }>;\n\n/**\n * Map of event names.\n */\nexport type ReceiveEventMap = EventReceiveNames<\n  'VKWebAppInit',\n  'VKWebAppInitResult',\n  'VKWebAppInitFailed'\n> &\n  EventReceiveNames<\n    'VKWebAppAddToCommunity',\n    'VKWebAppAddToCommunityResult',\n    'VKWebAppAddToCommunityFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAddToHomeScreen',\n    'VKWebAppAddToHomeScreenResult',\n    'VKWebAppAddToHomeScreenFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAddToHomeScreenInfo',\n    'VKWebAppAddToHomeScreenInfoResult',\n    'VKWebAppAddToHomeScreenInfoFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAllowMessagesFromGroup',\n    'VKWebAppAllowMessagesFromGroupResult',\n    'VKWebAppAllowMessagesFromGroupFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAllowNotifications',\n    'VKWebAppAllowNotificationsResult',\n    'VKWebAppAllowNotificationsFailed'\n  > &\n  EventReceiveNames<\n    'OKWebAppCallAPIMethod',\n    'OKWebAppCallAPIMethodResult',\n    'OKWebAppCallAPIMethodFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCallAPIMethod',\n    'VKWebAppCallAPIMethodResult',\n    'VKWebAppCallAPIMethodFailed'\n  > &\n  EventReceiveNames<'VKWebAppCopyText', 'VKWebAppCopyTextResult', 'VKWebAppCopyTextFailed'> &\n  EventReceiveNames<'VKWebAppCreateHash', 'VKWebAppCreateHashResult', 'VKWebAppCreateHashFailed'> &\n  EventReceiveNames<\n    'VKWebAppDownloadFile',\n    'VKWebAppDownloadFileResult',\n    'VKWebAppDownloadFileFailed'\n  > &\n  // NOTE: Different request/response events\n  EventReceiveNames<\n    'VKWebAppGetAuthToken',\n    'VKWebAppAccessTokenReceived',\n    'VKWebAppAccessTokenFailed'\n  > &\n  EventReceiveNames<'VKWebAppClose', 'VKWebAppCloseResult', 'VKWebAppCloseFailed'> &\n  EventReceiveNames<'VKWebAppOpenApp', 'VKWebAppOpenAppResult', 'VKWebAppOpenAppFailed'> &\n  EventReceiveNames<\n    'VKWebAppDenyNotifications',\n    'VKWebAppDenyNotificationsResult',\n    'VKWebAppDenyNotificationsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppFlashGetInfo',\n    'VKWebAppFlashGetInfoResult',\n    'VKWebAppFlashGetInfoFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppFlashSetLevel',\n    'VKWebAppFlashSetLevelResult',\n    'VKWebAppFlashSetLevelFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetClientVersion',\n    'VKWebAppGetClientVersionResult',\n    'VKWebAppGetClientVersionFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetCommunityToken',\n    'VKWebAppGetCommunityTokenResult',\n    'VKWebAppGetCommunityTokenFailed'\n  > &\n  EventReceiveNames<'VKWebAppGetConfig', 'VKWebAppGetConfigResult', 'VKWebAppGetConfigFailed'> &\n  EventReceiveNames<\n    'VKWebAppGetLaunchParams',\n    'VKWebAppGetLaunchParamsResult',\n    'VKWebAppGetLaunchParamsFailed'\n  > &\n  EventReceiveNames<'VKWebAppAudioPause', 'VKWebAppAudioPauseResult', 'VKWebAppAudioPauseFailed'> &\n  EventReceiveNames<'VKWebAppGetEmail', 'VKWebAppGetEmailResult', 'VKWebAppGetEmailFailed'> &\n  EventReceiveNames<'VKWebAppGetFriends', 'VKWebAppGetFriendsResult', 'VKWebAppGetFriendsFailed'> &\n  EventReceiveNames<'VKWebAppGetGeodata', 'VKWebAppGetGeodataResult', 'VKWebAppGetGeodataFailed'> &\n  EventReceiveNames<\n    'VKWebAppGetGrantedPermissions',\n    'VKWebAppGetGrantedPermissionsResult',\n    'VKWebAppGetGrantedPermissionsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetPersonalCard',\n    'VKWebAppGetPersonalCardResult',\n    'VKWebAppGetPersonalCardFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetPhoneNumber',\n    'VKWebAppGetPhoneNumberResult',\n    'VKWebAppGetPhoneNumberFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetUserInfo',\n    'VKWebAppGetUserInfoResult',\n    'VKWebAppGetUserInfoFailed'\n  > &\n  EventReceiveNames<'VKWebAppJoinGroup', 'VKWebAppJoinGroupResult', 'VKWebAppJoinGroupFailed'> &\n  EventReceiveNames<'VKWebAppLeaveGroup', 'VKWebAppLeaveGroupResult', 'VKWebAppLeaveGroupFailed'> &\n  EventReceiveNames<'VKWebAppAddToMenu', 'VKWebAppAddToMenuResult', 'VKWebAppAddToMenuFailed'> &\n  EventReceiveNames<\n    'VKWebAppOpenCodeReader',\n    'VKWebAppOpenCodeReaderResult',\n    'VKWebAppOpenCodeReaderFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppOpenContacts',\n    'VKWebAppOpenContactsResult',\n    'VKWebAppOpenContactsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppOpenPayForm',\n    'VKWebAppOpenPayFormResult',\n    'VKWebAppOpenPayFormFailed'\n  > &\n  EventReceiveNames<'VKWebAppOpenQR', 'VKWebAppOpenQRResult', 'VKWebAppOpenQRFailed'> &\n  EventReceiveNames<\n    'VKWebAppResizeWindow',\n    'VKWebAppResizeWindowResult',\n    'VKWebAppResizeWindowFailed'\n  > &\n  EventReceiveNames<'VKWebAppScroll', 'VKWebAppScrollResult', 'VKWebAppScrollFailed'> &\n  EventReceiveNames<\n    'VKWebAppSendToClient',\n    'VKWebAppSendToClientResult',\n    'VKWebAppSendToClientFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSetLocation',\n    'VKWebAppSetLocationResult',\n    'VKWebAppSetLocationFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSetViewSettings',\n    'VKWebAppSetViewSettingsResult',\n    'VKWebAppSetViewSettingsFailed'\n  > &\n  EventReceiveNames<'VKWebAppShare', 'VKWebAppShareResult', 'VKWebAppShareFailed'> &\n  EventReceiveNames<\n    'VKWebAppShowCommunityWidgetPreviewBox',\n    'VKWebAppShowCommunityWidgetPreviewBoxResult',\n    'VKWebAppShowCommunityWidgetPreviewBoxFailed'\n  > &\n  EventReceiveNames<'VKWebAppShowImages', 'VKWebAppShowImagesResult', 'VKWebAppShowImagesFailed'> &\n  EventReceiveNames<\n    'VKWebAppShowInviteBox',\n    'VKWebAppShowInviteBoxResult',\n    'VKWebAppShowInviteBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowLeaderBoardBox',\n    'VKWebAppShowLeaderBoardBoxResult',\n    'VKWebAppShowLeaderBoardBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowMessageBox',\n    'VKWebAppShowMessageBoxResult',\n    'VKWebAppShowMessageBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCheckBannerAd',\n    'VKWebAppCheckBannerAdResult',\n    'VKWebAppCheckBannerAdFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppHideBannerAd',\n    'VKWebAppHideBannerAdResult',\n    'VKWebAppHideBannerAdFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowBannerAd',\n    'VKWebAppShowBannerAdResult',\n    'VKWebAppShowBannerAdFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowNativeAds',\n    'VKWebAppShowNativeAdsResult',\n    'VKWebAppShowNativeAdsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCheckNativeAds',\n    'VKWebAppCheckNativeAdsResult',\n    'VKWebAppCheckNativeAdsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowOrderBox',\n    'VKWebAppShowOrderBoxResult',\n    'VKWebAppShowOrderBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowRequestBox',\n    'VKWebAppShowRequestBoxResult',\n    'VKWebAppShowRequestBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowWallPostBox',\n    'VKWebAppShowWallPostBoxResult',\n    'VKWebAppShowWallPostBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowSubscriptionBox',\n    'VKWebAppShowSubscriptionBoxResult',\n    'VKWebAppShowSubscriptionBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppOpenWallPost',\n    'VKWebAppOpenWallPostResult',\n    'VKWebAppOpenWallPostFailed'\n  > &\n  EventReceiveNames<'VKWebAppStorageGet', 'VKWebAppStorageGetResult', 'VKWebAppStorageGetFailed'> &\n  EventReceiveNames<\n    'VKWebAppStorageGetKeys',\n    'VKWebAppStorageGetKeysResult',\n    'VKWebAppStorageGetKeysFailed'\n  > &\n  EventReceiveNames<'VKWebAppStorageSet', 'VKWebAppStorageSetResult', 'VKWebAppStorageSetFailed'> &\n  EventReceiveNames<\n    'VKWebAppTapticImpactOccurred',\n    'VKWebAppTapticImpactOccurredResult',\n    'VKWebAppTapticImpactOccurredFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppTapticNotificationOccurred',\n    'VKWebAppTapticNotificationOccurredResult',\n    'VKWebAppTapticNotificationOccurredFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppTapticSelectionChanged',\n    'VKWebAppTapticSelectionChangedResult',\n    'VKWebAppTapticSelectionChangedFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAddToFavorites',\n    'VKWebAppAddToFavoritesResult',\n    'VKWebAppAddToFavoritesFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSendPayload',\n    'VKWebAppSendPayloadResult',\n    'VKWebAppSendPayloadFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppDisableSwipeBack',\n    'VKWebAppDisableSwipeBackResult',\n    'VKWebAppDisableSwipeBackFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppEnableSwipeBack',\n    'VKWebAppEnableSwipeBackResult',\n    'VKWebAppEnableSwipeBackFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSetSwipeSettings',\n    'VKWebAppSetSwipeSettingsResult',\n    'VKWebAppSetSwipeSettingsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowStoryBox',\n    'VKWebAppShowStoryBoxResult',\n    'VKWebAppShowStoryBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAccelerometerStart',\n    'VKWebAppAccelerometerStartResult',\n    'VKWebAppAccelerometerStartFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAccelerometerStop',\n    'VKWebAppAccelerometerStopResult',\n    'VKWebAppAccelerometerStopFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGyroscopeStart',\n    'VKWebAppGyroscopeStartResult',\n    'VKWebAppGyroscopeStartFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGyroscopeStop',\n    'VKWebAppGyroscopeStopResult',\n    'VKWebAppGyroscopeStopFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppDeviceMotionStart',\n    'VKWebAppDeviceMotionStartResult',\n    'VKWebAppDeviceMotionStartFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppDeviceMotionStop',\n    'VKWebAppDeviceMotionStopResult',\n    'VKWebAppDeviceMotionStopFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSubscribeStoryApp',\n    'VKWebAppSubscribeStoryAppResult',\n    'VKWebAppSubscribeStoryAppFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetGroupInfo',\n    'VKWebAppGetGroupInfoResult',\n    'VKWebAppGetGroupInfoFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppRetargetingPixel',\n    'VKWebAppRetargetingPixelResult',\n    'VKWebAppRetargetingPixelFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCheckAllowedScopes',\n    'VKWebAppCheckAllowedScopesResult',\n    'VKWebAppCheckAllowedScopesFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCheckSurvey',\n    'VKWebAppCheckSurveyResult',\n    'VKWebAppCheckSurveyFailed'\n  > &\n  EventReceiveNames<'VKWebAppShowSurvey', 'VKWebAppShowSurveyResult', 'VKWebAppShowSurveyFailed'> &\n  EventReceiveNames<\n    'VKWebAppConversionHit',\n    'VKWebAppConversionHitResult',\n    'VKWebAppConversionHitFailed'\n  > &\n  EventReceiveNames<'VKWebAppScrollTop', 'VKWebAppScrollTopResult', 'VKWebAppScrollTopFailed'> &\n  EventReceiveNames<\n    'VKWebAppScrollTopStart',\n    'VKWebAppScrollTopStartResult',\n    'VKWebAppScrollTopStop'\n  > &\n  EventReceiveNames<\n    'VKWebAppScrollTopStop',\n    'VKWebAppScrollTopStopResult',\n    'VKWebAppScrollTopStopFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowSlidesSheet',\n    'VKWebAppShowSlidesSheetResult',\n    'VKWebAppShowSlidesSheetFailed'\n  > &\n  EventReceiveNames<'VKWebAppTranslate', 'VKWebAppTranslateResult', 'VKWebAppTranslateFailed'> &\n  EventReceiveNames<'VKWebAppCallStart', 'VKWebAppCallStartResult', 'VKWebAppCallStartFailed'> &\n  EventReceiveNames<'VKWebAppCallJoin', 'VKWebAppCallJoinResult', 'VKWebAppCallJoinFailed'> &\n  EventReceiveNames<\n    'VKWebAppCallGetStatus',\n    'VKWebAppCallGetStatusResult',\n    'VKWebAppCallGetStatusFailed'\n  > &\n  EventReceiveNames<'VKWebAppRecommend', 'VKWebAppRecommendResult', 'VKWebAppRecommendFailed'>;\n","import type { GetLaunchParamsResponse } from './types/data';\nimport {\n  EGetLaunchParamsResponseLanguages,\n  EGetLaunchParamsResponseGroupRole,\n  EGetLaunchParamsResponsePlatforms,\n} from './types/data';\n\nexport interface LaunchParams extends GetLaunchParamsResponse {\n  vk_chat_id: string;\n  vk_is_recommended: number;\n  vk_profile_id: number;\n  vk_has_profile_button: number;\n  vk_testing_group_id: number;\n  odr_enabled: undefined | 1;\n}\n\n/**\n * @see https://dev.vk.com/mini-apps/development/launch-params\n */\nexport const parseURLSearchParamsForGetLaunchParams = (\n  searchParams: string,\n): Partial<LaunchParams> => {\n  const launchParams: Partial<LaunchParams> = {};\n\n  try {\n    const parsedSearchParams = new URLSearchParams(searchParams);\n\n    const convertToggleStateFromStringToNumber = (value: string) => {\n      switch (value) {\n        case '0':\n          return 0;\n        case '1':\n          return 1;\n        default:\n          return undefined;\n      }\n    };\n\n    parsedSearchParams.forEach((value, query) => {\n      switch (query) {\n        case 'vk_ts':\n        case 'vk_is_recommended':\n        case 'vk_profile_id':\n        case 'vk_has_profile_button':\n        case 'vk_testing_group_id':\n        case 'vk_user_id':\n        case 'vk_app_id':\n        case 'vk_group_id':\n          launchParams[query] = Number(value);\n          break;\n        case 'sign':\n        case 'vk_chat_id':\n        case 'vk_ref':\n        case 'vk_access_token_settings':\n          launchParams[query] = value;\n          break;\n        case 'odr_enabled':\n          launchParams['odr_enabled'] = value === '1' ? 1 : undefined;\n          break;\n        case 'vk_is_app_user':\n        case 'vk_are_notifications_enabled':\n        case 'vk_is_favorite': {\n          launchParams[query] = convertToggleStateFromStringToNumber(value);\n          break;\n        }\n        case 'vk_language': {\n          const validateVKLanguage = (value: string): value is EGetLaunchParamsResponseLanguages =>\n            Object.values(EGetLaunchParamsResponseLanguages).some((i) => i === value);\n          launchParams['vk_language'] = validateVKLanguage(value) ? value : undefined;\n          break;\n        }\n        case 'vk_viewer_group_role': {\n          const validateVKViewerGroupRole = (\n            value: string,\n          ): value is EGetLaunchParamsResponseGroupRole =>\n            Object.values(EGetLaunchParamsResponseGroupRole).some((i) => i === value);\n          launchParams['vk_viewer_group_role'] = validateVKViewerGroupRole(value)\n            ? value\n            : undefined;\n          break;\n        }\n        case 'vk_platform': {\n          const validateVKPlatform = (value: string): value is EGetLaunchParamsResponsePlatforms =>\n            Object.values(EGetLaunchParamsResponsePlatforms).some((i) => i === value);\n          launchParams['vk_platform'] = validateVKPlatform(value) ? value : undefined;\n          break;\n        }\n      }\n    });\n  } catch (e) {\n    console.warn(e);\n  }\n\n  return launchParams;\n};\n","import { createVKBridge } from './bridge';\nimport { version } from '../package.json';\n\n// VK Bridge API\nconst bridge = createVKBridge(version);\n\n// Export typings\nexport * from './types/data';\nexport * from './types/bridge';\nexport * from './types/middleware';\nexport * from './types/deprecated';\n\nexport { applyMiddleware } from './applyMiddleware';\n\nexport { parseURLSearchParamsForGetLaunchParams } from './parseURLSearchParamsForGetLaunchParams';\n\nexport { bridge as default };\n","import { VKBridge, VKBridgeSend } from './types/bridge';\nimport { Middleware, MiddlewareAPI } from './types/middleware';\n\n/**\n * Creates the VK Bridge enhancer that applies middleware to the `send`\n * method. This is handy for a variety of task such as logging every sent\n * event.\n *\n * @param middlewares The middleware chain to be applied.\n * @returns The VK Bridge enhancer applying the middleware.\n */\nexport function applyMiddleware(\n  ...middlewares: Array<Middleware | undefined | null>\n): (bridge: VKBridge) => VKBridge {\n  if (middlewares.includes(undefined) || middlewares.includes(null)) {\n    return applyMiddleware(\n      ...middlewares.filter((item): item is Middleware => typeof item === 'function'),\n    );\n  }\n\n  return (bridge) => {\n    if (middlewares.length === 0) {\n      return bridge;\n    }\n\n    let send: VKBridgeSend = () => {\n      throw new Error(\n        'Sending events while constructing your middleware is not allowed. ' +\n          'Other middleware would not be applied to this send.',\n      );\n    };\n\n    const middlewareAPI: MiddlewareAPI = {\n      subscribe: bridge.subscribe,\n      send: (...args) => bridge.send(...args),\n    };\n\n    const chain = middlewares\n      .filter((item): item is Middleware => typeof item === 'function')\n      .map((middleware) => middleware(middlewareAPI)) //\n      .reduce((a, b) => (send) => a(b(send)));\n\n    send = chain(bridge.send);\n\n    return {\n      ...bridge,\n      send,\n    };\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}