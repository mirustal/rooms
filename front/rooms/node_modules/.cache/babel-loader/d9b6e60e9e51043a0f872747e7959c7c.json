{"ast":null,"code":"import { editChannel } from '../../../../serverApi/serverApi';\nexport const channelOperation = (roomManager, alerts) => ({\n  create: function (channelName) {\n    const channelList = roomManager.createChannel(channelName);\n    editChannel(channelList).then(room => {}).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  rename: function (newNameChannel, renameChannelId) {\n    const channelList = renameChannel(room.channels, newNameChannel, renameChannelId);\n    editChannel(channelList).then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  delete: function (delChannenlId) {\n    const channelList = deleteChannel(room.channels, delChannenlId);\n    editChannel(channelList).then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  },\n  refresh: function (channelId) {\n    const channelList = refreshChannel(room.channels, channelId);\n    editChannel().then(room => {\n      redrawRoom();\n    }).catch(error => {\n      console.log(error);\n      alerts.showAlert(ErrorAlert({\n        message: Locales.Errors.FailedCreateRoom,\n        alertManager: alerts\n      }));\n    });\n  }\n});","map":{"version":3,"names":["editChannel","channelOperation","roomManager","alerts","create","channelName","channelList","createChannel","then","room","catch","error","console","log","showAlert","ErrorAlert","message","Locales","Errors","FailedCreateRoom","alertManager","rename","newNameChannel","renameChannelId","renameChannel","channels","redrawRoom","delete","delChannenlId","deleteChannel","refresh","channelId","refreshChannel"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/utils/channelOperation.jsx"],"sourcesContent":["import { editChannel } from '../../../../serverApi/serverApi';\n\nexport const channelOperation = (roomManager, alerts) => ({\n  create: function (channelName) {\n    const channelList = roomManager.createChannel(channelName)\n    editChannel(channelList)\n      .then((room) => {\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  rename: function (newNameChannel, renameChannelId) {\n    const channelList = renameChannel(room.channels, newNameChannel, renameChannelId)\n    editChannel(channelList)\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  delete: function (delChannenlId) {\n    const channelList = deleteChannel(room.channels, delChannenlId)\n    editChannel(channelList)\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n\n  refresh: function (channelId) {\n    const channelList = refreshChannel(room.channels, channelId)\n    editChannel()\n      .then((room) => {\n        redrawRoom()\n      })\n      .catch((error) => {\n        console.log(error)\n        alerts.showAlert(\n          ErrorAlert({\n            message: Locales.Errors.FailedCreateRoom,\n            alertManager: alerts,\n          })\n        );\n      });\n  },\n});"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iCAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,WAAD,EAAcC,MAAd,MAA0B;EACxDC,MAAM,EAAE,UAAUC,WAAV,EAAuB;IAC7B,MAAMC,WAAW,GAAGJ,WAAW,CAACK,aAAZ,CAA0BF,WAA1B,CAApB;IACAL,WAAW,CAACM,WAAD,CAAX,CACGE,IADH,CACSC,IAAD,IAAU,CACf,CAFH,EAGGC,KAHH,CAGUC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAR,MAAM,CAACW,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEjB;MAFL,CAAD,CADZ;IAMD,CAXH;EAYD,CAfuD;EAiBxDkB,MAAM,EAAE,UAAUC,cAAV,EAA0BC,eAA1B,EAA2C;IACjD,MAAMjB,WAAW,GAAGkB,aAAa,CAACf,IAAI,CAACgB,QAAN,EAAgBH,cAAhB,EAAgCC,eAAhC,CAAjC;IACAvB,WAAW,CAACM,WAAD,CAAX,CACGE,IADH,CACSC,IAAD,IAAU;MACdiB,UAAU;IACX,CAHH,EAIGhB,KAJH,CAIUC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAR,MAAM,CAACW,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEjB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD,CAhCuD;EAkCxDwB,MAAM,EAAE,UAAUC,aAAV,EAAyB;IAC/B,MAAMtB,WAAW,GAAGuB,aAAa,CAACpB,IAAI,CAACgB,QAAN,EAAgBG,aAAhB,CAAjC;IACA5B,WAAW,CAACM,WAAD,CAAX,CACGE,IADH,CACSC,IAAD,IAAU;MACdiB,UAAU;IACX,CAHH,EAIGhB,KAJH,CAIUC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAR,MAAM,CAACW,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEjB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD,CAjDuD;EAmDxD2B,OAAO,EAAE,UAAUC,SAAV,EAAqB;IAC5B,MAAMzB,WAAW,GAAG0B,cAAc,CAACvB,IAAI,CAACgB,QAAN,EAAgBM,SAAhB,CAAlC;IACA/B,WAAW,GACRQ,IADH,CACSC,IAAD,IAAU;MACdiB,UAAU;IACX,CAHH,EAIGhB,KAJH,CAIUC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAR,MAAM,CAACW,SAAP,CACEC,UAAU,CAAC;QACTC,OAAO,EAAEC,OAAO,CAACC,MAAR,CAAeC,gBADf;QAETC,YAAY,EAAEjB;MAFL,CAAD,CADZ;IAMD,CAZH;EAaD;AAlEuD,CAA1B,CAAzB"},"metadata":{},"sourceType":"module"}