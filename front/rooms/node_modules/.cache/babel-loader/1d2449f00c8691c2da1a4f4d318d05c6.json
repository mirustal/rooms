{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { Keys, pressedKey } from \"../lib/accessibility\";\nimport { useDOM } from \"../lib/dom\";\nimport { useGlobalEventListener } from \"./useGlobalEventListener\";\nexport var ENABLE_KEYBOARD_INPUT_EVENT_NAME = \"enableKeyboardInput\";\nexport var DISABLE_KEYBOARD_INPUT_EVENT_NAME = \"disableKeyboardInput\";\nexport function useKeyboardInputTracker() {\n  var document = useDOM().document;\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n    isKeyboardInputActive = _React_useState[0],\n    toggleKeyboardInput = _React_useState[1];\n  var enableKeyboardInput = React.useCallback(function () {\n    toggleKeyboardInput(true);\n  }, []);\n  var handleKeydown = React.useCallback(function (e) {\n    if (pressedKey(e) === Keys.TAB) {\n      enableKeyboardInput();\n    }\n  }, [enableKeyboardInput]);\n  var disableKeyboardInput = React.useCallback(function () {\n    toggleKeyboardInput(false);\n  }, []);\n  var eventOptions = {\n    passive: true,\n    capture: true\n  };\n  useGlobalEventListener(document, \"keydown\", handleKeydown, eventOptions);\n  useGlobalEventListener(document, \"mousedown\", disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, \"touchstart\", disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, ENABLE_KEYBOARD_INPUT_EVENT_NAME, enableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, DISABLE_KEYBOARD_INPUT_EVENT_NAME, disableKeyboardInput, eventOptions);\n  return isKeyboardInputActive;\n}","map":{"version":3,"names":["React","Keys","pressedKey","useDOM","useGlobalEventListener","ENABLE_KEYBOARD_INPUT_EVENT_NAME","DISABLE_KEYBOARD_INPUT_EVENT_NAME","useKeyboardInputTracker","document","_React_useState","_sliced_to_array","useState","isKeyboardInputActive","toggleKeyboardInput","enableKeyboardInput","useCallback","handleKeydown","e","TAB","disableKeyboardInput","eventOptions","passive","capture"],"sources":["../../src/hooks/useKeyboardInputTracker.ts"],"sourcesContent":["import * as React from 'react';\nimport { Keys, pressedKey } from '../lib/accessibility';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\nexport const ENABLE_KEYBOARD_INPUT_EVENT_NAME = 'enableKeyboardInput';\nexport const DISABLE_KEYBOARD_INPUT_EVENT_NAME = 'disableKeyboardInput';\n\nexport function useKeyboardInputTracker(): boolean {\n  const { document } = useDOM();\n\n  const [isKeyboardInputActive, toggleKeyboardInput] = React.useState<boolean>(false);\n\n  const enableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(true);\n  }, []);\n\n  const handleKeydown = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (pressedKey(e) === Keys.TAB) {\n        enableKeyboardInput();\n      }\n    },\n    [enableKeyboardInput],\n  );\n\n  const disableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(false);\n  }, []);\n\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n\n  useGlobalEventListener(document, 'keydown', handleKeydown, eventOptions);\n  useGlobalEventListener(document, 'mousedown', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'touchstart', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(\n    document,\n    ENABLE_KEYBOARD_INPUT_EVENT_NAME,\n    enableKeyboardInput,\n    eventOptions,\n  );\n  useGlobalEventListener(\n    document,\n    DISABLE_KEYBOARD_INPUT_EVENT_NAME,\n    disableKeyboardInput,\n    eventOptions,\n  );\n\n  return isKeyboardInputActive;\n}\n"],"mappings":";AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,IAAI,EAAEC,UAAU,QAAQ;AACjC,SAASC,MAAM,QAAQ;AACvB,SAASC,sBAAsB,QAAQ;AAEvC,OAAO,IAAMC,gCAAA,GAAmC;AAChD,OAAO,IAAMC,iCAAA,GAAoC;AAEjD,OAAO,SAASC,wBAAA;EACd,IAAMC,QAAE,GAAaL,MAAA,GAAbK,QAAA;EAER,IAAqDC,eAAA,GAAAC,gBAAA,CAAAV,KAAA,CAAMW,QAAQ,CAAU;IAAtEC,qBAAA,GAA8CH,eAAA;IAAvBI,mBAAA,GAAuBJ,eAAA;EAErD,IAAMK,mBAAA,GAAsBd,KAAA,CAAMe,WAAW,CAAC;IAC5CF,mBAAA,CAAoB;EACtB,GAAG,EAAE;EAEL,IAAMG,aAAA,GAAgBhB,KAAA,CAAMe,WAAW,CACrC,UAACE,CAAA;IACC,IAAIf,UAAA,CAAWe,CAAA,MAAOhB,IAAA,CAAKiB,GAAG,EAAE;MAC9BJ,mBAAA;IACF;EACF,GACA,CAACA,mBAAA,CAAoB;EAGvB,IAAMK,oBAAA,GAAuBnB,KAAA,CAAMe,WAAW,CAAC;IAC7CF,mBAAA,CAAoB;EACtB,GAAG,EAAE;EAEL,IAAMO,YAAA,GAAe;IACnBC,OAAA,EAAS;IACTC,OAAA,EAAS;EACX;EAEAlB,sBAAA,CAAuBI,QAAA,EAAU,WAAWQ,aAAA,EAAeI,YAAA;EAC3DhB,sBAAA,CAAuBI,QAAA,EAAU,aAAaW,oBAAA,EAAsBC,YAAA;EACpEhB,sBAAA,CAAuBI,QAAA,EAAU,cAAcW,oBAAA,EAAsBC,YAAA;EACrEhB,sBAAA,CACEI,QAAA,EACAH,gCAAA,EACAS,mBAAA,EACAM,YAAA;EAEFhB,sBAAA,CACEI,QAAA,EACAF,iCAAA,EACAa,oBAAA,EACAC,YAAA;EAGF,OAAOR,qBAAA;AACT"},"metadata":{},"sourceType":"module"}