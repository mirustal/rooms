{"ast":null,"code":"export const roomManager = (room, updateRoom) => ({\n  createChannel: function (channelName) {\n    const channels = room.channels;\n    const newChannel = {\n      id: channels.length === 0 ? 1 : channels[channels.length - 1].id + 1,\n      name: channelName\n    };\n    room.channels = [...channels, newChannel];\n    updateRoom(room);\n    return room.channels;\n  },\n  renameChannel: function (channels, newNameChannel, channelId) {\n    return channels.map(channel => channel.id === channelId ? { ...channel,\n      name: newNameChannel\n    } : channel);\n  },\n  deleteChannel: function (channels, channelId) {\n    return channels.filter(channel => channel.id !== channelId);\n  },\n  refreshChannel: function (channels, channelId) {\n    return channels.map(channel => channel.id === channelId ? { ...channel,\n      joinlink: null\n    } : channel);\n  }\n});","map":{"version":3,"names":["roomManager","room","updateRoom","createChannel","channelName","channels","newChannel","id","length","name","renameChannel","newNameChannel","channelId","map","channel","deleteChannel","filter","refreshChannel","joinlink"],"sources":["/Users/mirustal/Documents/project/rooms/front/rooms/src/components/views/Channels/utils/channelManager.jsx"],"sourcesContent":["export const roomManager = (room, updateRoom) => ({\n    createChannel: function(channelName) {\n        const channels = room.channels\n    const newChannel = {\n      id: channels.length === 0 ? 1 : channels[channels.length - 1].id + 1,\n      name: channelName\n    };\n    room.channels = [...channels, newChannel]\n    updateRoom(room)\n    return room.channels;\n  },\n  \n  renameChannel: function(channels, newNameChannel, channelId) {\n    return channels.map(channel => \n      channel.id === channelId ? { ...channel, name: newNameChannel } : channel\n    );\n  },\n  \n  deleteChannel: function(channels, channelId) {\n    return channels.filter(channel => channel.id !== channelId);\n  },\n  \n  refreshChannel: function(channels, channelId) {\n    return channels.map(channel => \n      channel.id === channelId ? { ...channel, joinlink: null } : channel\n    );\n    },\n})"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,IAAD,EAAOC,UAAP,MAAuB;EAC9CC,aAAa,EAAE,UAASC,WAAT,EAAsB;IACjC,MAAMC,QAAQ,GAAGJ,IAAI,CAACI,QAAtB;IACJ,MAAMC,UAAU,GAAG;MACjBC,EAAE,EAAEF,QAAQ,CAACG,MAAT,KAAoB,CAApB,GAAwB,CAAxB,GAA4BH,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAR,CAA8BD,EAA9B,GAAmC,CADlD;MAEjBE,IAAI,EAAEL;IAFW,CAAnB;IAIAH,IAAI,CAACI,QAAL,GAAgB,CAAC,GAAGA,QAAJ,EAAcC,UAAd,CAAhB;IACAJ,UAAU,CAACD,IAAD,CAAV;IACA,OAAOA,IAAI,CAACI,QAAZ;EACD,CAV+C;EAYhDK,aAAa,EAAE,UAASL,QAAT,EAAmBM,cAAnB,EAAmCC,SAAnC,EAA8C;IAC3D,OAAOP,QAAQ,CAACQ,GAAT,CAAaC,OAAO,IACzBA,OAAO,CAACP,EAAR,KAAeK,SAAf,GAA2B,EAAE,GAAGE,OAAL;MAAcL,IAAI,EAAEE;IAApB,CAA3B,GAAkEG,OAD7D,CAAP;EAGD,CAhB+C;EAkBhDC,aAAa,EAAE,UAASV,QAAT,EAAmBO,SAAnB,EAA8B;IAC3C,OAAOP,QAAQ,CAACW,MAAT,CAAgBF,OAAO,IAAIA,OAAO,CAACP,EAAR,KAAeK,SAA1C,CAAP;EACD,CApB+C;EAsBhDK,cAAc,EAAE,UAASZ,QAAT,EAAmBO,SAAnB,EAA8B;IAC5C,OAAOP,QAAQ,CAACQ,GAAT,CAAaC,OAAO,IACzBA,OAAO,CAACP,EAAR,KAAeK,SAAf,GAA2B,EAAE,GAAGE,OAAL;MAAcI,QAAQ,EAAE;IAAxB,CAA3B,GAA4DJ,OADvD,CAAP;EAGC;AA1B6C,CAAvB,CAApB"},"metadata":{},"sourceType":"module"}