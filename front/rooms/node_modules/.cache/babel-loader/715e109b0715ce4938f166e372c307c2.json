{"ast":null,"code":"import * as React from \"react\";\nimport { AdaptivityContext } from \"../../components/AdaptivityProvider/AdaptivityContext\";\nimport { usePlatform } from \"../usePlatform\";\nimport { deviceTypeClassNames, sizeXCompactClassNames, sizeXRegularClassNames, sizeYCompactClassNames, sizeYRegularClassNames, viewWidthClassNames } from \"./constants\";\nimport { getAdaptiveDeviceType, getAdaptiveSizeType, getAdaptiveViewWidth } from \"./helpers\";\nexport var useAdaptivityConditionalRender = function () {\n  var _React_useContext = React.useContext(AdaptivityContext),\n    sizeXContext = _React_useContext.sizeX,\n    sizeYContext = _React_useContext.sizeY,\n    viewWidthContext = _React_useContext.viewWidth,\n    viewHeightContext = _React_useContext.viewHeight,\n    hasPointerContext = _React_useContext.hasPointer;\n  var platform = usePlatform();\n  return React.useMemo(function () {\n    var sizeX = getAdaptiveSizeType(sizeXContext, sizeXCompactClassNames, sizeXRegularClassNames);\n    var sizeY = getAdaptiveSizeType(sizeYContext, sizeYCompactClassNames, sizeYRegularClassNames);\n    var viewWidth = getAdaptiveViewWidth(viewWidthContext, viewWidthClassNames);\n    var deviceType = getAdaptiveDeviceType(viewWidthContext, viewHeightContext, hasPointerContext, platform, deviceTypeClassNames);\n    return {\n      sizeX: sizeX,\n      sizeY: sizeY,\n      viewWidth: viewWidth,\n      deviceType: deviceType\n    };\n  }, [sizeXContext, sizeYContext, viewWidthContext, viewHeightContext, hasPointerContext, platform]);\n};","map":{"version":3,"names":["React","AdaptivityContext","usePlatform","deviceTypeClassNames","sizeXCompactClassNames","sizeXRegularClassNames","sizeYCompactClassNames","sizeYRegularClassNames","viewWidthClassNames","getAdaptiveDeviceType","getAdaptiveSizeType","getAdaptiveViewWidth","useAdaptivityConditionalRender","_React_useContext","useContext","sizeXContext","sizeX","sizeYContext","sizeY","viewWidthContext","viewWidth","viewHeightContext","viewHeight","hasPointerContext","hasPointer","platform","useMemo","deviceType"],"sources":["../../../src/hooks/useAdaptivityConditionalRender/useAdaptivityConditionalRender.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AdaptivityContext } from '../../components/AdaptivityProvider/AdaptivityContext';\nimport { usePlatform } from '../usePlatform';\nimport {\n  deviceTypeClassNames,\n  sizeXCompactClassNames,\n  sizeXRegularClassNames,\n  sizeYCompactClassNames,\n  sizeYRegularClassNames,\n  viewWidthClassNames,\n} from './constants';\nimport { getAdaptiveDeviceType, getAdaptiveSizeType, getAdaptiveViewWidth } from './helpers';\nimport type { UseAdaptivityConditionalRender } from './types';\n\nexport const useAdaptivityConditionalRender = (): UseAdaptivityConditionalRender => {\n  const {\n    sizeX: sizeXContext,\n    sizeY: sizeYContext,\n    viewWidth: viewWidthContext,\n    viewHeight: viewHeightContext,\n    hasPointer: hasPointerContext,\n  } = React.useContext(AdaptivityContext);\n  const platform = usePlatform();\n\n  return React.useMemo(() => {\n    const sizeX = getAdaptiveSizeType(sizeXContext, sizeXCompactClassNames, sizeXRegularClassNames);\n    const sizeY = getAdaptiveSizeType(sizeYContext, sizeYCompactClassNames, sizeYRegularClassNames);\n    const viewWidth = getAdaptiveViewWidth(viewWidthContext, viewWidthClassNames);\n    const deviceType = getAdaptiveDeviceType(\n      viewWidthContext,\n      viewHeightContext,\n      hasPointerContext,\n      platform,\n      deviceTypeClassNames,\n    );\n    return {\n      sizeX,\n      sizeY,\n      viewWidth,\n      deviceType,\n    };\n  }, [\n    sizeXContext,\n    sizeYContext,\n    viewWidthContext,\n    viewHeightContext,\n    hasPointerContext,\n    platform,\n  ]);\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,iBAAiB,QAAQ;AAClC,SAASC,WAAW,QAAQ;AAC5B,SACEC,oBAAoB,EACpBC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAmB,QACd;AACP,SAASC,qBAAqB,EAAEC,mBAAmB,EAAEC,oBAAoB,QAAQ;AAGjF,OAAO,IAAMC,8BAAA,GAAiC,SAAAA,CAAA;EAC5C,IAMIC,iBAAA,GAAAb,KAAA,CAAMc,UAAU,CAACb,iBAAA;IALnBc,YAAO,GAKLF,iBAAA,CALFG,KAAA;IACAC,YAAO,GAILJ,iBAAA,CAJFK,KAAA;IACAC,gBAAW,GAGTN,iBAAA,CAHFO,SAAA;IACAC,iBAAY,GAEVR,iBAAA,CAFFS,UAAA;IACAC,iBAAY,GACVV,iBAAA,CADFW,UAAA;EAEF,IAAMC,QAAA,GAAWvB,WAAA;EAEjB,OAAOF,KAAA,CAAM0B,OAAO,CAAC;IACnB,IAAMV,KAAA,GAAQN,mBAAA,CAAoBK,YAAA,EAAcX,sBAAA,EAAwBC,sBAAA;IACxE,IAAMa,KAAA,GAAQR,mBAAA,CAAoBO,YAAA,EAAcX,sBAAA,EAAwBC,sBAAA;IACxE,IAAMa,SAAA,GAAYT,oBAAA,CAAqBQ,gBAAA,EAAkBX,mBAAA;IACzD,IAAMmB,UAAA,GAAalB,qBAAA,CACjBU,gBAAA,EACAE,iBAAA,EACAE,iBAAA,EACAE,QAAA,EACAtB,oBAAA;IAEF,OAAO;MACLa,KAAA,EAAAA,KAAA;MACAE,KAAA,EAAAA,KAAA;MACAE,SAAA,EAAAA,SAAA;MACAO,UAAA,EAAAA;IACF;EACF,GAAG,CACDZ,YAAA,EACAE,YAAA,EACAE,gBAAA,EACAE,iBAAA,EACAE,iBAAA,EACAE,QAAA,CACD;AACH"},"metadata":{},"sourceType":"module"}