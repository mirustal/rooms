{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivityHasPointer } from \"../../hooks/useAdaptivityHasPointer\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { ScrollArrow } from \"../ScrollArrow/ScrollArrow\";\nimport { Touch } from \"../Touch/Touch\";\nimport { calcMax, calcMin } from \"./helpers\";\nvar ANIMATION_DURATION = 0.24;\nvar LAYOUT_DEFAULT_STATE = {\n  containerWidth: 0,\n  viewportOffsetWidth: 0,\n  layerWidth: 0,\n  min: 0,\n  max: 0,\n  slides: [],\n  isFullyVisible: true\n};\nvar SHIFT_DEFAULT_STATE = {\n  animation: undefined,\n  shiftX: 0,\n  dragging: false,\n  deltaX: 0,\n  indent: 0\n};\nvar stylesBullets = {\n  dark: \"vkuiBaseGallery__bullets--dark\",\n  light: \"vkuiBaseGallery__bullets--light\"\n};\nexport var BaseGallery = function (_param) {\n  var _param_bullets = _param.bullets,\n    bullets = _param_bullets === void 0 ? false : _param_bullets,\n    getRootRef = _param.getRootRef,\n    children = _param.children,\n    _param_slideWidth = _param.slideWidth,\n    slideWidth = _param_slideWidth === void 0 ? \"100%\" : _param_slideWidth,\n    _param_slideIndex = _param.slideIndex,\n    slideIndex = _param_slideIndex === void 0 ? 0 : _param_slideIndex,\n    tmp = _param.isDraggable,\n    isDraggableProp = tmp === void 0 ? true : tmp,\n    onDragStart = _param.onDragStart,\n    onDragEnd = _param.onDragEnd,\n    onChange = _param.onChange,\n    onPrevClick = _param.onPrevClick,\n    onNextClick = _param.onNextClick,\n    _param_align = _param.align,\n    align = _param_align === void 0 ? \"left\" : _param_align,\n    showArrows = _param.showArrows,\n    getRef = _param.getRef,\n    _param_arrowSize = _param.arrowSize,\n    arrowSize = _param_arrowSize === void 0 ? \"l\" : _param_arrowSize,\n    restProps = _object_without_properties(_param, [\"bullets\", \"getRootRef\", \"children\", \"slideWidth\", \"slideIndex\", \"isDraggable\", \"onDragStart\", \"onDragEnd\", \"onChange\", \"onPrevClick\", \"onNextClick\", \"align\", \"showArrows\", \"getRef\", \"arrowSize\"]);\n  var slidesStore = React.useRef({});\n  var layoutState = React.useRef(LAYOUT_DEFAULT_STATE);\n  var _React_useState = _sliced_to_array(React.useState(SHIFT_DEFAULT_STATE), 2),\n    shiftState = _React_useState[0],\n    setShiftState = _React_useState[1];\n  var rootRef = useExternRef(getRootRef);\n  var viewportRef = useExternRef(getRef);\n  var window = useDOM().window;\n  var hasPointer = useAdaptivityHasPointer();\n  var isCenterWithCustomWidth = slideWidth === \"custom\" && align === \"center\";\n  var validateIndent = function (value) {\n    var _layoutState_current_max;\n    var localMax = (_layoutState_current_max = layoutState.current.max) !== null && _layoutState_current_max !== void 0 ? _layoutState_current_max : 0;\n    var _layoutState_current_min;\n    var localMin = (_layoutState_current_min = layoutState.current.min) !== null && _layoutState_current_min !== void 0 ? _layoutState_current_min : 0;\n    if (value < localMin) {\n      return localMin;\n    } else if (value > localMax) {\n      return localMax;\n    }\n    return value;\n  };\n  /*\n  * Считает отступ слоя галереи\n  */\n  var calculateIndent = function (targetIndex) {\n    var _layoutState_current_slides;\n    if (layoutState.current.isFullyVisible) {\n      return 0;\n    }\n    var targetSlide = ((_layoutState_current_slides = layoutState.current.slides) === null || _layoutState_current_slides === void 0 ? void 0 : _layoutState_current_slides.length) ? layoutState.current.slides[targetIndex] : null;\n    if (targetSlide) {\n      var coordX = targetSlide.coordX,\n        width = targetSlide.width;\n      if (isCenterWithCustomWidth) {\n        var _layoutState_current_viewportOffsetWidth;\n        var viewportWidth = (_layoutState_current_viewportOffsetWidth = layoutState.current.viewportOffsetWidth) !== null && _layoutState_current_viewportOffsetWidth !== void 0 ? _layoutState_current_viewportOffsetWidth : 0;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n      return validateIndent(-1 * coordX);\n    }\n    return 0;\n  };\n  /*\n  * Считает отступ слоя галереи во время драга\n  */\n  var calculateDragIndent = function () {\n    var _layoutState_current_max;\n    var localMax = (_layoutState_current_max = layoutState.current.max) !== null && _layoutState_current_max !== void 0 ? _layoutState_current_max : 0;\n    var _layoutState_current_min;\n    var localMin = (_layoutState_current_min = layoutState.current.min) !== null && _layoutState_current_min !== void 0 ? _layoutState_current_min : 0;\n    var indent = shiftState.shiftX + shiftState.deltaX;\n    if (indent > localMax) {\n      return localMax + Number((indent - localMax) / 3);\n    } else if (indent < localMin) {\n      return localMin + Number((indent - localMin) / 3);\n    }\n    return indent;\n  };\n  var initializeSlides = function () {\n    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    var _rootRef_current, _viewportRef_current, _layoutState_current_slides_slideIndex, _localSlides_slideIndex;\n    var _React_Children_map;\n    var localSlides = (_React_Children_map = React.Children.map(children, function (_item, i) {\n      var elem = slidesStore.current[\"slide-\".concat(i)];\n      var _elem_offsetLeft, _elem_offsetWidth;\n      return {\n        coordX: (_elem_offsetLeft = elem === null || elem === void 0 ? void 0 : elem.offsetLeft) !== null && _elem_offsetLeft !== void 0 ? _elem_offsetLeft : 0,\n        width: (_elem_offsetWidth = elem === null || elem === void 0 ? void 0 : elem.offsetWidth) !== null && _elem_offsetWidth !== void 0 ? _elem_offsetWidth : 0\n      };\n    })) !== null && _React_Children_map !== void 0 ? _React_Children_map : [];\n    var _rootRef_current_offsetWidth;\n    var localContainerWidth = (_rootRef_current_offsetWidth = (_rootRef_current = rootRef.current) === null || _rootRef_current === void 0 ? void 0 : _rootRef_current.offsetWidth) !== null && _rootRef_current_offsetWidth !== void 0 ? _rootRef_current_offsetWidth : 0;\n    var _viewportRef_current_offsetWidth;\n    var localViewportOffsetWidth = (_viewportRef_current_offsetWidth = (_viewportRef_current = viewportRef.current) === null || _viewportRef_current === void 0 ? void 0 : _viewportRef_current.offsetWidth) !== null && _viewportRef_current_offsetWidth !== void 0 ? _viewportRef_current_offsetWidth : 0;\n    var localLayerWidth = localSlides.reduce(function (val, slide) {\n      return slide.width + val;\n    }, 0);\n    var adjustShiftX = localSlides.length <= layoutState.current.slides.length || ((_layoutState_current_slides_slideIndex = layoutState.current.slides[slideIndex]) === null || _layoutState_current_slides_slideIndex === void 0 ? void 0 : _layoutState_current_slides_slideIndex.coordX) !== ((_localSlides_slideIndex = localSlides[slideIndex]) === null || _localSlides_slideIndex === void 0 ? void 0 : _localSlides_slideIndex.coordX);\n    layoutState.current = {\n      containerWidth: localContainerWidth,\n      viewportOffsetWidth: localViewportOffsetWidth,\n      layerWidth: localLayerWidth,\n      max: calcMax({\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth: isCenterWithCustomWidth\n      }),\n      min: calcMin({\n        containerWidth: localContainerWidth,\n        layerWidth: localLayerWidth,\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth: isCenterWithCustomWidth,\n        align: align\n      }),\n      slides: localSlides,\n      isFullyVisible: localLayerWidth <= localContainerWidth\n    };\n    setShiftState(function (prevState) {\n      var _options_animation;\n      return _object_spread_props(_object_spread({}, prevState), {\n        shiftX: adjustShiftX ? calculateIndent(slideIndex) : prevState.shiftX,\n        animation: (_options_animation = options.animation) !== null && _options_animation !== void 0 ? _options_animation : prevState.shiftX === validateIndent(prevState.shiftX)\n      });\n    });\n  };\n  var onResize = function () {\n    if (shiftState.animation !== undefined) {\n      initializeSlides({\n        animation: false\n      });\n    }\n  };\n  useGlobalEventListener(window, \"resize\", onResize);\n  useIsomorphicLayoutEffect(function () {\n    initializeSlides({\n      animation: false\n    });\n  }, [children, align, slideWidth]);\n  useIsomorphicLayoutEffect(function () {\n    if (shiftState.animation !== undefined) {\n      setShiftState(function (prevState) {\n        return _object_spread_props(_object_spread({}, prevState), {\n          animation: true,\n          deltaX: 0,\n          shiftX: calculateIndent(slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0)\n        });\n      });\n    }\n  }, [slideIndex]);\n  var slideLeft = function (event) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex - 1);\n    onPrevClick === null || onPrevClick === void 0 ? void 0 : onPrevClick(event);\n  };\n  var slideRight = function (event) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex + 1);\n    onNextClick === null || onNextClick === void 0 ? void 0 : onNextClick(event);\n  };\n  /*\n  * Получает индекс слайда, к которому будет осуществлен переход\n  */\n  var getTarget = function (e) {\n    var expectDeltaX = shiftState.deltaX / e.duration * 240 * 0.6;\n    var _layoutState_current_max;\n    var shift = shiftState.shiftX + shiftState.deltaX + expectDeltaX - ((_layoutState_current_max = layoutState.current.max) !== null && _layoutState_current_max !== void 0 ? _layoutState_current_max : 0);\n    var direction = shiftState.deltaX < 0 ? 1 : -1;\n    // Находим ближайшую границу слайда к текущему отступу\n    var targetIndex = layoutState.current.slides.reduce(function (val, item, index) {\n      var previousValue = Math.abs(layoutState.current.slides[val].coordX + shift);\n      var currentValue = Math.abs(item.coordX + shift);\n      return previousValue < currentValue ? val : index;\n    }, slideIndex);\n    if (targetIndex === slideIndex) {\n      var targetSlide = slideIndex + direction;\n      if (targetSlide >= 0 && targetSlide < layoutState.current.slides.length) {\n        if (Math.abs(shiftState.deltaX) > layoutState.current.slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n    return targetIndex;\n  };\n  var onStart = function (e) {\n    e.originalEvent.stopPropagation();\n    onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(e);\n    setShiftState(function (prevState) {\n      return _object_spread_props(_object_spread({}, prevState), {\n        animation: false\n      });\n    });\n  };\n  var onMoveX = function (e) {\n    if (isDraggableProp && !layoutState.current.isFullyVisible) {\n      e.originalEvent.preventDefault();\n      if (e.isSlideX) {\n        if (shiftState.deltaX !== e.shiftX) {\n          setShiftState(function (prevState) {\n            return _object_spread_props(_object_spread({}, prevState), {\n              deltaX: e.shiftX,\n              dragging: e.isSlideX\n            });\n          });\n        }\n      }\n    }\n  };\n  var onEnd = function (e) {\n    var targetIndex = e.isSlide ? getTarget(e) : slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0;\n    onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(e, targetIndex);\n    var nextShiftState = {\n      animation: true,\n      dragging: false,\n      deltaX: 0\n    };\n    var shiftXStick = calculateDragIndent();\n    if (targetIndex !== slideIndex) {\n      // Сохраняем сдвиг слайда в том положении, в каком его оставили после драга (fix issue #2185)\n      nextShiftState.shiftX = shiftXStick;\n    }\n    setShiftState(function (prevState) {\n      return _object_spread({}, prevState, nextShiftState);\n    });\n    if (targetIndex !== slideIndex) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(targetIndex);\n    }\n  };\n  var indent = shiftState.dragging ? calculateDragIndent() : shiftState.shiftX;\n  var layerStyle = {\n    WebkitTransform: \"translateX(\".concat(indent, \"px)\"),\n    transform: \"translateX(\".concat(indent, \"px)\"),\n    WebkitTransition: shiftState.animation ? \"-webkit-transform \".concat(ANIMATION_DURATION, \"s cubic-bezier(.1, 0, .25, 1)\") : \"none\",\n    transition: shiftState.animation ? \"transform \".concat(ANIMATION_DURATION, \"s cubic-bezier(.1, 0, .25, 1)\") : \"none\"\n  };\n  var setSlideRef = function (slideRef, slideIndex) {\n    slidesStore.current[\"slide-\".concat(slideIndex)] = slideRef;\n  };\n  // shiftX is negative number <= 0, we can swipe back only if it is < 0\n  var canSlideLeft = !layoutState.current.isFullyVisible && shiftState.shiftX < 0;\n  var _layoutState_current_layerWidth;\n  var canSlideRight = !layoutState.current.isFullyVisible && (\n  // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n  align === \"left\" && layoutState.current.containerWidth - shiftState.shiftX < ((_layoutState_current_layerWidth = layoutState.current.layerWidth) !== null && _layoutState_current_layerWidth !== void 0 ? _layoutState_current_layerWidth : 0) ||\n  // otherwise we need to check current slide index (align = right or align = center)\n  align !== \"left\" && slideIndex < layoutState.current.slides.length - 1);\n  var isDraggable = isDraggableProp && !layoutState.current.isFullyVisible;\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiBaseGallery\", align === \"center\" && \"vkuiBaseGallery--align-center\", slideWidth === \"custom\" && \"vkuiBaseGallery--custom-width\", isDraggable && \"vkuiBaseGallery--draggable\"),\n    getRootRef: rootRef\n  }), /*#__PURE__*/React.createElement(Touch, {\n    className: \"vkuiBaseGallery__viewport\",\n    onStartX: onStart,\n    onMoveX: onMoveX,\n    onEnd: onEnd,\n    style: {\n      width: slideWidth === \"custom\" ? \"100%\" : slideWidth\n    },\n    getRootRef: viewportRef,\n    noSlideClick: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiBaseGallery__layer\",\n    style: layerStyle\n  }, React.Children.map(children, function (item, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiBaseGallery__slide\",\n      key: \"slide-\".concat(i),\n      ref: function (el) {\n        return setSlideRef(el, i);\n      }\n    }, item);\n  }))), bullets && /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: classNames(\"vkuiBaseGallery__bullets\", stylesBullets[bullets])\n  }, React.Children.map(children, function (_item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"vkuiBaseGallery__bullet\", index === slideIndex && \"vkuiBaseGallery__bullet--active\"),\n      key: index\n    });\n  })), showArrows && hasPointer && canSlideLeft && /*#__PURE__*/React.createElement(ScrollArrow, {\n    className: \"vkuiBaseGallery__arrow\",\n    direction: \"left\",\n    onClick: slideLeft,\n    size: arrowSize\n  }), showArrows && hasPointer && canSlideRight && /*#__PURE__*/React.createElement(ScrollArrow, {\n    className: \"vkuiBaseGallery__arrow\",\n    direction: \"right\",\n    onClick: slideRight,\n    size: arrowSize\n  }));\n};","map":{"version":3,"names":["React","classNames","useAdaptivityHasPointer","useExternRef","useGlobalEventListener","useDOM","useIsomorphicLayoutEffect","RootComponent","ScrollArrow","Touch","calcMax","calcMin","ANIMATION_DURATION","LAYOUT_DEFAULT_STATE","containerWidth","viewportOffsetWidth","layerWidth","min","max","slides","isFullyVisible","SHIFT_DEFAULT_STATE","animation","undefined","shiftX","dragging","deltaX","indent","stylesBullets","dark","light","BaseGallery","_param","bullets","_param_bullets","getRootRef","children","_param_slideWidth","slideWidth","_param_slideIndex","slideIndex","tmp","isDraggable","isDraggableProp","onDragStart","onDragEnd","onChange","onPrevClick","onNextClick","_param_align","align","showArrows","getRef","_param_arrowSize","arrowSize","restProps","_object_without_properties","slidesStore","useRef","layoutState","_React_useState","_sliced_to_array","useState","shiftState","setShiftState","rootRef","viewportRef","window","hasPointer","isCenterWithCustomWidth","validateIndent","value","_layoutState_current_max","localMax","current","_layoutState_current_min","localMin","calculateIndent","targetIndex","_layoutState_current_slides","targetSlide","length","coordX","width","_layoutState_current_viewportOffsetWidth","viewportWidth","calculateDragIndent","Number","initializeSlides","options","arguments","_rootRef_current","_viewportRef_current","_layoutState_current_slides_slideIndex","_localSlides_slideIndex","_React_Children_map","localSlides","Children","map","_item","i","elem","concat","_elem_offsetLeft","_elem_offsetWidth","offsetLeft","offsetWidth","_rootRef_current_offsetWidth","localContainerWidth","_viewportRef_current_offsetWidth","localViewportOffsetWidth","localLayerWidth","reduce","val","slide","adjustShiftX","prevState","_options_animation","_object_spread_props","_object_spread","onResize","slideLeft","event","slideRight","getTarget","e","expectDeltaX","duration","shift","direction","item","index","previousValue","Math","abs","currentValue","onStart","originalEvent","stopPropagation","onMoveX","preventDefault","isSlideX","onEnd","isSlide","nextShiftState","shiftXStick","layerStyle","WebkitTransform","transform","WebkitTransition","transition","setSlideRef","slideRef","canSlideLeft","_layoutState_current_layerWidth","canSlideRight","createElement","baseClassName","className","onStartX","style","noSlideClick","key","ref","el","onClick","size"],"sources":["../../../src/components/BaseGallery/BaseGallery.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { ScrollArrow } from '../ScrollArrow/ScrollArrow';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { calcMax, calcMin } from './helpers';\nimport { BaseGalleryProps, GallerySlidesState, LayoutState, ShiftingState } from './types';\nimport styles from './BaseGallery.module.css';\n\nconst ANIMATION_DURATION = 0.24;\n\nconst LAYOUT_DEFAULT_STATE = {\n  containerWidth: 0,\n  viewportOffsetWidth: 0,\n  layerWidth: 0,\n  min: 0,\n  max: 0,\n  slides: [],\n  isFullyVisible: true,\n};\n\nconst SHIFT_DEFAULT_STATE = {\n  animation: undefined,\n  shiftX: 0,\n  dragging: false,\n  deltaX: 0,\n  indent: 0,\n};\n\nconst stylesBullets = {\n  dark: styles['BaseGallery__bullets--dark'],\n  light: styles['BaseGallery__bullets--light'],\n};\nexport const BaseGallery = ({\n  bullets = false,\n  getRootRef,\n  children,\n  slideWidth = '100%',\n  slideIndex = 0,\n  isDraggable: isDraggableProp = true,\n  onDragStart,\n  onDragEnd,\n  onChange,\n  onPrevClick,\n  onNextClick,\n  align = 'left',\n  showArrows,\n  getRef,\n  arrowSize = 'l',\n  ...restProps\n}: BaseGalleryProps) => {\n  const slidesStore = React.useRef<Record<string, HTMLDivElement | null>>({});\n  const layoutState = React.useRef<LayoutState>(LAYOUT_DEFAULT_STATE);\n  const [shiftState, setShiftState] = React.useState<ShiftingState>(SHIFT_DEFAULT_STATE);\n\n  const rootRef = useExternRef(getRootRef);\n  const viewportRef = useExternRef(getRef);\n\n  const { window } = useDOM();\n  const hasPointer = useAdaptivityHasPointer();\n\n  const isCenterWithCustomWidth = slideWidth === 'custom' && align === 'center';\n\n  const validateIndent = (value: number) => {\n    const localMax = layoutState.current.max ?? 0;\n    const localMin = layoutState.current.min ?? 0;\n\n    if (value < localMin) {\n      return localMin;\n    } else if (value > localMax) {\n      return localMax;\n    }\n\n    return value;\n  };\n\n  /*\n   * Считает отступ слоя галереи\n   */\n  const calculateIndent = (targetIndex: number) => {\n    if (layoutState.current.isFullyVisible) {\n      return 0;\n    }\n\n    const targetSlide = layoutState.current.slides?.length\n      ? layoutState.current.slides[targetIndex]\n      : null;\n\n    if (targetSlide) {\n      const { coordX, width } = targetSlide;\n\n      if (isCenterWithCustomWidth) {\n        const viewportWidth = layoutState.current.viewportOffsetWidth ?? 0;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n\n      return validateIndent(-1 * coordX);\n    }\n\n    return 0;\n  };\n\n  /*\n   * Считает отступ слоя галереи во время драга\n   */\n  const calculateDragIndent = () => {\n    const localMax = layoutState.current.max ?? 0;\n    const localMin = layoutState.current.min ?? 0;\n    const indent = shiftState.shiftX + shiftState.deltaX;\n\n    if (indent > localMax) {\n      return localMax + Number((indent - localMax) / 3);\n    } else if (indent < localMin) {\n      return localMin + Number((indent - localMin) / 3);\n    }\n\n    return indent;\n  };\n\n  const initializeSlides = (options: { animation?: boolean } = {}) => {\n    const localSlides =\n      React.Children.map(children, (_item: React.ReactNode, i: number): GallerySlidesState => {\n        const elem = slidesStore.current[`slide-${i}`];\n        return {\n          coordX: elem?.offsetLeft ?? 0,\n          width: elem?.offsetWidth ?? 0,\n        };\n      }) ?? [];\n\n    const localContainerWidth = rootRef.current?.offsetWidth ?? 0;\n    const localViewportOffsetWidth = viewportRef.current?.offsetWidth ?? 0;\n    const localLayerWidth = localSlides.reduce(\n      (val: number, slide: GallerySlidesState) => slide.width + val,\n      0,\n    );\n    const adjustShiftX =\n      localSlides.length <= layoutState.current.slides.length ||\n      layoutState.current.slides[slideIndex]?.coordX !== localSlides[slideIndex]?.coordX;\n\n    layoutState.current = {\n      containerWidth: localContainerWidth,\n      viewportOffsetWidth: localViewportOffsetWidth,\n      layerWidth: localLayerWidth,\n      max: calcMax({\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth,\n      }),\n      min: calcMin({\n        containerWidth: localContainerWidth,\n        layerWidth: localLayerWidth,\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth,\n        align,\n      }),\n      slides: localSlides,\n      isFullyVisible: localLayerWidth <= localContainerWidth,\n    };\n\n    setShiftState((prevState) => ({\n      ...prevState,\n      shiftX: adjustShiftX ? calculateIndent(slideIndex) : prevState.shiftX,\n      animation: options.animation ?? prevState.shiftX === validateIndent(prevState.shiftX),\n    }));\n  };\n\n  const onResize = () => {\n    if (shiftState.animation !== undefined) {\n      initializeSlides({ animation: false });\n    }\n  };\n\n  useGlobalEventListener(window, 'resize', onResize);\n\n  useIsomorphicLayoutEffect(() => {\n    initializeSlides({ animation: false });\n  }, [children, align, slideWidth]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (shiftState.animation !== undefined) {\n      setShiftState((prevState) => ({\n        ...prevState,\n        animation: true,\n        deltaX: 0,\n        shiftX: calculateIndent(slideIndex ?? 0),\n      }));\n    }\n  }, [slideIndex]);\n\n  const slideLeft = (event: React.MouseEvent) => {\n    onChange?.(slideIndex - 1);\n    onPrevClick?.(event);\n  };\n\n  const slideRight = (event: React.MouseEvent) => {\n    onChange?.(slideIndex + 1);\n    onNextClick?.(event);\n  };\n\n  /*\n   * Получает индекс слайда, к которому будет осуществлен переход\n   */\n  const getTarget = (e: TouchEvent) => {\n    const expectDeltaX = (shiftState.deltaX / e.duration) * 240 * 0.6;\n    const shift =\n      shiftState.shiftX + shiftState.deltaX + expectDeltaX - (layoutState.current.max ?? 0);\n    const direction = shiftState.deltaX < 0 ? 1 : -1;\n\n    // Находим ближайшую границу слайда к текущему отступу\n    let targetIndex = layoutState.current.slides.reduce(\n      (val: number, item: GallerySlidesState, index: number) => {\n        const previousValue = Math.abs(layoutState.current.slides[val].coordX + shift);\n        const currentValue = Math.abs(item.coordX + shift);\n\n        return previousValue < currentValue ? val : index;\n      },\n      slideIndex,\n    );\n\n    if (targetIndex === slideIndex) {\n      let targetSlide = slideIndex + direction;\n\n      if (targetSlide >= 0 && targetSlide < layoutState.current.slides.length) {\n        if (Math.abs(shiftState.deltaX) > layoutState.current.slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  };\n\n  const onStart = (e: TouchEvent) => {\n    e.originalEvent.stopPropagation();\n    onDragStart?.(e);\n    setShiftState((prevState) => ({ ...prevState, animation: false }));\n  };\n\n  const onMoveX = (e: TouchEvent) => {\n    if (isDraggableProp && !layoutState.current.isFullyVisible) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        if (shiftState.deltaX !== e.shiftX) {\n          setShiftState((prevState) => ({\n            ...prevState,\n            deltaX: e.shiftX,\n            dragging: e.isSlideX,\n          }));\n        }\n      }\n    }\n  };\n\n  const onEnd = (e: TouchEvent) => {\n    const targetIndex = e.isSlide ? getTarget(e) : slideIndex ?? 0;\n    onDragEnd?.(e, targetIndex);\n\n    const nextShiftState: Partial<ShiftingState> = {\n      animation: true,\n      dragging: false,\n      deltaX: 0,\n    };\n\n    const shiftXStick = calculateDragIndent();\n    if (targetIndex !== slideIndex) {\n      // Сохраняем сдвиг слайда в том положении, в каком его оставили после драга (fix issue #2185)\n      nextShiftState.shiftX = shiftXStick;\n    }\n\n    setShiftState((prevState) => ({ ...prevState, ...nextShiftState }));\n    if (targetIndex !== slideIndex) {\n      onChange?.(targetIndex);\n    }\n  };\n\n  const indent = shiftState.dragging ? calculateDragIndent() : shiftState.shiftX;\n\n  const layerStyle = {\n    WebkitTransform: `translateX(${indent}px)`,\n    transform: `translateX(${indent}px)`,\n    WebkitTransition: shiftState.animation\n      ? `-webkit-transform ${ANIMATION_DURATION}s cubic-bezier(.1, 0, .25, 1)`\n      : 'none',\n    transition: shiftState.animation\n      ? `transform ${ANIMATION_DURATION}s cubic-bezier(.1, 0, .25, 1)`\n      : 'none',\n  };\n\n  const setSlideRef = (slideRef: HTMLDivElement | null, slideIndex: number) => {\n    slidesStore.current[`slide-${slideIndex}`] = slideRef;\n  };\n\n  // shiftX is negative number <= 0, we can swipe back only if it is < 0\n  const canSlideLeft = !layoutState.current.isFullyVisible && shiftState.shiftX < 0;\n\n  const canSlideRight =\n    !layoutState.current.isFullyVisible &&\n    // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n    ((align === 'left' &&\n      layoutState.current.containerWidth - shiftState.shiftX <\n        (layoutState.current.layerWidth ?? 0)) ||\n      // otherwise we need to check current slide index (align = right or align = center)\n      (align !== 'left' && slideIndex < layoutState.current.slides.length - 1));\n\n  const isDraggable = isDraggableProp && !layoutState.current.isFullyVisible;\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles['BaseGallery'],\n        align === 'center' && styles['BaseGallery--align-center'],\n        slideWidth === 'custom' && styles['BaseGallery--custom-width'],\n        isDraggable && styles['BaseGallery--draggable'],\n      )}\n      getRootRef={rootRef}\n    >\n      <Touch\n        className={styles['BaseGallery__viewport']}\n        onStartX={onStart}\n        onMoveX={onMoveX}\n        onEnd={onEnd}\n        style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n        getRootRef={viewportRef}\n        noSlideClick\n      >\n        <div className={styles['BaseGallery__layer']} style={layerStyle}>\n          {React.Children.map(children, (item: React.ReactNode, i: number) => (\n            <div\n              className={styles['BaseGallery__slide']}\n              key={`slide-${i}`}\n              ref={(el) => setSlideRef(el, i)}\n            >\n              {item}\n            </div>\n          ))}\n        </div>\n      </Touch>\n\n      {bullets && (\n        <div\n          aria-hidden\n          className={classNames(styles['BaseGallery__bullets'], stylesBullets[bullets])}\n        >\n          {React.Children.map(children, (_item: React.ReactNode, index: number) => (\n            <div\n              className={classNames(\n                styles['BaseGallery__bullet'],\n                index === slideIndex && styles['BaseGallery__bullet--active'],\n              )}\n              key={index}\n            />\n          ))}\n        </div>\n      )}\n\n      {showArrows && hasPointer && canSlideLeft && (\n        <ScrollArrow\n          className={styles['BaseGallery__arrow']}\n          direction=\"left\"\n          onClick={slideLeft}\n          size={arrowSize}\n        />\n      )}\n      {showArrows && hasPointer && canSlideRight && (\n        <ScrollArrow\n          className={styles['BaseGallery__arrow']}\n          direction=\"right\"\n          onClick={slideRight}\n          size={arrowSize}\n        />\n      )}\n    </RootComponent>\n  );\n};\n"],"mappings":";;;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,uBAAuB,QAAQ;AACxC,SAASC,YAAY,QAAQ;AAC7B,SAASC,sBAAsB,QAAQ;AACvC,SAASC,MAAM,QAAQ;AACvB,SAASC,yBAAyB,QAAQ;AAC1C,SAASC,aAAa,QAAQ;AAC9B,SAASC,WAAW,QAAQ;AAC5B,SAASC,KAAK,QAAoB;AAClC,SAASC,OAAO,EAAEC,OAAO,QAAQ;AAIjC,IAAMC,kBAAA,GAAqB;AAE3B,IAAMC,oBAAA,GAAuB;EAC3BC,cAAA,EAAgB;EAChBC,mBAAA,EAAqB;EACrBC,UAAA,EAAY;EACZC,GAAA,EAAK;EACLC,GAAA,EAAK;EACLC,MAAA,EAAQ,EAAE;EACVC,cAAA,EAAgB;AAClB;AAEA,IAAMC,mBAAA,GAAsB;EAC1BC,SAAA,EAAWC,SAAA;EACXC,MAAA,EAAQ;EACRC,QAAA,EAAU;EACVC,MAAA,EAAQ;EACRC,MAAA,EAAQ;AACV;AAEA,IAAMC,aAAA,GAAgB;EACpBC,IAAI;EACJC,KAAK;AACP;AACA,OAAO,IAAMC,WAAA,GAAc,SAAAA,CAAAC,MAAA;8BACzBC,OAAA;IAAAA,OAAA,GAAAC,cAAA,cAAU,QAAAA,cAAA;IACVC,UAAA,GAAAH,MAAA,CAAAG,UAAA;IACAC,QAAA,GAAAJ,MAAA,CAAAI,QAAA;IAAAC,iBAAA,GAAAL,MAAA,CACAM,UAAA;IAAAA,UAAA,GAAAD,iBAAA,cAAa,SAAAA,iBAAA;IAAAE,iBAAA,GAAAP,MAAA,CACbQ,UAAA;IAAAA,UAAA,GAAAD,iBAAA,cAAa,IAAAA,iBAAA;IACAE,GAAA,GAAAT,MAAA,CAAbU,WAAA;IAAaC,eAAA,GAAAF,GAAA,cAAkB,OAAlBA,GAAA;IACbG,WAAA,GAAAZ,MAAA,CAAAY,WAAA;IACAC,SAAA,GAAAb,MAAA,CAAAa,SAAA;IACAC,QAAA,GAAAd,MAAA,CAAAc,QAAA;IACAC,WAAA,GAAAf,MAAA,CAAAe,WAAA;IACAC,WAAA,GAAAhB,MAAA,CAAAgB,WAAA;IAAAC,YAAA,GAAAjB,MAAA,CACAkB,KAAA;IAAAA,KAAA,GAAAD,YAAA,cAAQ,SAAAA,YAAA;IACRE,UAAA,GAAAnB,MAAA,CAAAmB,UAAA;IACAC,MAAA,GAAApB,MAAA,CAAAoB,MAAA;IAAAC,gBAAA,GAAArB,MAAA,CACAsB,SAAA;IAAAA,SAAA,GAAAD,gBAAA,cAAY,MAAAA,gBAAA;IACTE,SAAA,GAAAC,0BAAA,CAAAxB,MAAA,GAfH,WACA,cACA,YACA,cACA,cACA,eACA,eACA,aACA,YACA,eACA,eACA,SACA,cACA,UACA,Y;EAGA,IAAMyB,WAAA,GAAczD,KAAA,CAAM0D,MAAM,CAAwC,CAAC;EACzE,IAAMC,WAAA,GAAc3D,KAAA,CAAM0D,MAAM,CAAc7C,oBAAA;EAC9C,IAAoC+C,eAAA,GAAAC,gBAAA,CAAA7D,KAAA,CAAM8D,QAAQ,CAAgBzC,mBAAA;IAA3D0C,UAAA,GAA6BH,eAAA;IAAjBI,aAAA,GAAiBJ,eAAA;EAEpC,IAAMK,OAAA,GAAU9D,YAAA,CAAagC,UAAA;EAC7B,IAAM+B,WAAA,GAAc/D,YAAA,CAAaiD,MAAA;EAEjC,IAAMe,MAAE,GAAW9D,MAAA,GAAX8D,MAAA;EACR,IAAMC,UAAA,GAAalE,uBAAA;EAEnB,IAAMmE,uBAAA,GAA0B/B,UAAA,KAAe,YAAYY,KAAA,KAAU;EAErE,IAAMoB,cAAA,GAAiB,SAAAA,CAACC,KAAA;QACLC,wBAAA;IAAjB,IAAMC,QAAA,GAAW,CAAAD,wBAAA,GAAAb,WAAA,CAAYe,OAAO,CAACxD,GAAG,cAAvBsD,wBAAA,cAAAA,wBAAA,GAA2B;QAC3BG,wBAAA;IAAjB,IAAMC,QAAA,GAAW,CAAAD,wBAAA,GAAAhB,WAAA,CAAYe,OAAO,CAACzD,GAAG,cAAvB0D,wBAAA,cAAAA,wBAAA,GAA2B;IAE5C,IAAIJ,KAAA,GAAQK,QAAA,EAAU;MACpB,OAAOA,QAAA;IACT,OAAO,IAAIL,KAAA,GAAQE,QAAA,EAAU;MAC3B,OAAOA,QAAA;IACT;IAEA,OAAOF,KAAA;EACT;EAEA;;;EAGA,IAAMM,eAAA,GAAkB,SAAAA,CAACC,WAAA;QAKHC,2BAAA;IAJpB,IAAIpB,WAAA,CAAYe,OAAO,CAACtD,cAAc,EAAE;MACtC,OAAO;IACT;IAEA,IAAM4D,WAAA,GAAc,EAAAD,2BAAA,GAAApB,WAAA,CAAYe,OAAO,CAACvD,MAAM,cAA1B4D,2BAAA,uBAAAA,2BAAA,CAA4BE,MAAM,IAClDtB,WAAA,CAAYe,OAAO,CAACvD,MAAM,CAAC2D,WAAA,CAAY,GACvC;IAEJ,IAAIE,WAAA,EAAa;MACf,IAAQE,MAAA,GAAkBF,WAAA,CAAlBE,MAAA;QAAQC,KAAA,GAAUH,WAAA,CAAVG,KAAA;MAEhB,IAAId,uBAAA,EAAyB;YACLe,wCAAA;QAAtB,IAAMC,aAAA,GAAgB,CAAAD,wCAAA,GAAAzB,WAAA,CAAYe,OAAO,CAAC3D,mBAAmB,cAAvCqE,wCAAA,cAAAA,wCAAA,GAA2C;QACjE,OAAOC,aAAA,GAAgB,IAAIH,MAAA,GAASC,KAAA,GAAQ;MAC9C;MAEA,OAAOb,cAAA,CAAe,CAAC,IAAIY,MAAA;IAC7B;IAEA,OAAO;EACT;EAEA;;;EAGA,IAAMI,mBAAA,GAAsB,SAAAA,CAAA;QACTd,wBAAA;IAAjB,IAAMC,QAAA,GAAW,CAAAD,wBAAA,GAAAb,WAAA,CAAYe,OAAO,CAACxD,GAAG,cAAvBsD,wBAAA,cAAAA,wBAAA,GAA2B;QAC3BG,wBAAA;IAAjB,IAAMC,QAAA,GAAW,CAAAD,wBAAA,GAAAhB,WAAA,CAAYe,OAAO,CAACzD,GAAG,cAAvB0D,wBAAA,cAAAA,wBAAA,GAA2B;IAC5C,IAAMhD,MAAA,GAASoC,UAAA,CAAWvC,MAAM,GAAGuC,UAAA,CAAWrC,MAAM;IAEpD,IAAIC,MAAA,GAAS8C,QAAA,EAAU;MACrB,OAAOA,QAAA,GAAWc,MAAA,CAAO,CAAC5D,MAAA,GAAS8C,QAAO,IAAK;IACjD,OAAO,IAAI9C,MAAA,GAASiD,QAAA,EAAU;MAC5B,OAAOA,QAAA,GAAWW,MAAA,CAAO,CAAC5D,MAAA,GAASiD,QAAO,IAAK;IACjD;IAEA,OAAOjD,MAAA;EACT;EAEA,IAAM6D,gBAAA,GAAmB,SAAAA,CAAA;QAACC,OAAA,GAAAC,SAAA,CAAAT,MAAA,QAAAS,SAAA,iBAAAA,SAAA,MAAmC,CAAC;QAUhCC,gBAAA,EACKC,oBAAA,EAO/BC,sCAAA,EAAmDC,uBAAA;QAhBnDC,mBAAA;IADF,IAAMC,WAAA,GACJ,CAAAD,mBAAA,GAAA/F,KAAA,CAAMiG,QAAQ,CAACC,GAAG,CAAC9D,QAAA,EAAU,UAAC+D,KAAA,EAAwBC,CAAA;MACpD,IAAMC,IAAA,GAAO5C,WAAA,CAAYiB,OAAO,CAAC,QAAC,CAAU4B,MAAA,CAAFF,CAAA,EAAI;UAEpCG,gBAAA,EACDC,iBAAA;MAFT,OAAO;QACLtB,MAAA,EAAQ,CAAAqB,gBAAA,GAAAF,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAMI,UAAU,cAAhBF,gBAAA,cAAAA,gBAAA,GAAoB;QAC5BpB,KAAA,EAAO,CAAAqB,iBAAA,GAAAH,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAMK,WAAW,cAAjBF,iBAAA,cAAAA,iBAAA,GAAqB;MAC9B;IACF,gBANAT,mBAAA,cAAAA,mBAAA,GAMM,EAAE;QAEkBY,4BAAA;IAA5B,IAAMC,mBAAA,GAAsB,CAAAD,4BAAA,IAAAhB,gBAAA,GAAA1B,OAAA,CAAQS,OAAO,cAAfiB,gBAAA,uBAAAA,gBAAA,CAAiBe,WAAW,cAA5BC,4BAAA,cAAAA,4BAAA,GAAgC;QAC3BE,gCAAA;IAAjC,IAAMC,wBAAA,GAA2B,CAAAD,gCAAA,IAAAjB,oBAAA,GAAA1B,WAAA,CAAYQ,OAAO,cAAnBkB,oBAAA,uBAAAA,oBAAA,CAAqBc,WAAW,cAAhCG,gCAAA,cAAAA,gCAAA,GAAoC;IACrE,IAAME,eAAA,GAAkBf,WAAA,CAAYgB,MAAM,CACxC,UAACC,GAAA,EAAaC,KAAA;aAA8BA,KAAA,CAAM/B,KAAK,GAAG8B,GAAA;OAC1D;IAEF,IAAME,YAAA,GACJnB,WAAA,CAAYf,MAAM,IAAItB,WAAA,CAAYe,OAAO,CAACvD,MAAM,CAAC8D,MAAM,IACvD,EAAAY,sCAAA,GAAAlC,WAAA,CAAYe,OAAO,CAACvD,MAAM,CAACqB,UAAA,CAAW,cAAtCqD,sCAAA,uBAAAA,sCAAA,CAAwCX,MAAM,QAAKY,uBAAA,GAAAE,WAAW,CAACxD,UAAA,CAAW,cAAvBsD,uBAAA,uBAAAA,uBAAA,CAAyBZ,MAAM;IAEpFvB,WAAA,CAAYe,OAAO,GAAG;MACpB5D,cAAA,EAAgB8F,mBAAA;MAChB7F,mBAAA,EAAqB+F,wBAAA;MACrB9F,UAAA,EAAY+F,eAAA;MACZ7F,GAAA,EAAKR,OAAA,CAAQ;QACXS,MAAA,EAAQ6E,WAAA;QACRjF,mBAAA,EAAqB+F,wBAAA;QACrBzC,uBAAA,EAAAA;MACF;MACApD,GAAA,EAAKN,OAAA,CAAQ;QACXG,cAAA,EAAgB8F,mBAAA;QAChB5F,UAAA,EAAY+F,eAAA;QACZ5F,MAAA,EAAQ6E,WAAA;QACRjF,mBAAA,EAAqB+F,wBAAA;QACrBzC,uBAAA,EAAAA,uBAAA;QACAnB,KAAA,EAAAA;MACF;MACA/B,MAAA,EAAQ6E,WAAA;MACR5E,cAAA,EAAgB2F,eAAA,IAAmBH;IACrC;IAEA5C,aAAA,CAAc,UAACoD,SAAA;UAGFC,kBAAA;aAHiBC,oBAAA,CAAAC,cAAA,KACzBH,SAAA;QACH5F,MAAA,EAAQ2F,YAAA,GAAetC,eAAA,CAAgBrC,UAAA,IAAc4E,SAAA,CAAU5F,MAAM;QACrEF,SAAA,EAAW,CAAA+F,kBAAA,GAAA5B,OAAA,CAAQnE,SAAS,cAAjB+F,kBAAA,cAAAA,kBAAA,GAAqBD,SAAA,CAAU5F,MAAM,KAAK8C,cAAA,CAAe8C,SAAA,CAAU5F,MAAM;;IACtF;EACF;EAEA,IAAMgG,QAAA,GAAW,SAAAA,CAAA;IACf,IAAIzD,UAAA,CAAWzC,SAAS,KAAKC,SAAA,EAAW;MACtCiE,gBAAA,CAAiB;QAAElE,SAAA,EAAW;MAAM;IACtC;EACF;EAEAlB,sBAAA,CAAuB+D,MAAA,EAAQ,UAAUqD,QAAA;EAEzClH,yBAAA,CAA0B;IACxBkF,gBAAA,CAAiB;MAAElE,SAAA,EAAW;IAAM;EACtC,GAAG,CAACc,QAAA,EAAUc,KAAA,EAAOZ,UAAA,CAAW;EAEhChC,yBAAA,CAA0B;IACxB,IAAIyD,UAAA,CAAWzC,SAAS,KAAKC,SAAA,EAAW;MACtCyC,aAAA,CAAc,UAACoD,SAAA;eAAeE,oBAAA,CAAAC,cAAA,KACzBH,SAAA;UACH9F,SAAA,EAAW;UACXI,MAAA,EAAQ;UACRF,MAAA,EAAQqD,eAAA,CAAgBrC,UAAA,aAAAA,UAAA,cAAAA,UAAA,GAAc;;;IAE1C;EACF,GAAG,CAACA,UAAA,CAAW;EAEf,IAAMiF,SAAA,GAAY,SAAAA,CAACC,KAAA;IACjB5E,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAWN,UAAA,GAAa;IACxBO,WAAA,aAAAA,WAAA,uBAAAA,WAAA,CAAc2E,KAAA;EAChB;EAEA,IAAMC,UAAA,GAAa,SAAAA,CAACD,KAAA;IAClB5E,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAWN,UAAA,GAAa;IACxBQ,WAAA,aAAAA,WAAA,uBAAAA,WAAA,CAAc0E,KAAA;EAChB;EAEA;;;EAGA,IAAME,SAAA,GAAY,SAAAA,CAACC,CAAA;IACjB,IAAMC,YAAA,GAAe/D,UAAC,CAAWrC,MAAM,GAAGmG,CAAA,CAAEE,QAAQ,GAAI,MAAM;QAEJvD,wBAAA;IAD1D,IAAMwD,KAAA,GACJjE,UAAA,CAAWvC,MAAM,GAAGuC,UAAA,CAAWrC,MAAM,GAAGoG,YAAA,IAAgB,CAAAtD,wBAAA,GAAAb,WAAA,CAAYe,OAAO,CAACxD,GAAG,cAAvBsD,wBAAA,cAAAA,wBAAA,GAA2B;IACrF,IAAMyD,SAAA,GAAYlE,UAAA,CAAWrC,MAAM,GAAG,IAAI,IAAI,CAAC;IAE/C;IACA,IAAIoD,WAAA,GAAcnB,WAAA,CAAYe,OAAO,CAACvD,MAAM,CAAC6F,MAAM,CACjD,UAACC,GAAA,EAAaiB,IAAA,EAA0BC,KAAA;MACtC,IAAMC,aAAA,GAAgBC,IAAA,CAAKC,GAAG,CAAC3E,WAAA,CAAYe,OAAO,CAACvD,MAAM,CAAC8F,GAAA,CAAI,CAAC/B,MAAM,GAAG8C,KAAA;MACxE,IAAMO,YAAA,GAAeF,IAAA,CAAKC,GAAG,CAACJ,IAAA,CAAKhD,MAAM,GAAG8C,KAAA;MAE5C,OAAOI,aAAA,GAAgBG,YAAA,GAAetB,GAAA,GAAMkB,KAAA;IAC9C,GACA3F,UAAA;IAGF,IAAIsC,WAAA,KAAgBtC,UAAA,EAAY;MAC9B,IAAIwC,WAAA,GAAcxC,UAAA,GAAayF,SAAA;MAE/B,IAAIjD,WAAA,IAAe,KAAKA,WAAA,GAAcrB,WAAA,CAAYe,OAAO,CAACvD,MAAM,CAAC8D,MAAM,EAAE;QACvE,IAAIoD,IAAA,CAAKC,GAAG,CAACvE,UAAA,CAAWrC,MAAM,IAAIiC,WAAA,CAAYe,OAAO,CAACvD,MAAM,CAAC6D,WAAA,CAAY,CAACG,KAAK,GAAG,MAAM;UACtFL,WAAA,GAAcE,WAAA;QAChB;MACF;IACF;IAEA,OAAOF,WAAA;EACT;EAEA,IAAM0D,OAAA,GAAU,SAAAA,CAACX,CAAA;IACfA,CAAA,CAAEY,aAAa,CAACC,eAAe;IAC/B9F,WAAA,aAAAA,WAAA,uBAAAA,WAAA,CAAciF,CAAA;IACd7D,aAAA,CAAc,UAACoD,SAAA;aAAeE,oBAAA,CAAAC,cAAA,KAAKH,SAAA;QAAW9F,SAAA,EAAW;;;EAC3D;EAEA,IAAMqH,OAAA,GAAU,SAAAA,CAACd,CAAA;IACf,IAAIlF,eAAA,IAAmB,CAACgB,WAAA,CAAYe,OAAO,CAACtD,cAAc,EAAE;MAC1DyG,CAAA,CAAEY,aAAa,CAACG,cAAc;MAE9B,IAAIf,CAAA,CAAEgB,QAAQ,EAAE;QACd,IAAI9E,UAAA,CAAWrC,MAAM,KAAKmG,CAAA,CAAErG,MAAM,EAAE;UAClCwC,aAAA,CAAc,UAACoD,SAAA;mBAAeE,oBAAA,CAAAC,cAAA,KACzBH,SAAA;cACH1F,MAAA,EAAQmG,CAAA,CAAErG,MAAM;cAChBC,QAAA,EAAUoG,CAAA,CAAEgB;;;QAEhB;MACF;IACF;EACF;EAEA,IAAMC,KAAA,GAAQ,SAAAA,CAACjB,CAAA;IACb,IAAM/C,WAAA,GAAc+C,CAAA,CAAEkB,OAAO,GAAGnB,SAAA,CAAUC,CAAA,IAAKrF,UAAA,aAAAA,UAAA,cAAAA,UAAA,GAAc;IAC7DK,SAAA,aAAAA,SAAA,uBAAAA,SAAA,CAAYgF,CAAA,EAAG/C,WAAA;IAEf,IAAMkE,cAAA,GAAyC;MAC7C1H,SAAA,EAAW;MACXG,QAAA,EAAU;MACVC,MAAA,EAAQ;IACV;IAEA,IAAMuH,WAAA,GAAc3D,mBAAA;IACpB,IAAIR,WAAA,KAAgBtC,UAAA,EAAY;MAC9B;MACAwG,cAAA,CAAexH,MAAM,GAAGyH,WAAA;IAC1B;IAEAjF,aAAA,CAAc,UAACoD,SAAA;aAAeG,cAAA,KAAKH,SAAA,EAAc4B,cAAA;;IACjD,IAAIlE,WAAA,KAAgBtC,UAAA,EAAY;MAC9BM,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAWgC,WAAA;IACb;EACF;EAEA,IAAMnD,MAAA,GAASoC,UAAA,CAAWtC,QAAQ,GAAG6D,mBAAA,KAAwBvB,UAAA,CAAWvC,MAAM;EAE9E,IAAM0H,UAAA,GAAa;IACjBC,eAAA,EAAiB,aAAC,CAAoB7C,MAAA,CAAP3E,MAAA,EAAO;IACtCyH,SAAA,EAAW,aAAC,CAAoB9C,MAAA,CAAP3E,MAAA,EAAO;IAChC0H,gBAAA,EAAkBtF,UAAA,CAAWzC,SAAS,GAClC,oBAAC,CAAuCgF,MAAA,CAAnB1F,kBAAA,EAAmB,mCACxC;IACJ0I,UAAA,EAAYvF,UAAA,CAAWzC,SAAS,GAC5B,YAAC,CAA+BgF,MAAA,CAAnB1F,kBAAA,EAAmB,mCAChC;EACN;EAEA,IAAM2I,WAAA,GAAc,SAAAA,CAACC,QAAA,EAAiChH,UAAA;IACpDiB,WAAA,CAAYiB,OAAO,CAAC,QAAC,CAAmB4B,MAAA,CAAX9D,UAAA,EAAa,GAAGgH,QAAA;EAC/C;EAEA;EACA,IAAMC,YAAA,GAAe,CAAC9F,WAAA,CAAYe,OAAO,CAACtD,cAAc,IAAI2C,UAAA,CAAWvC,MAAM,GAAG;MAOzEkI,+BAAA;EALP,IAAMC,aAAA,GACJ,CAAChG,WAAA,CAAYe,OAAO,CAACtD,cAAc;EACnC;EACC8B,KAAC,KAAU,UACVS,WAAA,CAAYe,OAAO,CAAC5D,cAAc,GAAGiD,UAAA,CAAWvC,MAAM,IACnD,CAAAkI,+BAAA,GAAA/F,WAAA,CAAYe,OAAO,CAAC1D,UAAU,cAA9B0I,+BAAA,cAAAA,+BAAA,GAAkC;EACrC;EACCxG,KAAA,KAAU,UAAUV,UAAA,GAAamB,WAAA,CAAYe,OAAO,CAACvD,MAAM,CAAC8D,MAAM,GAAG,CAAC;EAE3E,IAAMvC,WAAA,GAAcC,eAAA,IAAmB,CAACgB,WAAA,CAAYe,OAAO,CAACtD,cAAc;EAE1E,oBACEpB,KAAA,CAAA4J,aAAA,CAACrJ,aAAA,EAAA+G,oBAAA,CAAAC,cAAA,KACKhE,SAAA;IACJsG,aAAA,EAAe5J,UAAA,oBAEbiD,KAAA,KAAU,6CACVZ,UAAA,KAAe,6CACfI,WAAA;IAEFP,UAAA,EAAY8B;mBAEZjE,KAAA,CAAA4J,aAAA,CAACnJ,KAAA;IACCqJ,SAAS;IACTC,QAAA,EAAUvB,OAAA;IACVG,OAAA,EAASA,OAAA;IACTG,KAAA,EAAOA,KAAA;IACPkB,KAAA,EAAO;MAAE7E,KAAA,EAAO7C,UAAA,KAAe,WAAW,SAASA;IAAW;IAC9DH,UAAA,EAAY+B,WAAA;IACZ+F,YAAA;kBAEAjK,KAAA,CAAA4J,aAAA,CAAC;IAAIE,SAAS;IAAgCE,KAAA,EAAOd;KAClDlJ,KAAA,CAAMiG,QAAQ,CAACC,GAAG,CAAC9D,QAAA,EAAU,UAAC8F,IAAA,EAAuB9B,CAAA;wBACpDpG,KAAA,CAAA4J,aAAA,CAAC;MACCE,SAAS;MACTI,GAAA,EAAK,QAAC,CAAU5D,MAAA,CAAFF,CAAA;MACd+D,GAAA,EAAK,SAAAA,CAACC,EAAA;eAAOb,WAAA,CAAYa,EAAA,EAAIhE,CAAA;;OAE5B8B,IAAA;QAMRjG,OAAA,iBACCjC,KAAA,CAAA4J,aAAA,CAAC;IACC;IACAE,SAAA,EAAW7J,UAAA,6BAA2C2B,aAAa,CAACK,OAAA,CAAQ;KAE3EjC,KAAA,CAAMiG,QAAQ,CAACC,GAAG,CAAC9D,QAAA,EAAU,UAAC+D,KAAA,EAAwBgC,KAAA;wBACrDnI,KAAA,CAAA4J,aAAA,CAAC;MACCE,SAAA,EAAW7J,UAAA,4BAETkI,KAAA,KAAU3F,UAAA;MAEZ0H,GAAA,EAAK/B;;OAMZhF,UAAA,IAAciB,UAAA,IAAcqF,YAAA,iBAC3BzJ,KAAA,CAAA4J,aAAA,CAACpJ,WAAA;IACCsJ,SAAS;IACT7B,SAAA,EAAU;IACVoC,OAAA,EAAS5C,SAAA;IACT6C,IAAA,EAAMhH;MAGTH,UAAA,IAAciB,UAAA,IAAcuF,aAAA,iBAC3B3J,KAAA,CAAA4J,aAAA,CAACpJ,WAAA;IACCsJ,SAAS;IACT7B,SAAA,EAAU;IACVoC,OAAA,EAAS1C,UAAA;IACT2C,IAAA,EAAMhH;;AAKhB"},"metadata":{},"sourceType":"module"}