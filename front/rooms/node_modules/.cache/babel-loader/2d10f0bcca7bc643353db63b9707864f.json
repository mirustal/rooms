{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { _ as _to_consumable_array } from \"@swc/helpers/_/_to_consumable_array\";\nimport * as React from \"react\";\nimport { classNames, noop } from \"@vkontakte/vkjs\";\nimport mitt from \"mitt\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useAdaptivityHasPointer } from \"../../hooks/useAdaptivityHasPointer\";\nimport { useBooleanState } from \"../../hooks/useBooleanState\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useFocusVisible } from \"../../hooks/useFocusVisible\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { shouldTriggerClickOnEnterOrSpace } from \"../../lib/accessibility\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { callMultiple } from \"../../lib/callMultiple\";\nimport { getOffsetRect } from \"../../lib/offset\";\nimport { Platform } from \"../../lib/platform\";\nimport { coordX, coordY } from \"../../lib/touch\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { FocusVisible } from \"../FocusVisible/FocusVisible\";\nimport { Touch } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nvar sizeXClassNames = {\n  none: \"vkuiTappable--sizeX-none\",\n  compact: \"vkuiTappable--sizeX-compact\"\n};\nvar stylesHoverMode = {\n  background: \"vkuiTappable--hover-background\",\n  opacity: \"vkuiTappable--hover-opacity\"\n};\nvar stylesActiveMode = {\n  background: \"vkuiTappable--active-background\",\n  opacity: \"vkuiTappable--active-opacity\"\n};\nvar WAVE_LIVE = 225;\nexport var ACTIVE_DELAY = 70;\nexport var ACTIVE_EFFECT_DELAY = 600;\nvar activeBus = mitt();\nvar TapState = {\n  none: 0,\n  pending: 1,\n  active: 2,\n  exiting: 3\n};\nvar TappableContext = /*#__PURE__*/React.createContext({\n  onHoverChange: noop\n});\nfunction isPresetStateMode(stateMode) {\n  switch (stateMode) {\n    case \"opacity\":\n    case \"background\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction useActivity(hasActive, stopDelay) {\n  var id = React.useMemo(function () {\n    return Math.round(Math.random() * 1e8).toString(16);\n  }, []);\n  var _React_useState = _sliced_to_array(React.useState(TapState.none), 2),\n    activity = _React_useState[0],\n    setActivity = _React_useState[1];\n  var _stop = function () {\n    return setActivity(TapState.none);\n  };\n  var start = function () {\n    return hasActive && setActivity(TapState.active);\n  };\n  var delayStart = function () {\n    hasActive && setActivity(TapState.pending);\n  };\n  var activeTimeout = useTimeout(start, ACTIVE_DELAY);\n  var stopTimeout = useTimeout(_stop, stopDelay);\n  useIsomorphicLayoutEffect(function () {\n    if (activity === TapState.pending) {\n      activeTimeout.set();\n      return activeTimeout.clear;\n    }\n    if (activity === TapState.exiting) {\n      return stopTimeout.clear;\n    }\n    if (activity === TapState.active) {\n      activeBus.emit(\"active\", id);\n    }\n    return noop;\n  }, [activity]);\n  useIsomorphicLayoutEffect(function () {\n    if (activity === TapState.none) {\n      return noop;\n    }\n    var onActiveChange = function (activeId) {\n      activeId !== id && _stop();\n    };\n    activeBus.on(\"active\", onActiveChange);\n    return function () {\n      return activeBus.off(\"active\", onActiveChange);\n    };\n  }, [activity === TapState.none]);\n  useIsomorphicLayoutEffect(function () {\n    !hasActive && _stop();\n  }, [hasActive]);\n  var stop = function (delay) {\n    if (delay) {\n      setActivity(TapState.exiting);\n      return stopTimeout.set(delay);\n    }\n    _stop();\n  };\n  return [activity, {\n    delayStart: delayStart,\n    start: start,\n    stop: stop\n  }];\n}\n/**\n * @see https://vkcom.github.io/VKUI/#/Tappable\n */\nexport var Tappable = function (_param) {\n  var onKeyDown =\n  /*\n  * [a11y]\n  * Обрабатывает событие onkeydown\n  * для кастомных доступных элементов:\n  * - role=\"link\" (активация по Enter)\n  * - role=\"button\" (активация по Space и Enter)\n  */\n  function onKeyDown(e) {\n    if (isCustomElement && shouldTriggerClickOnEnterOrSpace(e)) {\n      var _containerRef_current;\n      e.preventDefault();\n      (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.click();\n    }\n  };\n  var addClick = function addClick(x, y) {\n    var dateNow = Date.now();\n    var filteredClicks = clicks.filter(function (click) {\n      return click.id + WAVE_LIVE > dateNow;\n    });\n    setClicks(_to_consumable_array(filteredClicks).concat([{\n      x: x,\n      y: y,\n      id: dateNow\n    }]));\n    clearClicks.set();\n  };\n  var onStart = function onStart(param) {\n    var originalEvent = param.originalEvent;\n    if (hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        // r сожалению я так и не понял, что это делает и можно ли упихнуть его в Touch\n        return stop();\n      }\n      if (needWaves) {\n        var _getOffsetRect = getOffsetRect(containerRef.current),\n          top = _getOffsetRect.top,\n          left = _getOffsetRect.left;\n        var x = coordX(originalEvent) - (left !== null && left !== void 0 ? left : 0);\n        var y = coordY(originalEvent) - (top !== null && top !== void 0 ? top : 0);\n        addClick(x, y);\n      }\n      delayStart();\n    }\n  };\n  var onMove = function onMove(param) {\n    var isSlide = param.isSlide;\n    if (isSlide) {\n      stop();\n    }\n  };\n  var onEnd = function onEnd(param) {\n    var duration = param.duration;\n    if (activity === TapState.none) {\n      return;\n    }\n    if (activity === TapState.pending) {\n      // активировать при коротком тапе\n      start();\n    }\n    // отключить без задержки при длинном тапе\n    var activeDuration = duration - ACTIVE_DELAY;\n    stop(activeDuration >= 100 ? 0 : activeEffectDelay - activeDuration);\n  };\n  var children = _param.children,\n    Component = _param.Component,\n    onClick = _param.onClick,\n    _onKeyDown = _param.onKeyDown,\n    _param_activeEffectDelay = _param.activeEffectDelay,\n    activeEffectDelay = _param_activeEffectDelay === void 0 ? ACTIVE_EFFECT_DELAY : _param_activeEffectDelay,\n    _param_stopPropagation = _param.stopPropagation,\n    stopPropagation = _param_stopPropagation === void 0 ? false : _param_stopPropagation,\n    getRootRef = _param.getRootRef,\n    tmp = _param.hasHover,\n    _hasHover = tmp === void 0 ? true : tmp,\n    _param_hoverMode = _param.hoverMode,\n    hoverMode = _param_hoverMode === void 0 ? \"background\" : _param_hoverMode,\n    tmp1 = _param.hasActive,\n    _hasActive = tmp1 === void 0 ? true : tmp1,\n    _param_activeMode = _param.activeMode,\n    activeMode = _param_activeMode === void 0 ? \"background\" : _param_activeMode,\n    _param_focusVisibleMode = _param.focusVisibleMode,\n    focusVisibleMode = _param_focusVisibleMode === void 0 ? \"inside\" : _param_focusVisibleMode,\n    onEnter = _param.onEnter,\n    onLeave = _param.onLeave,\n    className = _param.className,\n    hoveredProp = _param.hovered,\n    activatedProp = _param.activated,\n    _param_borderRadiusMode = _param.borderRadiusMode,\n    borderRadiusMode = _param_borderRadiusMode === void 0 ? \"auto\" : _param_borderRadiusMode,\n    props = _object_without_properties(_param, [\"children\", \"Component\", \"onClick\", \"onKeyDown\", \"activeEffectDelay\", \"stopPropagation\", \"getRootRef\", \"hasHover\", \"hoverMode\", \"hasActive\", \"activeMode\", \"focusVisibleMode\", \"onEnter\", \"onLeave\", \"className\", \"hovered\", \"activated\", \"borderRadiusMode\"]);\n  Component = Component || (props.href ? \"a\" : \"div\");\n  var onHoverChange = React.useContext(TappableContext).onHoverChange;\n  var insideTouchRoot = React.useContext(TouchRootContext);\n  var platform = usePlatform();\n  var _useFocusVisible = useFocusVisible(),\n    focusVisible = _useFocusVisible.focusVisible,\n    onBlur = _useFocusVisible.onBlur,\n    onFocus = _useFocusVisible.onFocus;\n  var _useAdaptivity = useAdaptivity(),\n    _useAdaptivity_sizeX = _useAdaptivity.sizeX,\n    sizeX = _useAdaptivity_sizeX === void 0 ? \"none\" : _useAdaptivity_sizeX,\n    tmp2 = _useAdaptivity.hasHover,\n    hasHoverContext = tmp2 === void 0 ? true : tmp2;\n  var hasPointerContext = useAdaptivityHasPointer();\n  var _React_useState = _sliced_to_array(React.useState([]), 2),\n    clicks = _React_useState[0],\n    setClicks = _React_useState[1];\n  var _React_useState1 = _sliced_to_array(React.useState(false), 2),\n    childHover = _React_useState1[0],\n    setChildHover = _React_useState1[1];\n  var _useBooleanState = useBooleanState(false),\n    _hovered = _useBooleanState.value,\n    setHoveredTrue = _useBooleanState.setTrue,\n    setHoveredFalse = _useBooleanState.setFalse;\n  var hovered = (_hovered || hoveredProp) && !props.disabled;\n  var hasActive = _hasActive && !childHover && !props.disabled;\n  var hasHover = hasHoverContext && _hasHover && !childHover;\n  var isCustomElement = Component !== \"a\" && Component !== \"button\" && Component !== \"label\" && !props.contentEditable;\n  var isPresetHoverMode = isPresetStateMode(hoverMode);\n  var isPresetActiveMode = isPresetStateMode(activeMode);\n  var isPresetFocusVisibleMode = [\"inside\", \"outside\"].includes(focusVisibleMode);\n  var _useActivity = _sliced_to_array(useActivity(hasActive, activeEffectDelay), 2),\n    activity = _useActivity[0],\n    _useActivity_ = _useActivity[1],\n    start = _useActivity_.start,\n    stop = _useActivity_.stop,\n    delayStart = _useActivity_.delayStart;\n  var active = activity === TapState.active || activity === TapState.exiting;\n  var activated = (active || activatedProp) && !props.disabled;\n  var containerRef = useExternRef(getRootRef);\n  // hover propagation\n  var childContext = React.useRef({\n    onHoverChange: setChildHover\n  }).current;\n  useIsomorphicLayoutEffect(function () {\n    if (!hovered) {\n      return noop;\n    }\n    onHoverChange(true);\n    return function () {\n      return onHoverChange(false);\n    };\n  }, [hovered]);\n  var needWaves = platform === Platform.ANDROID && !hasPointerContext && hasActive && activeMode === \"background\";\n  var clearClicks = useTimeout(function () {\n    return setClicks([]);\n  }, WAVE_LIVE);\n  var classes = classNames(className, \"vkuiTappable\", \"vkuiInternalTappable\", platform === Platform.IOS && \"vkuiTappable--ios\", sizeX !== SizeType.REGULAR && sizeXClassNames[sizeX], hasHover && \"vkuiTappable--hasHover\", hasActive && \"vkuiTappable--hasActive\", hasHover && hovered && !isPresetHoverMode && hoverMode, hasActive && activated && !isPresetActiveMode && activeMode, focusVisible && !isPresetFocusVisibleMode && focusVisibleMode, hasHover && hovered && isPresetHoverMode && stylesHoverMode[hoverMode], hasActive && activated && isPresetActiveMode && stylesActiveMode[activeMode], focusVisible && \"vkuiTappable--focus-visible\", borderRadiusMode === \"inherit\" && \"vkuiTappable--borderRadiusInherit\");\n  var handlers = {\n    onStart: callMultiple(onStart, props.onStart),\n    onMove: callMultiple(onMove, props.onMove),\n    onEnd: callMultiple(onEnd, props.onEnd),\n    onClick: onClick,\n    onKeyDown: callMultiple(onKeyDown, _onKeyDown)\n  };\n  var role = props.href ? \"link\" : \"button\";\n  return /*#__PURE__*/React.createElement(Touch, _object_spread(_object_spread_props(_object_spread({\n    onEnter: callMultiple(setHoveredTrue, onEnter),\n    onLeave: callMultiple(setHoveredFalse, onLeave),\n    type: Component === \"button\" ? \"button\" : undefined,\n    tabIndex: isCustomElement && !props.disabled ? 0 : undefined,\n    role: isCustomElement ? role : undefined,\n    \"aria-disabled\": isCustomElement ? props.disabled : undefined,\n    stopPropagation: stopPropagation && !insideTouchRoot && !props.disabled\n  }, props), {\n    slideThreshold: 20,\n    usePointerHover: true,\n    className: classes,\n    Component: Component,\n    getRootRef: containerRef,\n    onBlur: callMultiple(onBlur, props.onBlur),\n    onFocus: callMultiple(onFocus, props.onFocus)\n  }), props.disabled ? {} : handlers), /*#__PURE__*/React.createElement(TappableContext.Provider, {\n    value: childContext\n  }, children), needWaves && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    className: \"vkuiTappable__waves\"\n  }, clicks.map(function (wave) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: wave.id,\n      className: \"vkuiTappable__wave\",\n      style: {\n        top: wave.y,\n        left: wave.x\n      }\n    });\n  })), (hasHover && hoverMode === \"background\" || hasActive && activeMode === \"background\") && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    className: \"vkuiTappable__stateLayer\"\n  }), !props.disabled && isPresetFocusVisibleMode && /*#__PURE__*/React.createElement(FocusVisible, {\n    visible: focusVisible,\n    mode: focusVisibleMode\n  }));\n};","map":{"version":3,"names":["React","classNames","noop","mitt","useAdaptivity","useAdaptivityHasPointer","useBooleanState","useExternRef","useFocusVisible","usePlatform","useTimeout","shouldTriggerClickOnEnterOrSpace","SizeType","callMultiple","getOffsetRect","Platform","coordX","coordY","useIsomorphicLayoutEffect","FocusVisible","Touch","TouchRootContext","sizeXClassNames","none","compact","stylesHoverMode","background","opacity","stylesActiveMode","WAVE_LIVE","ACTIVE_DELAY","ACTIVE_EFFECT_DELAY","activeBus","TapState","pending","active","exiting","TappableContext","createContext","onHoverChange","isPresetStateMode","stateMode","useActivity","hasActive","stopDelay","id","useMemo","Math","round","random","toString","_React_useState","_sliced_to_array","useState","activity","setActivity","_stop","start","delayStart","activeTimeout","stopTimeout","set","clear","emit","onActiveChange","activeId","on","off","stop","delay","Tappable","_param","onKeyDown","e","isCustomElement","_containerRef_current","preventDefault","containerRef","current","click","addClick","x","y","dateNow","Date","now","filteredClicks","clicks","filter","setClicks","_to_consumable_array","concat","clearClicks","onStart","param","originalEvent","touches","length","needWaves","_getOffsetRect","top","left","onMove","isSlide","onEnd","duration","activeDuration","activeEffectDelay","children","Component","onClick","_onKeyDown","_param_activeEffectDelay","_param_stopPropagation","stopPropagation","getRootRef","tmp","hasHover","_hasHover","_param_hoverMode","hoverMode","tmp1","_hasActive","_param_activeMode","activeMode","_param_focusVisibleMode","focusVisibleMode","onEnter","onLeave","className","hoveredProp","hovered","activatedProp","activated","_param_borderRadiusMode","borderRadiusMode","props","_object_without_properties","href","useContext","insideTouchRoot","platform","_useFocusVisible","focusVisible","onBlur","onFocus","_useAdaptivity","_useAdaptivity_sizeX","sizeX","tmp2","hasHoverContext","hasPointerContext","_React_useState1","childHover","setChildHover","_useBooleanState","_hovered","value","setHoveredTrue","setTrue","setHoveredFalse","setFalse","disabled","contentEditable","isPresetHoverMode","isPresetActiveMode","isPresetFocusVisibleMode","includes","_useActivity","_useActivity_","childContext","useRef","ANDROID","classes","IOS","REGULAR","handlers","role","createElement","_object_spread","_object_spread_props","type","undefined","tabIndex","slideThreshold","usePointerHover","Provider","map","wave","key","style","visible","mode"],"sources":["../../../src/components/Tappable/Tappable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport mitt from 'mitt';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useBooleanState } from '../../hooks/useBooleanState';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useFocusVisible } from '../../hooks/useFocusVisible';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { shouldTriggerClickOnEnterOrSpace } from '../../lib/accessibility';\nimport { SizeType } from '../../lib/adaptivity';\nimport { callMultiple } from '../../lib/callMultiple';\nimport { getOffsetRect } from '../../lib/offset';\nimport { Platform } from '../../lib/platform';\nimport { coordX, coordY } from '../../lib/touch';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport {\n  AnchorHTMLAttributesOnly,\n  HasChildren,\n  HasComponent,\n  HasRootRef,\n  LiteralUnion,\n} from '../../types';\nimport { FocusVisible, FocusVisibleMode } from '../FocusVisible/FocusVisible';\nimport { Touch, TouchEvent, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport styles from './Tappable.module.css';\n\nconst sizeXClassNames = {\n  none: styles['Tappable--sizeX-none'],\n  compact: styles['Tappable--sizeX-compact'],\n};\n\nconst stylesHoverMode = {\n  background: styles['Tappable--hover-background'],\n  opacity: styles['Tappable--hover-opacity'],\n};\n\nconst stylesActiveMode = {\n  background: styles['Tappable--active-background'],\n  opacity: styles['Tappable--active-opacity'],\n};\n\ntype StateMode = 'opacity' | 'background';\n\nconst WAVE_LIVE = 225;\n\nexport type TappableElementProps = Omit<\n  React.AllHTMLAttributes<HTMLElement>,\n  | 'onTouchStart'\n  | 'onTouchMove'\n  | 'onTouchEnd'\n  | 'onTouchCancel'\n  | 'onMouseDown'\n  | 'onMouseMove'\n  | 'onMouseUp'\n  | 'onMouseLeave'\n> &\n  AnchorHTMLAttributesOnly; // В AllHTMLAttributes не хватает типов для ссылок\n\nexport interface TappableProps\n  extends TappableElementProps,\n    HasRootRef<HTMLElement>,\n    HasComponent,\n    HasChildren,\n    Pick<TouchProps, 'onStart' | 'onEnd' | 'onMove'> {\n  /**\n   * Длительность показа active-состояния\n   */\n  activeEffectDelay?: number;\n  stopPropagation?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на hover-состояние\n   */\n  hasHover?: boolean;\n  /**\n   * Позволяет управлять hovered-состоянием извне\n   */\n  hovered?: boolean;\n  /**\n   * Позволяет управлять activated-состоянием извне\n   */\n  activated?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на active-состояние\n   */\n  hasActive?: boolean;\n  /**\n   * Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active\n   */\n  activeMode?: LiteralUnion<StateMode, string>;\n  /**\n   * Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover\n   */\n  hoverMode?: LiteralUnion<StateMode, string>;\n  /**\n   * Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс во время focus-visible\n   */\n  focusVisibleMode?: LiteralUnion<FocusVisibleMode, string>;\n  onEnter?(outputEvent: MouseEvent): void;\n  onLeave?(outputEvent: MouseEvent): void;\n  /**\n   * Задает border-radius элементу\n   * В режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`\n   */\n  borderRadiusMode?: 'auto' | 'inherit';\n}\n\ninterface Wave {\n  x: number;\n  y: number;\n  id: number;\n}\n\nexport interface RootComponentProps extends TouchProps {\n  ref?: React.Ref<HTMLElement>;\n}\n\nexport const ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nconst activeBus = mitt<{ active: string }>();\nconst TapState = { none: 0, pending: 1, active: 2, exiting: 3 } as const;\n\ntype TappableContextInterface = { onHoverChange: (s: boolean) => void };\nconst TappableContext = React.createContext<TappableContextInterface>({\n  onHoverChange: noop,\n});\n\nfunction isPresetStateMode(stateMode: LiteralUnion<StateMode, string>): stateMode is StateMode {\n  switch (stateMode) {\n    case 'opacity':\n    case 'background':\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction useActivity(hasActive: boolean, stopDelay: number) {\n  const id = React.useMemo(() => Math.round(Math.random() * 1e8).toString(16), []);\n\n  const [activity, setActivity] = React.useState<(typeof TapState)[keyof typeof TapState]>(\n    TapState.none,\n  );\n  const _stop = () => setActivity(TapState.none);\n  const start = () => hasActive && setActivity(TapState.active);\n  const delayStart = () => {\n    hasActive && setActivity(TapState.pending);\n  };\n\n  const activeTimeout = useTimeout(start, ACTIVE_DELAY);\n  const stopTimeout = useTimeout(_stop, stopDelay);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.pending) {\n      activeTimeout.set();\n      return activeTimeout.clear;\n    }\n    if (activity === TapState.exiting) {\n      return stopTimeout.clear;\n    }\n    if (activity === TapState.active) {\n      activeBus.emit('active', id);\n    }\n    return noop;\n  }, [activity]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.none) {\n      return noop;\n    }\n    const onActiveChange = (activeId: string) => {\n      activeId !== id && _stop();\n    };\n    activeBus.on('active', onActiveChange);\n    return () => activeBus.off('active', onActiveChange);\n  }, [activity === TapState.none]);\n\n  useIsomorphicLayoutEffect(() => {\n    !hasActive && _stop();\n  }, [hasActive]);\n\n  const stop = (delay?: number) => {\n    if (delay) {\n      setActivity(TapState.exiting);\n      return stopTimeout.set(delay);\n    }\n    _stop();\n  };\n\n  return [activity, { delayStart, start, stop }] as const;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tappable\n */\nexport const Tappable = ({\n  children,\n  Component,\n  onClick,\n  onKeyDown: _onKeyDown,\n  activeEffectDelay = ACTIVE_EFFECT_DELAY,\n  stopPropagation = false,\n  getRootRef,\n  hasHover: _hasHover = true,\n  hoverMode = 'background',\n  hasActive: _hasActive = true,\n  activeMode = 'background',\n  focusVisibleMode = 'inside',\n  onEnter,\n  onLeave,\n  className,\n  hovered: hoveredProp,\n  activated: activatedProp,\n  borderRadiusMode = 'auto',\n  ...props\n}: TappableProps) => {\n  Component = Component || ((props.href ? 'a' : 'div') as React.ElementType);\n\n  const { onHoverChange } = React.useContext(TappableContext);\n  const insideTouchRoot = React.useContext(TouchRootContext);\n  const platform = usePlatform();\n  const { focusVisible, onBlur, onFocus } = useFocusVisible();\n  const { sizeX = 'none', hasHover: hasHoverContext = true } = useAdaptivity();\n  const hasPointerContext = useAdaptivityHasPointer();\n\n  const [clicks, setClicks] = React.useState<Wave[]>([]);\n  const [childHover, setChildHover] = React.useState(false);\n  const {\n    value: _hovered,\n    setTrue: setHoveredTrue,\n    setFalse: setHoveredFalse,\n  } = useBooleanState(false);\n\n  const hovered = (_hovered || hoveredProp) && !props.disabled;\n  const hasActive = _hasActive && !childHover && !props.disabled;\n  const hasHover = hasHoverContext && _hasHover && !childHover;\n  const isCustomElement =\n    Component !== 'a' && Component !== 'button' && Component !== 'label' && !props.contentEditable;\n  const isPresetHoverMode = isPresetStateMode(hoverMode);\n  const isPresetActiveMode = isPresetStateMode(activeMode);\n  const isPresetFocusVisibleMode = ['inside', 'outside'].includes(focusVisibleMode);\n\n  const [activity, { start, stop, delayStart }] = useActivity(hasActive, activeEffectDelay);\n  const active = activity === TapState.active || activity === TapState.exiting;\n  const activated = (active || activatedProp) && !props.disabled;\n\n  const containerRef = useExternRef(getRootRef);\n\n  // hover propagation\n  const childContext = React.useRef({ onHoverChange: setChildHover }).current;\n  useIsomorphicLayoutEffect(() => {\n    if (!hovered) {\n      return noop;\n    }\n    onHoverChange(true);\n    return () => onHoverChange(false);\n  }, [hovered]);\n\n  /*\n   * [a11y]\n   * Обрабатывает событие onkeydown\n   * для кастомных доступных элементов:\n   * - role=\"link\" (активация по Enter)\n   * - role=\"button\" (активация по Space и Enter)\n   */\n  function onKeyDown(e: React.KeyboardEvent<HTMLElement>) {\n    if (isCustomElement && shouldTriggerClickOnEnterOrSpace(e)) {\n      e.preventDefault();\n      containerRef.current?.click();\n    }\n  }\n\n  const needWaves =\n    platform === Platform.ANDROID && !hasPointerContext && hasActive && activeMode === 'background';\n\n  const clearClicks = useTimeout(() => setClicks([]), WAVE_LIVE);\n\n  function addClick(x: number, y: number) {\n    const dateNow = Date.now();\n    const filteredClicks = clicks.filter((click) => click.id + WAVE_LIVE > dateNow);\n\n    setClicks([...filteredClicks, { x, y, id: dateNow }]);\n    clearClicks.set();\n  }\n\n  function onStart({ originalEvent }: TouchEvent) {\n    if (hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        // r сожалению я так и не понял, что это делает и можно ли упихнуть его в Touch\n        return stop();\n      }\n\n      if (needWaves) {\n        const { top, left } = getOffsetRect(containerRef.current);\n        const x = coordX(originalEvent) - (left ?? 0);\n        const y = coordY(originalEvent) - (top ?? 0);\n        addClick(x, y);\n      }\n\n      delayStart();\n    }\n  }\n\n  function onMove({ isSlide }: TouchEvent) {\n    if (isSlide) {\n      stop();\n    }\n  }\n\n  function onEnd({ duration }: TouchEvent) {\n    if (activity === TapState.none) {\n      return;\n    }\n    if (activity === TapState.pending) {\n      // активировать при коротком тапе\n      start();\n    }\n\n    // отключить без задержки при длинном тапе\n    const activeDuration = duration - ACTIVE_DELAY;\n    stop(activeDuration >= 100 ? 0 : activeEffectDelay - activeDuration);\n  }\n\n  const classes = classNames(\n    className,\n    styles['Tappable'],\n    'vkuiInternalTappable',\n    platform === Platform.IOS && styles['Tappable--ios'],\n    sizeX !== SizeType.REGULAR && sizeXClassNames[sizeX],\n    hasHover && styles['Tappable--hasHover'],\n    hasActive && styles['Tappable--hasActive'],\n    hasHover && hovered && !isPresetHoverMode && hoverMode,\n    hasActive && activated && !isPresetActiveMode && activeMode,\n    focusVisible && !isPresetFocusVisibleMode && focusVisibleMode,\n    hasHover && hovered && isPresetHoverMode && stylesHoverMode[hoverMode],\n    hasActive && activated && isPresetActiveMode && stylesActiveMode[activeMode],\n    focusVisible && styles['Tappable--focus-visible'],\n    borderRadiusMode === 'inherit' && styles['Tappable--borderRadiusInherit'],\n  );\n\n  const handlers: RootComponentProps = {\n    onStart: callMultiple(onStart, props.onStart),\n    onMove: callMultiple(onMove, props.onMove),\n    onEnd: callMultiple(onEnd, props.onEnd),\n    onClick,\n    onKeyDown: callMultiple(onKeyDown, _onKeyDown),\n  };\n  const role = props.href ? 'link' : 'button';\n\n  return (\n    <Touch\n      onEnter={callMultiple(setHoveredTrue, onEnter)}\n      onLeave={callMultiple(setHoveredFalse, onLeave)}\n      type={Component === 'button' ? 'button' : undefined}\n      tabIndex={isCustomElement && !props.disabled ? 0 : undefined}\n      role={isCustomElement ? role : undefined}\n      aria-disabled={isCustomElement ? props.disabled : undefined}\n      stopPropagation={stopPropagation && !insideTouchRoot && !props.disabled}\n      {...props}\n      slideThreshold={20}\n      usePointerHover\n      className={classes}\n      Component={Component}\n      getRootRef={containerRef}\n      onBlur={callMultiple(onBlur, props.onBlur)}\n      onFocus={callMultiple(onFocus, props.onFocus)}\n      {...(props.disabled ? {} : handlers)}\n    >\n      <TappableContext.Provider value={childContext}>{children}</TappableContext.Provider>\n      {needWaves && (\n        <span aria-hidden className={styles.Tappable__waves}>\n          {clicks.map((wave) => (\n            <span\n              key={wave.id}\n              className={styles.Tappable__wave}\n              style={{ top: wave.y, left: wave.x }}\n            />\n          ))}\n        </span>\n      )}\n      {((hasHover && hoverMode === 'background') || (hasActive && activeMode === 'background')) && (\n        <span aria-hidden className={styles.Tappable__stateLayer} />\n      )}\n      {!props.disabled && isPresetFocusVisibleMode && (\n        <FocusVisible visible={focusVisible} mode={focusVisibleMode as FocusVisibleMode} />\n      )}\n    </Touch>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}