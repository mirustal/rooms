{"ast":null,"code":"var MAX_FONT_SIZE = 30;\nvar MAX_IMAGE_BASE_SIZE = 96;\nvar RELATIVE_SIZE = MAX_FONT_SIZE / MAX_IMAGE_BASE_SIZE;\n/**\n * По возможности выставляем размеры по дизайн-системе. Иначе высчитываем.\n */\nexport function getInitialsFontSize(avatarSize) {\n  if (avatarSize <= 16) {\n    return 5;\n  } else if (avatarSize <= 24) {\n    return 8;\n  } else if (avatarSize <= 32) {\n    return 10;\n  } else if (avatarSize <= 36) {\n    return 13;\n  } else if (avatarSize <= 44) {\n    return 14;\n  } else if (avatarSize <= 48) {\n    return 17;\n  } else if (avatarSize < 56) {\n    return 18;\n  } else if (avatarSize <= 64) {\n    return 21;\n  } else if (avatarSize <= 88) {\n    return 26;\n  } else if (avatarSize <= MAX_IMAGE_BASE_SIZE) {\n    return MAX_FONT_SIZE;\n  }\n  var calculatedFontSize = Math.ceil(avatarSize * RELATIVE_SIZE);\n  var evenFix = calculatedFontSize % 2;\n  return calculatedFontSize + evenFix;\n}","map":{"version":3,"names":["MAX_FONT_SIZE","MAX_IMAGE_BASE_SIZE","RELATIVE_SIZE","getInitialsFontSize","avatarSize","calculatedFontSize","Math","ceil","evenFix"],"sources":["../../../src/components/Avatar/helpers.ts"],"sourcesContent":["import type { ImageBaseSize } from '../ImageBase/ImageBase';\n\nconst MAX_FONT_SIZE = 30;\nconst MAX_IMAGE_BASE_SIZE: ImageBaseSize = 96;\nconst RELATIVE_SIZE = MAX_FONT_SIZE / MAX_IMAGE_BASE_SIZE;\n\n/**\n * По возможности выставляем размеры по дизайн-системе. Иначе высчитываем.\n */\nexport function getInitialsFontSize(avatarSize: number): number {\n  if (avatarSize <= 16) {\n    return 5;\n  } else if (avatarSize <= 24) {\n    return 8;\n  } else if (avatarSize <= 32) {\n    return 10;\n  } else if (avatarSize <= 36) {\n    return 13;\n  } else if (avatarSize <= 44) {\n    return 14;\n  } else if (avatarSize <= 48) {\n    return 17;\n  } else if (avatarSize < 56) {\n    return 18;\n  } else if (avatarSize <= 64) {\n    return 21;\n  } else if (avatarSize <= 88) {\n    return 26;\n  } else if (avatarSize <= MAX_IMAGE_BASE_SIZE) {\n    return MAX_FONT_SIZE;\n  }\n\n  const calculatedFontSize = Math.ceil(avatarSize * RELATIVE_SIZE);\n  const evenFix = calculatedFontSize % 2;\n  return calculatedFontSize + evenFix;\n}\n"],"mappings":"AAEA,IAAMA,aAAA,GAAgB;AACtB,IAAMC,mBAAA,GAAqC;AAC3C,IAAMC,aAAA,GAAgBF,aAAA,GAAgBC,mBAAA;AAEtC;;;AAGA,OAAO,SAASE,oBAAoBC,UAAkB;EACpD,IAAIA,UAAA,IAAc,IAAI;IACpB,OAAO;EACT,OAAO,IAAIA,UAAA,IAAc,IAAI;IAC3B,OAAO;EACT,OAAO,IAAIA,UAAA,IAAc,IAAI;IAC3B,OAAO;EACT,OAAO,IAAIA,UAAA,IAAc,IAAI;IAC3B,OAAO;EACT,OAAO,IAAIA,UAAA,IAAc,IAAI;IAC3B,OAAO;EACT,OAAO,IAAIA,UAAA,IAAc,IAAI;IAC3B,OAAO;EACT,OAAO,IAAIA,UAAA,GAAa,IAAI;IAC1B,OAAO;EACT,OAAO,IAAIA,UAAA,IAAc,IAAI;IAC3B,OAAO;EACT,OAAO,IAAIA,UAAA,IAAc,IAAI;IAC3B,OAAO;EACT,OAAO,IAAIA,UAAA,IAAcH,mBAAA,EAAqB;IAC5C,OAAOD,aAAA;EACT;EAEA,IAAMK,kBAAA,GAAqBC,IAAA,CAAKC,IAAI,CAACH,UAAA,GAAaF,aAAA;EAClD,IAAMM,OAAA,GAAUH,kBAAA,GAAqB;EACrC,OAAOA,kBAAA,GAAqBG,OAAA;AAC9B"},"metadata":{},"sourceType":"module"}